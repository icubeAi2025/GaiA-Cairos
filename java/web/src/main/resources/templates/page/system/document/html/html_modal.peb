<div class="modal" id="htmlPropertyForm">
    <div class="pop_box _sm">
        <div class="pop_header">
            <h5 class="pop_tit" id="doc_property_u_tit">HTML 양식 관리</h5> <!-- HTML 양식 관리 -->
            <div class="btn_area">
                <button type="button" class="icon_btn pop_close" onclick="htmlFormModal.close()">
                    <i class="ic ic-close"></i>
                    <span class="blind">{{ message('item.com.037') }}</span>
                </button>
            </div>
        </div>
        <div class="pop_body">
            <div class="form_box">
                <div class="row">
                    <div class="col">
                        <div class="form_label required">이름</div> <!-- 이름-->
                        <div class="form_data">
                            <div class="item_group formName with_ext">
                                <input type="text" id="formNm" required>
                            </div>
                            <span style="display: inline-block; width: 99%; text-align: right; padding-top: 5px;"><strong>{{ message('msg.doc.001') }} [ <font color="red">\ / : * ? " < > . |</font> ]</strong></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <div class="form_label required">문서 종류</div> <!-- 문서 종류-->
                        <div class="form_data">
							<span class="selectbox" id="htmlFormType" style="z-index: 1;">
								<select id="formType">
									<option selected disabled value="">선택</option>

								</select>
							</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="pop_footer">
            <div class="btn_area jc_e">
                <button type="button" class="btn _outline" onclick="htmlFormModal.close()">{{ message('btn.007') }}</button>
                <button type="button" class="btn _fill" onclick="htmlFormModal.finish()">{{ message('btn.006') }}</button>
            </div>
        </div>
    </div>
</div>
<script>
    const htmlFormModal = {
		//init 함수를 통해 필드 생성 및 모달창 열기
        formNo:'',
        rgstrId:'',
        mode:'',
		checkedValue:{},
		editorObj:[],
        init:function(data,preHandler, finishMethod){
            this.mode = data.mode;
            if(this.mode == 'modify'){
                this.formNo = data.htmlFormDto.formNo;
                this.rgstrId = data.htmlFormDto.rgstrId;
            }
            preHandler('formType');
            const htmlRow = document.getElementById("html_row");
            if(htmlRow){
                htmlRow.remove();
            }
            const formBox = document.querySelector("#htmlPropertyForm > .pop_box > .pop_body > .form_box");
            const row = document.createElement("div");
            row.id = "html_row";
            row.classList.add("row");
            row.innerHTML = `<div class="col">
    <div class="form_label required">양식</div>
    <div class="form_data"><textarea id="dcForm" name="dcForm" rows="30" cols="10" style="width: 100%; height:350px"></textarea></div>
</div>`
            formBox.appendChild(row);

			nhn.husky.EZCreator.createInIFrame({
                oAppRef: htmlFormModal.editorObj,
                elPlaceHolder: "dcForm",
                sSkinURI: "/assets/static/smarteditor2/SmartEditor2Skin.html",
                fCreator: "createSEditor2",
                htParams: {
                    fOnBeforeUnload: function() { return null; }
                },
                fOnAppLoad : function(){
                    if(data.mode == "modify"){
                        gaiaCommon.get(`/api/system/document/html/${htmlFormModal.formNo}`,{},function(result){
                            const htmlForm = result.details.htmlForm;
                            htmlFormModal.checkedValue = {
                                formNm:htmlForm.formNm,
                                formType: htmlForm.formType,
                                dcForm: htmlForm.dcForm,
                            }
                            console.log("HTMLFORM",htmlForm,"EDITOROBJ",htmlFormModal.editorObj)
                            $("#htmlPropertyForm.modal #formNm").val(htmlForm.formNm);
                            $(`#htmlPropertyForm.modal #formType [value=${htmlForm.formType}]`).prop('selected',true).trigger('change');
                            htmlFormModal.editorObj.getById["dcForm"].exec("PASTE_HTML",[htmlForm.dcForm.replace(/<input[^>]*name="([^"]+)"[^>]*\/?>/g, '[$1]')])
                        },function(error){

                        })
                    }
                }
            });


			$("#htmlPropertyForm").addClass("open");
			this.checkedValue={
				formNm:"",
				formType:"",
				dcForm:"",
			}
			this.finishMethod=finishMethod;


		},
		close:function(){
			this.checkedValue={
				formNm:"",
				formType:"",
				dcForm:"",
			}
			$(".modal#htmlPropertyForm .form_box input[type=text]").val("");

			$("#formType > *").attr("selected",false);
			$("#formType > :first-child").attr("selected",true);

            this.editorObj = [];

			$('.modal#htmlPropertyForm').removeClass('open');
		},
		finish:function(){
			//양식 이름 유효성 검사
			const addRegex = /^(?!\s)[^\/:*?"<>.|]+$/;
			const formNm = $("#formNm");
			if(formNm.val() == ""){
                gaiaCommon.customAlert('HTML 양식 이름을 입력하세요.');
				formNm.focus();
				return;
			}
			if(!addRegex.test(formNm.val())){
                gaiaCommon.customAlert('HTML 양식 이름에 사용할 수 없는 문자가 포함되어 있습니다.');
				formNm.focus();
				return;
			}
			this.checkedValue.formNm = formNm.val();
			const formType = $("#formType");
			if(formType.val() == ""){
                gaiaCommon.customAlert('문서 양식을 선택하세요');
			    return;
			}

			this.checkedValue.formType = formType.val();

            const htmlContents = this.editorObj.getById.dcForm.getContents();
            if(htmlContents == ""|| htmlContents == "&nbsp"){}

            const changedContents = htmlContents.replace(/\[([^\]]+)\]/g, (match, varName) => {
                varName = varName.replaceAll(" ","");
              return `<input type="text" name="${varName}"/>`;
            });

            if(!changedContents.includes(`<div class="form-group-block" style="margin-top: 20px;">`)){
                this.checkedValue.dcForm = `<div class="form-group-block" style="margin-top: 20px;">` + changedContents+`</div>`
            }
            else{
                this.checkedValue.dcForm = changedContents;
            }

            if(htmlFormModal.mode == 'modify') {
                this.checkedValue.formNo = htmlFormModal.formNo;
            }

            gaiaCommon.post(`/api/system/document/html/${htmlFormModal.mode}`,htmlFormModal.checkedValue,function(result){
                gaiaCommon.customAlert(`HTML 양식이 ${htmlFormModal.mode == 'create'?'등록':'수정'}되었습니다.`)
                htmlFormModal.finishMethod(result.details.result);
                htmlFormModal.close();
            },function (error) {
                console.log(`[Modal] HTML 양식 ${htmlFormModal.mode == 'create'?'등록':'수정'} 실패, /api/system/document/html/create, PARAMS :`,htmlFormModal.checkedValue);
            })
    }
}
</script>