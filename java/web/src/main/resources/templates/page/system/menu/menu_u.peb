{% extends 'layout/base_popup' %} {% block head %}
{% endblock %}{% block content %}
<div class="modal open">
	<div class="pop_box _sm">
		<div class="pop_header">
			<h5 class="pop_tit" id="menu_cu_tit"></h5>
			<button type="button" class="icon_btn pop_close" onclick="popup.close()">
				<i class="ic ic-close"></i>
				<span class="blind">창닫기</span>
			</button>
		</div>

		<div class="pop_body">
			<div class="form_box" id="menu-form">
				<!-- row -->
				<div class="row">
					<div class="col">
						<div class="form_label">{{ message('item.menu.001') }}</div>
						<div class="form_data">
							<input type="text" id="pop-upBreadCrumb" name="upBreadCrumb" required readonly>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col">
						<div class="form_label">{{ message('item.menu.002') }}</div>
						<div class="form_data">
							<input type="text" id="pop-upMenuCd" name="upMenuCd" required readonly>
						</div>
					</div>
				</div>
				<!-- row -->
				<div class="row">
					<div class="col">
						<div class="form_label required">{{ message('item.menu.003') }}</div>
						<div class="form_data">
							<input type="text" id="pop-menuNm" name="menuNm" required maxlength="100">
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col">
						<div class="form_label required">{{ message('item.menu.004') }}</div>
						<div class="form_data">
							<div class="item_group">
								<input type="text" id="pop-menuCd" name="menuCd" required maxlength="50" onchange="popup.changeValid('menuCd')">
							</div>
						</div>
					</div>
				</div>
				<!-- row -->
				<div class="row">
					<div class="col">
						<div class="form_label">{{ message('item.menu.005') }}</div>
						<div class="form_data">
							<!-- <input type="text" id="pop-menuDscrpt" name="menuDscrpt" maxlength="200"> -->
							<textarea class="maxlength" id="pop-menuDscrpt" name="menuDscrpt" maxlength="200"></textarea>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col">
						<div class="form_label">{{ message('item.menu.007') }}</div>
						<div class="form_data">
							<div class="item_group">
								<input type="text" id="pop-menuUrl" name="menuUrl" maxlength="100">
								<label class="form_check" style="margin: auto 10px;">
									<input class="check_mark" type="checkbox" id="pop-lkYn" name="lkYn">
									<span class="check_label" style="white-space: nowrap;">{{ message('item.menu.010') }}</span>
								</label>
							</div>
						</div>
					</div>
				</div>
				<!-- row -->
				<div class="row">
					<div class="col">
						<div class="form_label">{{ message('item.menu.009') }}</div>
						<div class="form_data">
							<textarea class="maxlength" id="pop-iconNm" name="iconNm" maxlength="500"></textarea>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col">
						<div class="form_label required">{{ message('item.com.003') }}</div>
						<div class="form_data">
							<div class="item_group" role="group" aria-label="Basic radio group">
								<label class="form_check">
									<input class="check_mark" type="radio" id="useY" name="menuUseYn" value="Y" checked>
									<span class="check_label">{{ message('btn.008') }}</span>
								</label>
								<label class="form_check">
									<input class="check_mark" type="radio" id="useN" name="menuUseYn" value="N">
									<span class="check_label">{{ message('btn.009') }}</span>
								</label>
							</div>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col">
						<div class="form_label required">{{ message('item.menu.030') }}</div>
						<div class="form_data">
							<div class="item_group" role="group" aria-label="Basic radio group">
								<label class="form_check">
									<input class="check_mark" type="radio" id="ALL" name="menuDiv" value="A" checked>
									<span class="check_label">{{ message('item.com.091') }}</span>
								</label>
								<label class="form_check">
									<input class="check_mark" type="radio" id="GAIA" name="menuDiv" value="G">
									<span class="check_label">{{ message('item.menu.031') }}</span>
								</label>
								<label class="form_check">
									<input class="check_mark" type="radio" id="CAIROS" name="menuDiv" value="C">
									<span class="check_label">{{ message('item.menu.032') }}</span>
								</label>
							</div>
						</div>
					</div>
				</div>				
				<div class="row">
					<div class="col">
						<div class="form_label required">{{ message('item.menu.033') }}</div>
						<div class="form_data">
							<div class="item_group" role="group" aria-label="Basic radio group">
								<div class="item_group" role="group" aria-label="Basic radio group">
								<label class="form_check">
									<input class="check_mark" type="radio" id="useY" name="menuApi" value="Y" checked>
									<span class="check_label">{{ message('btn.008') }}</span>
								</label>
								<label class="form_check">
									<input class="check_mark" type="radio" id="useN" name="menuApi" value="N">
									<span class="check_label">{{ message('btn.009') }}</span>
								</label>
							</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

		<div class="pop_footer">
			<div class="btn_area jc_e">
				<button type="button" class="btn _outline" onclick="popup.close()">{{ message('btn.007') }}</button>
				<button type="button" class="btn _fill" onclick="popup.save()">{{ message('btn.006') }}</button>
			</div>
		</div>
	</div>
</div>
{% endblock %}{% block footer_script %}
<script>
  	var popup = {
		parent: {},
		menu: {},
		breadCrumb: "",

		// 메뉴 수정 시 상위메뉴 및 상위메뉴코드 표시
		init: function () {

			popup.parent = page.menu.parent;
			popup.menu = page.menu.obj;

			popup.setInput();

			console.log("부모 데이터: ", this.parent);
			$("#menu_cu_tit").text("{{ message('item.menu.026') }}"); //하위메뉴 수정
			$("#pop-upBreadCrumb").val(this.parent.breadCrumb);
			$("#pop-upMenuCd").val(this.parent.menuCd);
			$("#pop-menuLvl").val(this.parent.menuLvl + 1);

			//메뉴 레벨이 1이 아니면 아이콘명 입력창 숨김.
			if(this.parent.menuLvl + 1 !== 1){
				$("#pop-iconNm").closest('.row').hide(); // 아이콘명을 포함한 row 전체를 숨김
			}

			gaia.loaded = true;
		},

		save: function () {
			this.update();
		},

		update: function () {
			const isValid =  popup.validate("#menu-form");
			if(isValid){
				data = {
					menuNo: this.menu.menuNo,
					menuNm: $("#pop-menuNm").val(),
					menuDscrpt: $("#pop-menuDscrpt").val(),
					menuUseYn: $("input[name=menuUseYn]:checked").val(),
					iconNm: $("#pop-iconNm").val(),
					menuDiv: $("input[name=menuDiv]:checked").val(),
					menuApi: $("input[name=menuApi]:checked").val(),
                    menuCd:this.menu.menuCd
				};

				//링크 여부에 따라 메뉴url 전송 체크
				if($("#pop-lkYn").is(":checked")){
					data.lkYn = "Y";
					data.menuUrl = $("#pop-menuUrl").val();
				}else{
					data.lkYn = "N";
				}

				gaiaCommon.LoadingOverlay('body', true); // 로딩 바 활성화
				gaiaCommon.post("/api/system/menu/update", data, function (result) {
                    gaiaCommon.customAlert("{{ message('msg.044') }}", function(){ //저장되었습니다.
						popup.close();
						gaiaCommon.LoadingOverlay('body', false);
					});
				});
			}

		},

		setInput: function () {
			$("#pop-menuCd").val(gaiaCommon.decodeSafeText(this.menu.menuCd));
			$("#pop-menuCd").prop("readonly", true);
			$("#pop-menuNm").val(gaiaCommon.decodeSafeText(this.menu.menuNm));
			$("#pop-menuDscrpt").val(gaiaCommon.decodeSafeText(this.menu.menuDscrpt));
			$("#pop-menuUrl").val(gaiaCommon.decodeSafeText(this.menu.menuUrl));
			$("input[name=menuUseYn][value='" + this.menu.menuUseYn + "']").prop("checked", true);
			$("input[name=menuApi][value='" + this.menu.menuApi + "']").prop("checked", true);
			$("#existCheckBtn").hide();
			$("#pop-iconNm").val(gaiaCommon.decodeSafeText(this.menu.iconNm));
			$("#pop-lkYn").prop("checked", this.menu.lkYn == "Y");
			$("input[name=menuDiv][value='" + this.menu.menuDiv + "']").prop("checked", true);
		},

		close: function () {
			// 1. form_box 하위의 모든 input 요소 값 초기화
			$(".form_box modal_content input[type='text']").val(''); // 모든 text input 초기화
			$(".form_box modal_content input[type='radio']").prop("checked", false); // 라디오 버튼 체크 해제

			// 2. 부모 HTML의 id가 popup인 태그를 display: none; 설정
			$("#popup").css("display", "none");

			 // 3. 기존의 페이지 초기화 또는 추가 작업 수행
			page.clear(true, true, true);
			page.popup.close();

		},

		toggleMenuUrl: function(){
			if ($("#pop-lkYn").is(":checked")) {
				$("#pop-menuUrl").prop("disabled", false); // 체크되어 있으면 활성화
				$("#pop-menuUrl").prop("required", true);
				$("#pop-menuUrl").focus();
			} else {
				$("#pop-menuUrl").prop("disabled", true);  // 체크가 안 되어 있으면 비활성화
				$("#pop-menuUrl").prop("required", false);
			}
		},

		validate: function(selector){
			var isValid = true;
			const isDuplicateChecked = $('#isDuplicateChecked').val();

			if(popup.mode == "create"){
				// 메뉴 코드 중복체크 검사
				if (isDuplicateChecked == "false" || !$("#pop-menuCd").val()) {
                    gaiaCommon.customAlert("{{ message('msg.menu.010') }}"); //메뉴 코드 중복체크를 완료해주세요.
					isValid = false;
					$("#pop-menuCd").focus();
					return false;
				}
			}

			$(selector)
			.find("input, select, textarea")
			.each(function () {
				if ($(this).attr("required") && !$(this).val()) {
                    gaiaCommon.customAlert("{{ message('msg.008') }}"); // 필수 값이 누락되었습니다.
					console.log($(this));
					$(this).focus();
					isValid = false;
					return false;
				}
				// 메뉴 명 길이 검사 (varchar(100))
				if ($(this).attr("id") === "pop-menuNm") {
					if ($(this).val().length > 100) {
                        gaiaCommon.customAlert("{{ message('msg.menu.011') }}"); //메뉴 명은 100자 이하로 입력해주세요.
						isValid = false;
						return false;
					}
				}
				// 메뉴 설명 길이 검사 (varchar(200))
				if ($(this).attr("id") === "pop-menuDscrpt") {
					if ($(this).val().length > 200) {
                        gaiaCommon.customAlert("{{ message('msg.menu.012') }}"); //메뉴 설명은 200자 이하로 입력해주세요.
						isValid = false;
						return false;
					}
				}

			});

			return isValid;
		},

		changeValid(checkValidType){
			if(checkValidType === 'menuCd') {
				$('#isDuplicateChecked').val('false');
			}
		}
  };

$(function () {

	popup.init();

	// 체크박스 상태가 변경될 때마다 호출
	$("#pop-lkYn").change(function() {
		popup.toggleMenuUrl();
	});

	popup.toggleMenuUrl();

	// 모든 .maxlength 요소 처리
	$('.maxlength').each(function () {
		let maxLength = $(this).attr('maxlength'); // maxlength 속성 값 가져오기

		if ($(this).is('textarea')) {
			let parentElement = $(this).parent();
			let content = $(this).val();
			let currentLength = content.length || 0;
			parentElement.css({
				'display': 'block'
			});

			// textarea의 경우 글자 수 카운터 추가
			let counter = $(`<div class="char-counter" style="display:flex; justify-content: end; padding: 3px; font-size: var(--font-xs); color: var(--color-gray);">
							<span class="current-count">${currentLength}</span>/<span class="max-count">${maxLength}</span>
							</div>`);
			$(this).after(counter); // textarea 뒤에 추가
		}
	});

	// input 이벤트 바인딩 (중복 바인딩 방지)
	$('.maxlength').on('input', function () {
		let content = $(this).val();
		let currentLength = content.length;
		let maxLength = $(this).attr('maxlength');

		// 글자수 제한
		if (currentLength >= maxLength) {
			$(this).val(content.substring(0, maxLength));
			currentLength = maxLength;
            gaiaCommon.customAlert(`글자수는 최대 ${maxLength}자까지 입력 가능합니다.`);

		}

		// textarea의 경우 글자 수 카운터 업데이트
		if ($(this).is('textarea')) {
			$(this).next('.char-counter').find('.current-count').text(currentLength);
		}
	});

});
</script>
{% endblock %}
