<!-- 폴더 생성 모달 -->
<div class="modal" id="createFolderForm">
    <div class="pop_box _sm">
        <div class="pop_header">
            <h5 class="pop_tit" id="folder_c_tit">{{ message("item.doc.009") }}</h5>
            <div class="btn_area">
                <button type="button" class="icon_btn pop_close" onclick="createFolderModal.close()">
                    <i class="ic ic-close"></i>
                    <span class="blind">{{ message('item.com.037') }}</span>
                </button>
            </div>
        </div>
        <div class="pop_body">
			<div class="form_box">
                <div class="row">
                    <div class="col">
                        <div class="form_label">{{ message('item.doc.010') }}</div> <!-- 경로-->
                        <div class="form_data">
                            <span id="addFolderPath"></span>
                        </div>
                    </div>
                </div>
				<div class="row">
					<div class="col">
                        <div class="form_label required">{{ message('item.doc.011') }}</div> <!-- 경로 이름-->
						<div class="form_data">
							<div class="item_group">
								<input type="text" id="addFolderNm" required onchange="createFolderModal.validate(this)">
                                <button type="button" class="btn _fill s_small" onclick="createFolderModal.checkDuplicate()">{{ message('btn.028') }}</button>
							</div>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col">
                        <div class="form_label required">{{ message('item.doc.012') }}</div> <!-- 경로 종류-->
						<div class="form_data">
{#							<div class="item_group" role="group" aria-label="Basic radio group">#}
{#								<label class="form_check">#}
{#									<input class="check_mark" type="radio" id="foldr" name="naviType" value="FOLDR" checked="">#}
{#									<span class="check_label">폴더형</span>#}
{#								</label>#}
{#								<label class="form_check">#}
{#									<input class="check_mark" type="radio" id="item" name="naviType" value="ITEM">#}
{#									<span class="check_label">아이템형</span>#}
{#								</label>#}
{#							</div>#}
                            <div class="selectbox" id="naviTypeBox" style="z-index: 1;">
								<select id="naviType" name="naviType">
									<option value="FOLDR" selected>폴더형</option>
									<option value="ITEM">아이템형</option>
								</select>
							</div>
						</div>
					</div>
				</div>
			</div>
            <span style="display: inline-block; width: 99%; text-align: right; padding-top: 5px;"><strong>{{ message('msg.doc.001') }} [ <font color="red">\ / : * ? " < > . |</font> ]</strong></span>
		</div>
		<div class="pop_footer">
			<div class="btn_area jc_e">
				<button type="button" class="btn _outline" onclick="createFolderModal.close()">{{ message('btn.007') }}</button>
				<button type="button" class="btn _fill" onclick="createFolderModal.finish()">{{ message('btn.006') }}</button>
			</div>
		</div>
	</div>
</div>
<script>
	const createFolderModal = {
        checkedValue:{},
        cbgnNm:"",
        duplicateChecked:false,
		//init 함수를 통해 필드 생성 및 모달창 열기
		init:function(data,finishMethod){
			$("#createFolderForm").addClass("open");
			this.checkedValue={
				cbgnNm:'',
				cbgnPath:(data.cbgnPath?`${data.cbgnPath} > `:'')+data.cbgnNm,
				upCbgnNo:data.cbgnNo,
				cbgnLevel:data.cbgnLevel+1,
				docYn:'N',
				naviType:""
			}
			this.finishMethod=finishMethod;
            $("#addFolderPath").text(this.checkedValue.cbgnPath);
			$("#addFolderNm").focus();
		},
        validate:function(tag){
            createFolderModal.cbgnNm = tag.value;
            createFolderModal.duplicateChecked = false;
        },
        checkDuplicate:function(){
            const addRegex = /^(?!\s)[^\/:*?"<>.|]+$/;
            const addFolderNm = $("#addFolderNm");
            const cbgnNm = createFolderModal.cbgnNm;
			//양식 이름 유효성 검사
            if(cbgnNm == ""){
                gaiaCommon.customAlert('{{ message("msg.doc.026") }}'); // 경로명을 입력해주세요.
                addFolderNm.focus();
                return;
            }
            if(!addRegex.test(cbgnNm)){
                gaiaCommon.customAlert('{{ message("msg.doc.025") }}'); // 경로명에 사용할 수 없는 문자가 포함되어 있습니다.
                addFolderNm.focus();
                return;
            }
            gaiaCommon.get(`/api/system/document/check-navi?cbgnNm=${cbgnNm}`,{},function(result){
                if(result.ok){
                    if(result.details?.result){
                        gaiaCommon.customAlert('{{ message("msg.doc.024") }}'); // 사용 가능한 경로명입니다.
                        createFolderModal.duplicateChecked = true;
                        createFolderModal.checkedValue.cbgnNm = createFolderModal.cbgnNm;
                        return;
                    }
                }
                gaiaCommon.customAlert('{{ message("msg.doc.023") }}'); // 이미 사용중인 경로명입니다.
            })

        },
		close:function(){
			this.checkedValue={	}
            this.cbgnNm="";
            this.duplicateChecked = false;
			$("#createFolderForm .form_box input[type=text]").val("");
			$('#createFolderForm').removeClass('open');


		},
		finish:function(){
            const addFolderNm = $("#addFolderNm");
            if(!createFolderModal.duplicateChecked){
                gaiaCommon.customAlert('{{ message("msg.doc.027") }}'); // 경로명 중복체크를 해주세요.
                addFolderNm.focus();
                return;
            }
            const naviType = $("#naviType");
            if(!naviType.val()){
                gaiaCommon.customAlert('{{ message("msg.doc.028") }}'); // 경로종류를 선택해주세요.
                naviType.focus();
                return;
            }
            createFolderModal.checkedValue.naviType = naviType.val();
			gaiaCommon.post("/api/system/document/create-navi",this.checkedValue,
				function(result){
                    gaiaCommon.customAlert('{{ message("msg.doc.029") }}'); // 신규 경로가 생성되었습니다.
                    createFolderModal.finishMethod(result);
                    createFolderModal.close();
				},
				function(error){
					console.log(`[Modal] 폴더 생성 생성 실패, /api/system/document/create-navi, PARAMS : ${createFolderModal.checkedValue}`,error);
                    gaiaCommon.customAlert(result.message || '{{ message("msg.doc.030") }}'); // 경로 생성 중 오류가 발생했습니다.
				}
			)
		}
	}
</script>

<!-- 양식 파일 추가 모달 -->
<div class="modal" id="createDocumentForm">	
    <div class="pop_box _sm">
        <div class="pop_header">
            <h5 class="pop_tit" id="insert_navi_tit">양식 추가</h5> <!-- 양식 추가-->
            <div class="btn_area">
                <button type="button" class="icon_btn pop_close" onclick="createDocumentFormModal.close()">
                    <i class="ic ic-close"></i>
                    <span class="blind">{{ message('item.com.037') }}</span>
                </button>
            </div>
        </div>
        <div class="pop_body">
			<div class="form_box">
				<div class="row">
					<div class="col">
						<div class="form_label required">이름</div> <!-- 이름-->
						<div class="form_data">
							<div class="item_group formName with_ext">								
								<input type="text" id="orgnlDocNm" required>
								<span class="extNm"></span>
							</div>
							<span style="display: inline-block; width: 99%; text-align: right; padding-top: 5px;"><strong>{{ message('msg.doc.001') }} [ <font color="red">\ / : * ? " < > . |</font> ]</strong></span>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col">
						<div class="form_label required">문서 종류</div> <!-- 문서 종류-->
						<div class="form_data">
							<span class="selectbox" id="cbgnDocType_box" style="z-index: 1;">
								<select id="cbgnDocType">
									<option selected disabled value="">선택</option>
									
								</select>
							</span>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col">
						<div class="form_label required">원본</div> <!-- 원본 -->
						<div class="form_data">
							<div class="item_group">								
								<input type="text" id="oriNm" readonly maxlength="255" placeholder="파일을 선택해 주세요.">
								<button type="button" class="btn _fill s_small" data-file-type="origin" onclick="createDocumentFormModal.uploadFile(this)">파일첨부</button>
								<input type="file" accept=".xlsx, .hwpx" name="orgDocumentFormFile" id="orgDocumentFormFile" style="display: none;">
							</div>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col">
						<div class="form_label required">PDF</div>
						<div class="form_data">
							<div class="item_group">
								<input type="text" id="pdfNm" readonly maxlength="255" placeholder="파일을 선택해 주세요.">
								<button type="button" class="btn _fill s_small" data-file-type="pdf" onclick="createDocumentFormModal.uploadFile(this)">파일첨부</button>
								<input type="file" accept=".pdf" name="pdfFile" id="pdfFile" style="display: none;">
							</div>
						</div>
					</div>
				</div>
            </div>			
            <span style="display: inline-block; width: 99%; text-align: right; padding-top: 5px;"><strong>다음 확장자 파일만 업로드 가능합니다 [ <font color="red">.hwpx, .xlsx, .pdf</font> ]</strong></span>
		</div>
		<div class="pop_footer">
			<div class="btn_area jc_e">
				<button type="button" class="btn _outline" onclick="createDocumentFormModal.close()">{{ message('btn.007') }}</button>
				<button type="button" class="btn _fill" onclick="createDocumentFormModal.finish()">완료</button>
			</div>
		</div>
	</div>
</div>
<script>
	//component처럼 구현하기
	const createDocumentFormModal = {
		//init 함수를 통해 필드 생성 및 모달창 열기
		init:function(data,finishMethod){
			$("#createDocumentForm").addClass("open");
			this.checkedValue={
				upCbgnNo:data.cbgnNo,
				orgnlDocNm:"",
				cbgnDocType:"",
				orgFile:null,
				cbgnPath:(data.cbgnPath?data.cbgnPath+" > ":"")+data.cbgnNm,
				cbgnLevel:data.cbgnLevel+1,
				pdfNm:"",
				pdfFile:null
			}
			page.createDocTypeDropdown('cbgnDocType');
			this.finishMethod=finishMethod;
		},
		close:function(){
			this.checkedValue = {
				upCbgnNo:0,
				orgnlDocNm:"",
				cbgnDocType:"",
				orgFile:null,
				cbgnPath:'',
				cbgnLevel:0,
				pdfNm:"",
				pdfFile:null
			}
			$("#createDocumentForm .form_box input[type=text]").val("");
			$("#createDocumentForm .extNm").text("");
			$("#createDocumentForm .form_box input[type=file]").val("");
			$("#cbgnDocType > *").attr("selected",false);
			$("#cbgnDocType > :first-child").attr("selected",true);
			$('#createDocumentForm').removeClass('open');

			
		},
		uploadFile:function(uploadBtn){
            const fileTag = $(uploadBtn).next();

            fileTag.off('change').change((e) => {
                const file = e.target.files[0];
                const fileName = file ? file.name : "";
                const ext = fileName.split(".").pop().toLowerCase();

                // 구분: 원본인지, PDF용인지
                const fileType = $(uploadBtn).data("file-type");

                // 확장자 검증
                if (file) {
                    if (fileType == 'origin' && !["xlsx", "hwpx"].includes(ext)) {
                        alert("원본 파일은 .xlsx 또는 .hwpx 형식만 업로드할 수 있습니다.");
                        resetUploadField();
                        return;
                    }
                    if (fileType == 'pdf' && ext !== "pdf") {
                        alert("PDF 파일은 .pdf 형식만 업로드할 수 있습니다.");
                        resetUploadField();
                        return;
                    }

                    // 확장자 통과 → 파일 반영
                    const orgnlDocNm = $("#orgnlDocNm");
                    const pdfNm = $("#pdfNm");
                    const lastIndexOfDot = file.name.lastIndexOf(".");
                    if(fileType == 'origin') {
                        this.checkedValue.orgFile = file;
                        if(orgnlDocNm.val() === "") {
                            orgnlDocNm.val(file.name.substring(0, lastIndexOfDot));
                            orgnlDocNm.next().text("."+ext);
                        }
                    }
                    if(fileType == 'pdf') {
                        this.checkedValue.pdfFile = file;
                        if(pdfNm.val() === "") {
                            pdfNm.val(file.name.substring(0, lastIndexOfDot));
                        }
                    }

                    $(uploadBtn).prev().val(file.name);


                } else {
                    resetUploadField();
                }

                // 초기화
                function resetUploadField() {
                    fileTag.val("");  // 파일 선택 초기화
                    $(uploadBtn).prev().val("");
                    createDocumentFormModal.checkedValue.orgFile = null;
                    createDocumentFormModal.checkedValue.pdfFile = null;
                }
            });
            fileTag.click();
		},
		finish:function(){
			//양식 이름 유효성 검사
			const addRegex = /^(?!\s)[^\/:*?"<>.|]+$/;
			const orgnlDocNm = $("#orgnlDocNm");
			const pdfNm = $("#pdfNm");
			if(orgnlDocNm.val() == ""){
				gaiaCommon.customAlert('양식 이름을 입력하세요.');
				orgnlDocNm.focus();
				return;
			}
			if(!addRegex.test(orgnlDocNm.val())){
				gaiaCommon.customAlert('양식 이름에 사용할 수 없는 문자가 포함되어 있습니다.');
				orgnlDocNm.focus();
				return;
			}
            createDocumentFormModal.checkedValue.orgnlDocNm = orgnlDocNm.val();
            createDocumentFormModal.checkedValue.pdfNm = pdfNm.val();

			//문서 종류 유효성 검사
			const cbgnDocTypeList = document.querySelector("#cbgnDocType");
			if(cbgnDocTypeList.value == ""){
				gaiaCommon.customAlert("문서 종류를 선택하세요.");
				return;
			}
			else {
                createDocumentFormModal.checkedValue.cbgnDocType = cbgnDocTypeList.value;
			}

			//파일 업로드 유효성 검사
			if(!createDocumentFormModal.checkedValue.orgFile){
				gaiaCommon.customAlert("파일 업로드를 해주세요.");
				return;
			}
			let ext = createDocumentFormModal.checkedValue.orgFile.name.split(".").pop();
			if( !(ext.toUpperCase() == 'xlsx'.toUpperCase() || ext.toUpperCase() == 'hwpx'.toUpperCase() || ext.toUpperCase() == 'pdf'.toUpperCase()) ){
				gaiaCommon.customAlert('지원하지 않는 파일 형식입니다.')
				return;
			}
			
			//폼 데이터 만들기
			const formData = new FormData();
			formData.append("orgnlDocNm",this.checkedValue.orgnlDocNm);
			formData.append("cbgnDocType",this.checkedValue.cbgnDocType);
			formData.append("orgFile",this.checkedValue.orgFile);
			formData.append("upCbgnNo",this.checkedValue.upCbgnNo);
			formData.append("cbgnPath",this.checkedValue.cbgnPath);
			formData.append("cbgnLevel",this.checkedValue.cbgnLevel);
			formData.append("pdfNm",this.checkedValue.pdfNm);
			formData.append("pdfFile",this.checkedValue.pdfFile);

			//백 전송
			gaiaCommon.postForm("/api/system/document/create-doc-form",createDocumentFormModal.checkedValue,function (response) {
				gaiaCommon.customAlert('양식 추가 성공');
				createDocumentFormModal.finishMethod(response);
				createDocumentFormModal.close();
			}, function(error){
				gaiaCommon.customAlert('양식 추가 실패');
				console.log(`[Modal] 폴더 생성 생성 실패, /api/system/document/create-navi, PARAMS : ${createDocumentFormModal.checkedValue}`,error);
			})
			//$.ajax({
			//	url:"/api/system/document/create-doc-form",
			//	method:"POST",
			//	processData: false,
			//	contentType: false,
			//	data: formData,
			//	success: function (response) {
			//		if (response.ok) {
			//			gaiaCommon.customAlert('양식 추가 성공');
			//			createDocumentFormModal.finishMethod(response);
			//			createDocumentFormModal.close();
			//		}
			//	},
			//	error: function (xhr, status, error) {
			//		console.log(xhr);
			//		gaiaCommon.customAlert('양식 추가 실패');
			//		console.log(`[Modal] 폴더 생성 생성 실패, /api/system/document/create-doc-form, PARAMS : ${formData}`,error);
			//	},
			//})
		}
	}

</script>
<!-- 폴더 이름 변경 모달 -->
<div class="modal" id="updateFolderForm">
    <div class="pop_box _sm">
        <div class="pop_header">
            <h5 class="pop_tit" id="update_navi_tit">{{ message('item.doc.013') }}</h5> <!--경로 수정-->
            <div class="btn_area">
                <button type="button" class="icon_btn pop_close" onclick="updateFolderModal.close()">
                    <i class="ic ic-close"></i>
                    <span class="blind">{{ message('item.com.037') }}</span>
                </button>
            </div>
        </div>
        <div class="pop_body">
			<div class="form_box">
                <div class="row">
                    <div class="col">
                        <div class="form_label">{{ message('item.doc.010') }}</div>
                        <div class="form_data">
                            <span id="updateNaviPath"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <div class="form_label">{{ message('item.doc.014') }}</div> <!--기존경로이름-->
                        <div class="form_data">
                            <div class="item_group">
                                <input type="text" id="orgNaviNm" readonly>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <div class="form_label required">{{ message('item.doc.015') }}</div> <!--신규경로이름-->
                        <div class="form_data">
                            <div class="item_group">
                                <input type="text" id="updateNaviNm" onchange="updateFolderModal.validate(this)" maxlength="255">
                                <input type="hidden" id="orgNaviType">
                                <input type="hidden" id="updateNaviNo">
                                <input type="hidden" id="updateNaviNmValid">
                                <button type="button" class="btn _fill s_small" onclick="updateFolderModal.checkDuplicate()">{{ message('btn.028') }}</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <div class="form_label">{{ message('item.doc.012') }}</div>
                        <div class="form_data">
							<div class="selectbox readonly">
								<select id="updateNaviType">
									<option selected disabled value="">{{ message('item.com.005') }}</option> <!--선택-->
									<option value="FOLDR">{{ message('item.doc.016') }}</option> <!--폴더형-->
									<option value="ITEM">{{ message('item.doc.017') }}</option> <!--아이템형-->
								</select>
							</div>
                        </div>
                    </div>
                </div>
            </div>
            <span style="display: inline-block; width: 99%; text-align: right; padding-top: 5px;"><strong>{{ message('msg.doc.001') }} [ <font color="red">\ / : * ? " < > . |</font> ]</strong></span>
		</div>
		<div class="pop_footer">
			<div class="btn_area jc_e">
				<button type="button" class="btn _outline" onclick="updateFolderModal.close()">{{ message('btn.007') }}</button>
				<button type="button" class="btn _fill" onclick="updateFolderModal.finish()">{{ message('btn.006') }}</button>
			</div>
		</div>
	</div>
</div>
<script>
	const updateFolderModal = {
        checkedValue:{},
        duplicateChecked:false,
		//init 함수를 통해 필드 생성 및 모달창 열기
		init:function(data,finishMethod){
            console.log("DATA",data);
			$("#updateFolderForm").addClass("open");
			this.checkedValue={
				cbgnNo:data.cbgnNo,
				cbgnNm:data.cbgnNm
			}
			this.finishMethod=finishMethod;

			$("#updateFolderForm #updateNaviPath").text(data.cbgnPath);
			$("#updateFolderForm #orgNaviNm").val(data.cbgnNm);
            $("#updateFolderForm #updateNaviType").val(data.naviType).prop("selected", true);
            $("#updateFolderForm #orgNaviType").val(data.naviType);
            $("#updateFolderForm #updateNaviNo").val(data.cbgnNo);
			$("#updateFolderForm #updateNaviNm").focus();
		},
        validate:function(tag){
            //         <input type="hidden" id="updateNaviNmValid">
            $("#updateFolderForm #updateNaviNmValid").val(tag.value);
            this.duplicateChecked = false;
        },
        checkDuplicate:function(){
            const updateRegex = /^(?!\s)[^\/:*?"<>.|]+$/;
            const updateFolderNm = $("#updateFolderForm #updateNaviNm");
            const cbgnNm = $("#updateFolderForm #updateNaviNmValid").val();
            //양식 이름 유효성 검사
            if(cbgnNm == ""){
                gaiaCommon.customAlert('{{ message("msg.doc.031") }}'); // 변경할 경로명을 입력해주세요.
                updateFolderNm.focus();
                return;
            }
            if(!updateRegex.test(cbgnNm)){
                gaiaCommon.customAlert('{{ message("msg.doc.025") }}'); // 경로명에 사용할 수 없는 문자가 포함되어 있습니다.
                updateFolderNm.focus();
                return;
            }
            gaiaCommon.get(`/api/system/document/check-navi?cbgnNm=${cbgnNm}`,{},function(result){
                if(result.ok){
                    if(result.details?.result){
                        gaiaCommon.customAlert('{{ message("msg.doc.024") }}'); // 사용 가능한 경로명입니다.
                        updateFolderModal.duplicateChecked = true;
                        updateFolderModal.checkedValue.cbgnNm = cbgnNm;
                        return;
                    }
                }
                gaiaCommon.customAlert('{{ message("msg.doc.023") }}'); // 이미 사용중인 경로명입니다.
            })

        },
		close:function(){
			this.checkedValue={

			}
            this.duplicateChecked = false;
			$("#updateFolderForm .form_box input[type=text]").val("");
            $("#updateFolderForm #updateNaviNmValid").val("");
			$('#updateFolderForm').removeClass('open');


		},
		finish:function(){
			//양식 이름 유효성 검사
			const addRegex = /^(?!\s)[^\/:*?"<>.|]+$/;
			const updateFolderNm = $("#updateFolderNm");

			if(!updateFolderModal.duplicateChecked){
                gaiaCommon.customAlert('{{ message("msg.doc.032") }}'); // 변경된 경로명의 중복체크를 해주세요.
				return;
			}
			gaiaCommon.post("/api/system/document/update-navi",updateFolderModal.checkedValue,
				function(result){
                    gaiaCommon.customAlert('{{ message("msg.doc.033") }}'); // 경로정보가 변경되었습니다.
                    updateFolderModal.finishMethod(updateFolderModal.checkedValue);
                    updateFolderModal.close();
				},
				function(error){
					console.log(`[Modal] 폴더 이름 수정 실패, /api/system/document/update-navi, PARAMS :`,updateFolderModal.checkedValue,error);
                    gaiaCommon.customAlert('{{ message("msg.doc.034") }}'); // 경로정보 변경 중 오류가 발생했습니다.
				}
			)
		}
	}
</script>

<!-- 문서 이름 변경 모달 -->
<div class="modal" id="updateFileForm">
    <div class="pop_box">
        <div class="pop_header">
            <h5 class="pop_tit" id="folder_c_tit">파일명 수정</h5>
            <div class="btn_area">
                <button type="button" class="icon_btn pop_close" onclick="updateFileModal.close()">
                    <i class="ic ic-close"></i>
                    <span class="blind">{{ message('item.com.037') }}</span>
                </button>
            </div>
        </div>
        <div class="pop_body">
			<div class="form_box">
				<div class="row">
					<div class="col">
						<div class="form_label required">파일명</div>
						<div class="form_data">
							<div class="item_group formName with_ext">
								<input type="text" id="updateFileNm" required>
								<span class="extNm"></span>
							</div>
						</div>
					</div>
				</div>
            </div>
            <span style="display: inline-block; width: 99%; text-align: right; padding-top: 5px;"><strong>{{ message('msg.doc.001') }} [ <font color="red">\ / : * ? " < > . |</font> ]</strong></span>
		</div>
		<div class="pop_footer">
			<div class="btn_area jc_e">
				<button type="button" class="btn _outline" onclick="updateFileModal.close()">{{ message('btn.007') }}</button>
				<button type="button" class="btn _fill" onclick="updateFileModal.finish()">{{ message('btn.006') }}</button>
			</div>
		</div>
	</div>
</div>
<script>
	const updateFileModal = {
		//init 함수를 통해 필드 생성 및 모달창 열기
		ext:'',
		orgNm:'',
		init:function(data,finishMethod){
			$("#updateFileForm").addClass("open");
			this.checkedValue={
				cbgnNo:data.cbgnNo,
				cbgnNm:data.cbgnNm,
			}
			this.finishMethod=finishMethod;
			this.ext = "."+data.cbgnNm.split(".").pop();
			document.querySelector('.modal#updateFileForm .extNm').innerHTML = this.ext;
			const updateFileNm = $(".modal#updateFileForm #updateFileNm");
			let lastIndexOfDot = data.cbgnNm.lastIndexOf(".")
			updateFileNm.val(data.cbgnNm.substring(0,lastIndexOfDot))
			$("#updateFileForm .extNm").text()
			$(".modal#updateFileForm #updateFileNm").focus();
		},
		close:function(){
			this.checkedValue={
				cbgnNo:0,
				cbgnNm:''
			}
			$("#updateFileForm .form_box input[type=text]").val("");
			$('#updateFileForm').removeClass('open');


		},
		finish:function(){
			//양식 이름 유효성 검사
			const addRegex = /^(?!\s)[^\/:*?"<>.|]+$/;
			const updateFileNm = $(".modal#updateFileForm #updateFileNm");
			if(updateFileNm.val() == ""){
				gaiaCommon.customAlert('파일 이름을 입력하세요.');
				updateFileNm.focus();
				return;
			}
			if(!addRegex.test(updateFileNm.val())){
				gaiaCommon.customAlert('파일 이름에 사용할 수 없는 문자가 포함되어 있습니다.');
				updateFileNm.focus();
				return;
			}
			this.checkedValue.cbgnNm = updateFileNm.val()+this.ext;
			gaiaCommon.post("/api/system/document/update-navi",updateFileModal.checkedValue,
				function(result){
					gaiaCommon.customAlert("이름 변경 성공!")
                    updateFileModal.finishMethod(updateFileModal.checkedValue);
                    updateFileModal.close();
				},
				function(error){
					console.log(`[Modal] 파일 이름 수정 실패, /api/system/document/update-navi, PARAMS : ${updateFileModal.checkedValue}`,error);
				}
			)
		}
	}
</script>

<!-- 오른쪽 그리드에 등록된 문서 이름 변경 모달 -->
<div class="modal" id="gridDocumentRenameForm">
    <div class="pop_box">
        <div class="pop_header">
            <h5 class="pop_tit" id="folder_c_tit">파일명 수정</h5>
            <div class="btn_area">
                <button type="button" class="icon_btn pop_close" onclick="gridDocumentRenameModal.close()">
                    <i class="ic ic-close"></i>
                    <span class="blind">{{ message('item.com.037') }}</span>
                </button>
            </div>
        </div>
        <div class="pop_body">
			<div class="form_box">
				<div class="row">
					<div class="col">
						<div class="form_label required">파일명</div>
						<div class="form_data">
							<div class="item_group formName with_ext">
								<input type="text" id="updateFileNm" required>
								<span class="extNm"></span>
							</div>
						</div>
					</div>
				</div>
            </div>
            <span style="display: inline-block; width: 99%; text-align: right; padding-top: 5px;"><strong>{{ message('msg.doc.001') }} [ <font color="red">\ / : * ? " < > . |</font> ]</strong></span>
		</div>
		<div class="pop_footer">
			<div class="btn_area jc_e">
				<button type="button" class="btn _outline" onclick="gridDocumentRenameModal.close()">{{ message('btn.007') }}</button>
				<button type="button" class="btn _fill" onclick="gridDocumentRenameModal.finish()">{{ message('btn.006') }}</button>
			</div>
		</div>
	</div>
</div>
<script>
	const gridDocumentRenameModal = {
		//init 함수를 통해 필드 생성 및 모달창 열기
		ext:'',
		orgNm:'',
		init:function(data,finishMethod){
			$("#gridDocumentRenameForm").addClass("open");
			this.checkedValue={
				docId:data.docId,
				docNm:data.docNm,
			}
			this.finishMethod=finishMethod;
			this.ext = "."+data.docNm.split(".").pop();
			document.querySelector('.modal#gridDocumentRenameForm .extNm').innerHTML = this.ext;
			const updateFileNm = $(".modal#gridDocumentRenameForm #updateFileNm");
			let lastIndexOfDot = data.docNm.lastIndexOf(".")
			updateFileNm.val(data.docNm.substring(0,lastIndexOfDot))
			$(".modal#gridDocumentRenameForm .extNm").text()
			$(".modal#gridDocumentRenameForm #updateFileNm").focus();
		},
		close:function(){
			this.checkedValue={
				docId:0,
				docNm:''
			}
			$(".modal#gridDocumentRenameForm .form_box input[type=text]").val("");
			$('.modal#gridDocumentRenameForm').removeClass('open');


		},
		finish:function(){
			//양식 이름 유효성 검사
			const addRegex = /^(?!\s)[^\/:*?"<>.|]+$/;
			const updateFileNm = $(".modal#gridDocumentRenameForm #updateFileNm");
			if(updateFileNm.val() == ""){
				gaiaCommon.customAlert('파일 이름을 입력하세요.');
				updateFileNm.focus();
				return;
			}
			if(!addRegex.test(updateFileNm.val())){
				gaiaCommon.customAlert('파일 이름에 사용할 수 없는 문자가 포함되어 있습니다.');
				updateFileNm.focus();
				return;
			}
			this.checkedValue.docNm = updateFileNm.val()+this.ext;
			gaiaCommon.post("/api/document/name/update",this.checkedValue,
				function(result){
					this.finishMethod(result.details.document);
					this.close();
				},
				function(error){
					console.log(`[Modal] 파일 이름 수정 실패, /api/document/name/update, PARAMS : ${this.checkedValue}`,error);
				}
			)
		}
	}
</script>
