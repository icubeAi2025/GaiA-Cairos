{% extends 'layout/base_popup' %}
{% block content %}
<style>
	input[type=text].no-validated{
		border-color: var(--color-red);
		animation: shake 0.4s ease;
	}
	input[type=text].validated{
		border-color:var(--color-green)
	}
	@keyframes shake {
		0% { transform: translateX(0); }
		20% { transform: translateX(-5px); }
		40% { transform: translateX(5px); }
		60% { transform: translateX(-4px); }
		80% { transform: translateX(4px); }
		100% { transform: translateX(0); }
	}

	.modal .select_area{
		gap: 0.5em;
	}
</style>
<!--*디자인 적용 new 시작*-->
<section class="contents_wrap g-row">
	<article class="conts_area">
		<div class="conts">
			<div class="conts_grid">
				<div class="toolbar">
					<div class="btn_area s_default _outline">
<!--						{{ btnHtml | raw }}-->
						<button type="button" class="btn" id="" onclick="propertyPopup.remove()">{{ message('btn.002') }}</button>
						<button type="button" class="btn" id="" onclick="propertyPopup.modify()">{{ message('btn.003') }}</button>
						<button type="button" class="btn _fill" id="" onclick="propertyPopup.regist()">{{ message('btn.001') }}</button>
					</div>
				</div>
				<div class="grid" id="property_grid"></div>
			</div>
			<div class="btn_area s_default" style="justify-content: end;">
				<button type="button" class="btn _outline" onclick="propertyPopup.close()" style="margin-top: 10px;">{{ message('btn.007') }}</button>
			</div>
		</div>
	</article>
</section>
<!-- 토스트 메세지 : 활성화:'on'추가, 수초 후 'on'제거-->
<div class="pop_box toast" style="display: none; z-index: 16;">
	<span class="toast_msg">
	</span>
	<button type="button" class="icon_btn pop_close">
		<i class="ic ic-close"></i>
		<span class="blind">창닫기</span>
	</button>
</div>
<section>{% include "page/system/document/property/property_modal" %}</section>
<script>
	$(document).ready(()=>{
		gaia.create({
			$init: function ($params) {
				if(opener){
					page = opener.page;

					opener.document.onkeydown = fkey;
					opener.document.onkeypress = fkey;
					opener.document.onkeyup = fkey;

					// 부모창의 f5 새로고침 누를때 열려있는 팝업 창 닫기
					function fkey(e){
						if (window.event.keyCode == 116) {
							window.close();
						}
					};

					window.opener.onbeforeunload = function () {
						// 부모창이 새로고침되거나 페이지 이동할 때 실행
						if (window) {
							// 자식 창 닫기
							window.close();
						}
					};
				}
				propertyPopup.init();
            }
        });
	}) 
    


	var propertyPopup = {
		selectedCbgnNo: null,
		selectedNaviNo: null,
		codeComboData: {},
		propertyList: [],
		init() {
			const pjtData = JSON.parse(localStorage.getItem('pageCommonData'));

			//page 헤더 생성
			gaiaPortal.navMenuInit('M070307', "{{ message('item.doc.047') }}"); 	//속성 정의
			$("#menuDepth").append(`<li class=\"breadcrumb_item\">{{ message('item.doc.047') }}</li>`);

			const searchParams = new URLSearchParams(window.location.search);
            this.selectedCbgnNo = searchParams.get("cbgnNo");

			propertyPopup.grid.init(this.selectedCbgnNo);
			gaia.loaded = true;
		},

		close() {
			opener.page.refresh(true, true);
			propertyPopup.propertyList = null;
			window.close();
		},

		refresh(){
			propertyPopup.grid.loadData(propertyPopup.selectedCbgnNo);
		},
        grid:{
            obj:null,
            init: function(cbgnNo){
				tui.Grid.setLanguage('ko', {
					display: {
						noData: '데이터가 없습니다'
					}
				});
				this.obj = new tui.Grid({
					el: document.getElementById('property_grid'),
					scrollX: false,
					scrollY: true,
					useClientSort: false,
					minBodyHeight: 40,
					width: 'auto',
					// bodyHeight: 160,
					contextMenu: null,
					rowHeaders: [
						{
							type: 'checkbox',
							header: `
								<input type="checkbox" id="checkAll" class="hidden-input" name="_checked" />
							`,
							width: 100,
							renderer: {
								type: window.IconRenderer,
								options: [
									{
										type:'checkbox'
									},
									{
										//휴지통 클릭 삭제 시 필요한 값 설정
										url: '/api/system/document/property/remove',
										idField: 'attrbtNo',
										keyName: 'attrbtNoList',
										// auth: popup.isDelAuth == "true",
										msgList: {
											confirmMsg: "{{ message('msg.009') }}", 		 	// 정말 삭제하시겠습니까?
											confirmTit: "{{ message('item.doc.050') }}",  // 속성 삭제
											completeMsg: "{{ message('msg.006') }}" 	// 삭제되었습니다.
										},
										success: (rowData) => { propertyPopup.refresh(); }
									}
								]
							}
						}						
					],
					columns:[
						{ 
							header: "attrbtNo", 
							name: 'attrbtNo',
							hidden: true,
							// width: 'auto'
						},
						{ 
							header: "{{ message('item.doc.049') }}", 	//속성코드
							name: 'attrbtCd',
							align: 'center',
							resizable: true,
							// width: 120
						},
						{ 
							header: "{{ message('item.doc.022') }}", 	//이름(한)
							name: 'attrbtNmKrn',
							align: 'left',
							resizable: true,
							width: 150
						},
						{ 
							header: "{{ message('item.doc.023') }}", 	//이름(영)
							name: 'attrbtNmEng',
							align: 'left',
							resizable: true,
							width: 150
						},
						{ 
							header: "{{ message('item.doc.024') }}", 	//타입
							name: 'attrbtType',
							align: 'center',
							resizable: true,
							// width: 75
						},
						{ 
							header: "{{ message('item.doc.025') }}", 	//표시여부
							name: 'attrbtDsplyYn',
							align: 'center',
							resizable: true,
							// width: 70
						},
						{ 
							header: "{{ message('item.doc.026') }}", 	//수정여부
							name: 'attrbtChgYn',
							align: 'center',
							resizable: true,
							// width: 70
						},
						{ 
							header: "{{ message('item.com.082') }}", 	//순서
							name: 'attrbtDsplyOrder',
							align: 'center',
							// width: 50
						},
					],
				});
				this.loadData(cbgnNo);
			},
            loadData: function(cbgnNo){
                
                gaiaCommon.get(`/api/system/document/property/list/${cbgnNo}`, {}, function (result) {
                    let data = {};
                    if (result.details?.propertyList) {
                        data = result.details.propertyList;
                        propertyPopup.propertyList = data;
                    }
    
                    // 그리드의 높이를 동적으로 설정
                    const rowCount = data.length;
                    const rowHeight = 40; // 행당 높이 (임의로 40px로 설정)
                    const maxHeight = 600; // 그리드의 최대 높이 
                    const newHeight = Math.min(rowCount * rowHeight, maxHeight); // 행의 개수에 맞춰 높이 조정
                    
                    propertyPopup.grid.obj.setBodyHeight(newHeight);
                    propertyPopup.grid.obj.resetData(data);
                },function(error){
					console.log(`속성 목록 로드 실패, /api/system/document/property/list/${cbgnNo}, PARAMS : {}`,error);
                });
            }
        },

		regist: function () {
			const params = {
				cbgnNo:this.selectedCbgnNo
			}
			modal.init(params,propertyPopup.refresh);
		},

		// 속성 삭제
		remove: function() {
			var attrbtNoList = [];

			propertyPopup.grid.getCheckedRows().forEach((v) => {
				attrbtNoList.push(v.attrbtNo);
			});
            const params = {attrbtNoList : attrbtNoList}
			if (attrbtNoList.length > 0) {
				//선택한 속성을 삭제하시겠습니까?
                gaiaCommon.customConfirm("{{ message('item.doc.029') }}", "{{ message('item.doc.029') }}", "{{ message('msg.doc.109') }}", function(){ // 선택한 속성을 삭제하시겠습니까?
					gaiaCommon.post("/api/system/document/property/remove", params, function (result) {
                        gaiaCommon.customAlert("{{ message('msg.006') }}", function(){ //삭제되었습니다.
							propertyPopup.refresh();
						}); 
					},function(error){
						console.log(`속성 삭제 실패, /api/system/document/property/remove, PARAMS : ${params}`,error);
					});
				});
					
			} else {
                gaiaCommon.customAlert("{{ message('msg.doc.110') }}"); //삭제할 속성을 선택해주세요.
			}
		},

		//속성 수정
		modify: function() {
			var attrbtNoList = [];

			propertyPopup.grid.obj.getCheckedRows().forEach((v) => {
				attrbtNoList.push(v.attrbtNo);
			});
			let length = attrbtNoList.length 
			
			if(length === 1){
				const params = {
					cbgnNo:this.selectedCbgnNo,
					attrbtNo:attrbtNoList[0],
					mode:"modify"
				}
				modal.init(params,propertyPopup.refresh);
			}else if(length > 1){
                gaiaCommon.customAlert("{{ message('msg.doc.107') }}"); // 하나의 속성을 선택해주세요.
				return;
			}else{
                gaiaCommon.customAlert("{{ message('msg.doc.108') }}"); // 수정할 속성을 선택해주세요.
				return;
			}
		}

	};

	

	
</script>
</html>
{% endblock content %}
