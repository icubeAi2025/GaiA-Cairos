{% extends 'layout/base_content' %} {% block head %} {% endblock %} {% block
content %}
<section class="contents_wrap">
	<article class="conts_area">
        <article class="conts g-row">
            <div class="group">
                <h3 class="conts_tit">{{ message("item.info.029") }}</h3>
                <div class="conts_grid">
                    <form name="form_search">
                        <div class="search_wrap">
                            <span class="selectbox">
                                <select name="searchTerm" id="searchTerm" onchange="toggleDateRange()">
                                    <option value="all">
                                        {{ message("item.com.006") }}
                                    </option>
                                    <option value="1">
                                        {{ message("item.com.009") }}
                                    </option>
                                    <option value="3">
                                        {{ message("item.com.010") }}
                                    </option>
                                    <option value="6">
                                        {{ message("item.com.011") }}
                                    </option>
                                    <option value="12">
                                        {{ message("item.com.012") }}
                                    </option>
                                    <option value="custom">
                                        {{ message("item.com.013") }}
                                    </option>
                                </select>
                            </span>
                            <div id="dateRange" class="search_wrap" style="display: none">
                                <input type="date" id="startDate" name="startDate" class="date w-md" />
                                <input type="date" id="endDate" name="endDate" class="date w-md" />
                            </div>
                            <span class="selectbox">
                                <select name="searchType" id="searchType" class="selectbox w-md">
                                    <!-- 공사코드 -->
                                    <option value="pjtNo">
                                        {{ message("item.info.035") }}
                                    </option>
                                    <!-- 공사명 -->
                                    <option value="pjtNm">
                                        {{ message("item.info.001") }}
                                    </option>
                                    <!-- 현장위치 -->
                                    <option value="plcLctAdrs">
                                        {{ message("item.info.003") }}
                                    </option>
                                    <!-- 수요기관 -->
                                    <option value="dminsttNm">
                                        {{ message("item.info.024") }}
                                    </option>
                                </select>
                            </span>
                            <div class="searchbox_wrap">
                                <input type="text" name="searchText" id="searchText"
                                    onkeypress="if( event.keyCode == 13 ){page.info.search(event);}"
                                    placeholder="{{ message('msg.004') }}" />
                                <button type="button" class="icon_btn" onclick="page.info.search(event)">
                                    <i class="ic ic-search"></i>
                                    <span class="blind"> {{ message("item.com.014") }}</span>
                                </button>
                            </div>
                        </div>
                    </form>
                    <div class="toolbar">
                        <div class="btn_area s_default">
                            {{ btnHtml | raw }}
                        </div>
                    </div>
                    <div class="grid" id="information-grid"></div>
                </div>
            </div>
        </article>
	</article>
</section>
{% endblock content %} {% block footer_script %}
<script>
    const params = new URLSearchParams(window.location.search);
    let pjtNo;

    const BASEPATH = "/api/project/information";
    let optionsDataCache = {};

    var page = {
        isDelAuth: "{{ isDelAuth }}" === "true",
        init() {
            pjtNo = pjtInfo.pjtNo;
            cntrctNo = pjtInfo.cntrctNo;
            this.grid.init();

            const searchData = gaia.getSearchData(params);
            if (searchData && Object.keys(searchData).length !== 0) {
                page.grid.obj.methods.readData(searchData);

                Object.entries(searchData).forEach(([key, value]) => {
                    $(`#${key}`).val(value);
                });
            }

        },
        // 사업 목록 그리드
        grid: {
            obj: null,
            init() {
                const bodyHeight = window.innerHeight - 380;
                if (this.obj) {
                    return;
                }
                this.obj = $("#information-grid").setGrid({
                    minBodyHeight: bodyHeight,
                    bodyHeight: bodyHeight,
                    scrollY: true,
                    scrollX: false,
                    contextMenu: null,
                    rowHeaders: [
                        {
                            type: "checkbox",
                            header: `<input type="checkbox" id="checkAll" class="hidden-input" name="_checked" />`,
                            width: 100,
                            renderer: {
                                type: window.IconRenderer,
                                options: [
                                    {
                                        type:"checkbox",
                                    },
                                    {
                                        type:"trash",
                                        //휴지통 클릭 삭제 시 필요한 값 설정
                                        url: "/api/project/information/delete",
                                        idField: "pjtNo",
                                        keyName: "informationList",
                                        auth: page.isDelAuth,
                                        msgList: {
                                            confirmMsg: "{{ message('msg.009') }}",
                                            confirmTit: "{{ message('item.info.038') }}",
                                            completeMsg: "{{ message('msg.006') }}"
                                        },
                                    },
                                    {
                                        type:"note",
                                        success:(rowData) => {
                                            let pageCommonData = {
                                                "pjtNo": rowData['pjtNo'],
                                                "pjt_nm": gaiaCommon.decodeSafeText(rowData['pjtNm']),
                                                "cntrctNo": rowData['cntrctNo'],
                                                "cntrct_nm": gaiaCommon.decodeSafeText(rowData['cntrctNm']),
                                                "pjt_div": rowData['pjtDiv']
                                            };
                                            commonJs.setSessionStorage("pageCommonData", pageCommonData);

                                            document.getElementById('selectProject').innerHTML = rowData['cntrctNm'];

                                            window.location.href = `/dashboard?pjtNo=${rowData['pjtNo']}&cntrctNo=${rowData['cntrctNo']}`;
                                        }
                                    }
                                ],
                            },
                        },
                    ],
                    columns: [
                        {
                            header: "{{ message('item.info.035') }}",
                            name: "pjtNo",
                            align: "center",
                            width: 150,
                            resizable: true,
                            ellipsis: true,
                        },
                        {
                            header: "{{ message('item.info.001') }}",
                            name: "pjtNm",
                            className: "pjtNm",
                            renderer: {
                                type: window.IconRenderer,
                                options: [{
                                    type:"newwindow",
                                    idFields: "pjtNo,cntrctNo",
                                    isHover:true,
                                    align:"right",
                                    open:{
                                        url:`/project/information/read?pjtNo={id1}&cntrctNo={id2}&type=d`
                                    }
                                }],
                            },
                            resizable: true,
                            ellipsis: true,
                        },
                        {
                            header: "{{ message('item.info.024') }}",
                            name: "dminsttNm",
                            align: "center",
                            width: 100,
                            resizable: true,
                            ellipsis: true,
                        },
                        {
                            header: "{{ message('item.info.002') }}",
                            name: "cntrctTypeNm",
                            align: "center",
                            width: 100,
                            resizable: true,
                            ellipsis: true,
                        },
                        {
                            header: "{{ message('item.info.003') }}",
                            name: "plcLctAdrs",
                            width: 200,
                            ellipsis: true,
                            resizable: true,
                        },
                        {
                            header: "{{ message('item.info.007') }}",
                            name: "periodDate",
                            align: "center",
                            ellipsis: true,
                        },
                        {
                            header: "{{ message('item.info.036') }}",
                            name: "conPstatsNm",
                            align: "center",
                            width: 100,
                        },
                        {
                            header: "{{ message('item.info.028') }}",
                            name: "etcCntnts",
                            ellipsis: true,
                        },
						{
                            name: "cntrctNo",
                            hidden: true
                        },
						{
                            name: "cntrctNm",
                            hidden: true
                        },
						{
                            name: "pjtDiv",
                            hidden: true
                        },
                    ],
                    readUrl: BASEPATH + "/list",
                    gridElement: "information-grid",
                });
            },
        },
        info: {
            data: {
                project: {},
                list: [],
                selected: {},
            },
            // 사업 검색
            search(event) {
                event.preventDefault();

                const searchTerm = $('select[name="searchTerm"]').val();
                const startDate = $('input[name="startDate"]').val();
                const endDate = $('input[name="endDate"]').val();

                const searchType = $('select[name="searchType"]').val();
                const searchText = $('input[name="searchText"]').val();

                const params = {
                    searchTerm: searchTerm,
                    startDate: startDate,
                    endDate: endDate,
                    searchType: searchType,
                    searchText: searchText,
                };

                if (searchTerm === "custom" && startDate === "" && endDate === "") {
                    gaiaCommon.customAlert("공사 기간을 설정해주세요.");

                    return false;
                }
                page.grid.obj.methods.readData(params);
                gaia.setSearchData(params);
            },

            // 사업 추가
            register() {
                window.location.href =
                    `/project/information/register?&type=d&pjtNo=${pjtNo}`;
            },

            // 사업 수정
            update() {
                let checkedNos = []; // 체크된 행
                const checkedRows = page.grid.obj.grid.getCheckedRows();
                checkedRows.forEach(row => {
                    const pjtNo = row.pjtNo;
                    checkedNos.push({ pjtNo });
                });

                if (checkedNos.length == 1) {
                    const selectedRow = checkedNos[0];
                    const { pjtNo } = selectedRow;

                    window.location.href = `/project/information/update?pjtNo=${pjtNo}&type=d`;

                } else {
                    gaiaCommon.customAlert("{{ message('msg.020') }}");
                }
            },

            // 사업 삭제
            delete() {
                const url = "/api/project/information/delete";
                const listName = "informationList";

                let checked = []; // 체크된 행
                const checkedRows = page.grid.obj.grid.getCheckedRows();

                checkedRows.forEach(row => {
                    const pjtNo = row.pjtNo;
                    checked.push(pjtNo);
                });

                if (checked.length > 0) {
                    gaiaCommon.customConfirm("{{ message('item.com.005') }}", "{{ message('item.info.038') }}", "{{ message('msg.009') }}", function () {
                        let data = { [listName]: checked };
                        gaiaCommon.post(url, data, function (response){
                            gaiaCommon.customAlert("{{ message('msg.006') }}");
                            location.reload();
                        },function(error){
                            console.error( "Error deleting data:",xhr.responseText);
                        })
                    });
                } else {
                    gaiaCommon.customAlert("{{ message('msg.021') }}");
                }
            },

            // 사업 excel
            exportToExcel() {
                const exportName = "{{ message('item.info.029') }}";
                page.grid.obj.methods.exportToExcel(exportName);
            },
            userCheck() { },
        },
    };

    // 날짜 형식 변환
    function formatDate(dateStr) {
        if (!dateStr) {
            return null;
        }
        const year = dateStr.slice(0, 4);
        const month = dateStr.slice(4, 6);
        const day = dateStr.slice(6, 8);
        return `${year}-${month}-${day}`;
    }

    // 기간입력창
    function toggleDateRange() {
        const searchTerm = document.getElementById("searchTerm").value;
        const dateRangeContainer = document.getElementById("dateRange");

        if (searchTerm === "custom") {
            dateRangeContainer.style.display = "flex";
        } else {
            dateRangeContainer.style.display = "none";
            document.getElementById("startDate").value = "";
            document.getElementById("endDate").value = "";
        }
    }

    // 새창에서 추가,수정 시 alert창
    document.addEventListener("DOMContentLoaded", function () {
        const alertMessage = localStorage.getItem("alertMessage");
        if (alertMessage) {
            gaiaCommon.customAlert(alertMessage);
            localStorage.removeItem("alertMessage");
        }
    });

    document
        .getElementById("endDate")
        .addEventListener("change", calculateDays);

    function calculateDays() {
        const startDate = document.getElementById("startDate").value;
        const endDate = document.getElementById("endDate").value;

        if (startDate && endDate) {
            const start = new Date(startDate);
            const end = new Date(endDate);

            if (end < start) {
                gaiaCommon.customAlert("{{ message('msg.027') }}");
                document.getElementById("endDate").value = "";
                document.getElementById("cnstwkDaynum").value = "";
                return;
            }
        }
    }

    $(function () {
        gaia.create({
            $init: function ($params) {
                gaiaPortal.navMenuInit("M010101", "{{ message('item.info.037') }}");
                page.init();

                gaia.loaded = true
            }
        });
    })


</script>

{% endblock footer_script %}