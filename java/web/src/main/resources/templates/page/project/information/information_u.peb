{% extends header ? 'layout/base_content' : 'layout/base_popup' %}
    {% block head %}
    <!-- css -->
    <style>
        #loadView .tooltip {
            right: 2500%;
            bottom: -3em;
        }
    </style>
    {% endblock %} {% block content %}
<article class="conts g-row">
    <div class="group">
        <div class="conts_form">
            <div class="btn_area s_default _outline">
                <button type="button" class="btn" id="action-button" onclick="page.save()">{{ message("btn.006") }}</button>
                <button type="button" class="btn" id="close-popup" onclick="page.close()">
                        {{ message("btn.007") }}
                </button>
                <div class="btn_group iconbtns" id="newWindow">
                    <button class="icon_btn" onclick="page.open()">
                        <i class="ic ic-sent-to-back"></i>
                        <span class="tooltip">
                                {{message("item.com.017")}}
                        </span>
                    </button>
                </div>
            </div>
            <form name="addForm" id="addForm">
                <div class="form_box">
                    <div class="group">
                        <!-- row -->
                        <div class="row cols2">
                            <div class="col">
                                <div class="form_label required">
                                    {{ message("item.info.001") }} <!-- 프로젝트명 -->
                                </div>
                                <div class="form_data">
                                    <input type="text" class="form-control maxlength" id="pjtNm" name="pjtNm"
                                           maxlength="100" required />
                                </div>
                            </div>
                            <div class="col">
                                <div class="form_label required">
                                    {{ message("item.info.002") }} <!-- 공사구분 -->
                                </div>

                                <div class="form_data">
                                <span class="selectbox" id="selectBox1">
                                </span>
                                </div>
                            </div>
                        </div>
                        <!-- row -->
                        <div class="row">
                            <div class="col">
                                <div class="form_label">
                                    {{ message("item.info.003") }} <!-- 현장휘치 -->
                                    {{ message("item.info.004") }} <!-- 죄표 -->
                                </div>
                                <div class="form_data">
                                <span class="item_group">
                                    <input type="text" class="form-control maxlength" id="plcLctAdrs"
                                           name="plcLctAdrs" maxlength="100" required />
                                    <span class="item_group put_txt _braket _r">
                                        <span class="item_wrap put_txt _degree">
                                            <!-- 경도 / 180 ~ -180 -->
                                            <div>
                                                {{ message("item.info.005") }} <!-- X -->
                                            </div>
                                            <div>:</div>
                                            <input type="text" class="w-md longitude" id="plcLctX" name="plcLctX"
                                                   maxlength="10" required />
                                        </span>
                                        <span class="item_wrap put_txt _degree">
                                            <!-- 위도 / 90 ~ -90 -->
                                            <div>
                                                {{ message("item.info.006") }} <!-- Y -->
                                            </div>
                                            <div>:</div>
                                            <input type="text" class="w-md latitude" id="plcLctY" name="plcLctY"
                                                   maxlength="10" required />
                                        </span>
                                    </span>
                                     <button type="button" class="btn icon_btn _fill" id="loadView" onclick="execDaumPostcode()">
                                        <i class="ic ic-search"></i>
                                        <span class="tooltip">
                                                {{ message("msg.information.003") }}
                                        </span>
                                        <span class="blind">{{ message("item.com.014") }}</span>
                                    </button>
                                </span>
                                </div>
                            </div>
                        </div>
                        <!-- row -->
                        <div class="row cols2">
                            <div class="col">
                                <div class="form_label required">
                                    {{ message("item.info.039") }} <!-- 지역 구분 -->
                                </div>
                                <div class="form_data">
                                <span class="selectbox" id="selectBox5">
                                </span>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form_label"> {{ message("item.info.027") }} </div> <!-- 공사진행상태 -->
                                <div class="form_data">
                                <span class="selectbox" id="selectBox4">
                                </span>
                                </div>
                            </div>
                        </div>
                        <!-- row -->
                        <div class="row cols2">
                            <div class="col">
                                <div class="form_label">
                                    {{ message("item.info.011") }} <!-- 건축법상용도 -->
                                </div>
                                <div class="form_data">
                                <span class="selectbox" id="selectBox2">
                                </span>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form_label">
                                    {{ message("item.info.012") }} <!-- 계약구분 -->
                                </div>
                                <div class="form_data">
                                <span class="selectbox" id="selectBox3">
                                </span>
                                </div>
                            </div>
                        </div>
                        <!-- row -->
                        <div class="row cols4">
                            <div class="col merge2">
                                <div class="form_label">
                                    {{ message("item.info.007") }} <!-- 공사기간 -->
                                    {{ message("item.info.008") }} <!-- 일수 -->
                                </div>
                                <div class="form_data">
                                <span class="item_group">
                                    <input type="date" class="w-md date" id="pjtBgnDate" name="pjtBgnDate"
                                           max="9999-12-31" />
                                    <span class="_tilde">~</span>
                                    <input type="date" class="w-md date" id="pjtEndDate" name="pjtEndDate"
                                           max="9999-12-31" />
                                    <span class="item_wrap w-sm put_txt _day">
                                        <input type="text" id="cnstwkDaynum" name="cnstwkDaynum" readonly />
                                    </span>
                                </span>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form_label">
                                    {{ message("item.info.009") }} <!-- 공사승인일자 -->
                                </div>
                                <div class="form_data">
                                    <input type="date" class="w-md date" id="aprvlDate" name="aprvlDate"
                                           max="9999-12-31" />
                                </div>
                            </div>
                            <div class="col">
                                <div class="form_label">
                                    {{ message("item.info.010") }} <!-- 착공일자 -->
                                </div>
                                <div class="form_data">
                                    <input type="date" class="w-md date" id="ntpDate" name="ntpDate" max="9999-12-31" />
                                </div>
                            </div>
                        </div>
                        <!-- row -->
                        <div class="row cols2">
                            <div class="col">
                                <div class="form_label">
                                    {{ message("item.info.043") }} <!-- 관리관 명-->
                                </div>
                                <div class="form_data">
                                    <input type="text" class="form-control maxlength" id="insptrNm" name="insptrNm"
                                           maxlength="100" required />
                                </div>
                            </div>
                            <div class="col">
                                <div class="form_label">
                                    {{ message("item.info.044") }} <!-- CM 명 -->
                                </div>
                                <div class="form_data">
                                    <input type="text" class="form-control maxlength" id="cmNm" name="cmNm"
                                           maxlength="100" required />
                                </div>
                            </div>
                        </div>
                        <!-- row -->
                        <div class="row cols2">
                            <div class="col">
                                <div class="form_label">
                                    {{ message("item.info.045") }} <!-- 감리회사 명 -->
                                </div>
                                <div class="form_data">
                                    <input type="text" class="form-control maxlength" id="spvsCorpNm" name="spvsCorpNm"
                                           maxlength="100" required />
                                </div>
                            </div>
                            <div class="col">
                                <div class="form_label">
                                    {{ message("item.info.046") }} <!-- 계약업체 명 -->
                                </div>
                                <div class="form_data">
                                    <input type="text" class="form-control maxlength" id="cntrctCorpNm"
                                           name="cntrctCorpNm" maxlength="100" required />
                                </div>
                            </div>
                        </div>

                        <!-- row -->
                        <div class="row cols2">
                            <div class="col">
                                <div class="form_label">
                                    {{ message("item.info.013") }} <!-- 공사규모 -->
                                </div>
                                <div class="form_data">
                                    <input type="text" class="form-control maxlength" id="cnstwkScle" name="cnstwkScle"
                                           maxlength="200" required />
                                </div>
                            </div>
                            <div class="col">
                                <div class="form_label"> {{ message("item.info.023") }} </div> <!-- 주요시설 -->
                                <div class="form_data">
                                <span class="item_wrap">
                                    <input type="text" class="form-control maxlength" id="mainFcltyCntnts"
                                           name="mainFcltyCntnts" maxlength="200" required />
                                </span>
                                </div>
                            </div>

                        </div>

                        <!-- row -->
                        <div class="row cols4">
                            <div class="col">
                                <div class="form_label">
                                    {{ message("item.info.015") }} <!-- 연면적 -->
                                </div>
                                <div class="form_data">
                                <span class="item_wrap put_txt _s-meter">
                                    <input type="text" class="form-control decimal 7" id="totarVal" name="totarVal"
                                           step="0.01" maxlength="12" required />
                                </span>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form_label">
                                    {{ message("item.info.016") }} <!-- 조경면적 -->
                                </div>
                                <div class="form_data">
                                <span class="item_wrap put_txt _s-meter">
                                    <input type="text" class="form-control decimal 7" id="landarchtAreaVal"
                                           name="landarchtAreaVal" maxlength="12" requiredf />
                                </span>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form_label">
                                    {{ message("item.info.017") }} <!-- 대지면적 -->
                                </div>
                                <div class="form_data">
                                <span class="item_wrap put_txt _s-meter">
                                    <input type="text" class="form-control decimal 7" id="lndAreaVal"
                                           name="lndAreaVal" maxlength="12" required />
                                </span>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form_label">
                                    {{ message("item.info.018") }} <!-- 건축면적 -->
                                </div>
                                <div class="form_data">
                                <span class="item_wrap put_txt _s-meter">
                                    <input type="text" class="form-control decimal 7" id="archtctAreaVal"
                                           name="archtctAreaVal" maxlength="12" required />
                                </span>
                                </div>
                            </div>
                        </div>
                        <!-- row -->
                        <div class="row cols4">
                            <div class="col">
                                <div class="form_label"> {{ message("item.info.019") }} </div> <!-- 건폐율 -->
                                <div class="form_data">
                                <span class="item_wrap put_txt _per">
                                    <input type="text" class="form-control decimal 3" id="bdtlRate" name="bdtlRate"
                                           step="0.01" maxlength="12" required />
                                </span>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form_label"> {{ message("item.info.020") }} </div> <!-- 용적율 -->
                                <div class="form_data">
                                <span class="item_wrap put_txt _per">
                                    <input type="text" class="form-control decimal 3" id="measrmtRate"
                                           name="measrmtRate" maxlength="12" required />
                                </span>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form_label"> {{ message("item.info.021") }} </div> <!-- 기준층층고높이 -->
                                <div class="form_data">
                                <span class="item_wrap put_txt _meter">
                                    <input type="text" class="form-control decimal 4" id="bssFloorHgVal"
                                           name="bssFloorHgVal" maxlength="13" required />
                                </span>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form_label"> {{ message("item.info.022") }} </div> <!-- 최고높이 -->
                                <div class="form_data">
                                <span class="item_wrap put_txt _meter">
                                    <input type="text" class="form-control decimal 4" id="topHgVal" name="topHgVal"
                                           maxlength="13" required />
                                </span>
                                </div>
                            </div>
                        </div>

                        <!-- row -->
                        <div class="row cols2">
                            <div class="col">
                                <div class="form_label"> {{ message("item.info.025") }} </div> <!-- 최초계약금액 -->
                                <div class="form_data">
                                <span class="item_wrap put_txt _won">
                                    <input type="text" class="form-control cost" id="cnstwkCst" name="cnstwkCst"
                                           maxlength="18" required />
                                </span>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form_label"> {{ message("item.info.026") }} </div> <!-- 변경공사금액 -->
                                <div class="form_data">
                                <span class="item_wrap put_txt _won">
                                    <input type="text" class="form-control cost" id="chgCntrctAmt"
                                           name="chgCntrctAmt" maxlength="18" required />
                                </span>
                                </div>
                            </div>
                        </div>
                        <!-- row -->
                        <div class="row">
                            <div class="col">
                                <div class="form_label">
                                    {{ message("item.info.014") }} <!-- 주차대수 -->
                                </div>
                                <div class="form_data">
                                <span class="item_wrap put_txt _dae">
                                    <input type="text" class="form-control number" id="parkngPsblNum"
                                           name="parkngPsblNum" maxlength="5" required />
                                </span>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form_label required"> {{ message("item.com.003") }} </div> <!-- 사용여부 -->

                                <div class="form_data">
                                    <div class="item_group" role="group" aria-label="Basic radio group">
                                        <label class="form_check">
                                            <input type="radio" id="useY" name="useYn" class="check_mark" value="Y"
                                                   checked />
                                            <span class="check_label">{{message("item.com.015")}}</span>
                                        </label>
                                        <label class="form_check">
                                            <input type="radio" id="useN" name="useYn" class="check_mark" value="N" />
                                            <span class="check_label">{{message("item.com.016")}}</span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- row -->
                        <div class="row">
                            <div class="col">
                                <div class="form_label"> {{ message("item.info.024") }} </div> <!-- 수요기관 -->

                                <div class="form_data">
                                    <!-- 수요기관 구분 라디오 버튼 -->
                                    <div class="item_group" role="group" aria-label="기관 구분" style="margin-top: 8px;">
                                        <label class="form_check">
                                            <input type="radio" id="dminsttDivPU" name="dminsttDiv" class="check_mark"
                                                   value="PU" checked />
                                            <span class="check_label">민간</span>
                                        </label>
                                        <label class="form_check">
                                            <input type="radio" id="dminsttDivGO" name="dminsttDiv" class="check_mark"
                                                   value="GO" />
                                            <span class="check_label">공공</span>
                                        </label>
                                    </div>

                                    <!-- 수요기관 코드/이름 입력 -->
                                    <div class="form_data" style="margin-top: 8px;">
                                    <span class="item_wrap">
                                        <input type="text" class="form-control w-sm" id="dminsttCd" name="dminsttCd"
                                               readonly />
                                        <input type="text" class="form-control" id="dminsttNm" name="dminsttNm"
                                               placeholder="수요기관 입력" />
                                    </span>

                                        <button type="button" class="btn icon_btn _fill" id="btnOpenOrgSearchPopup"
                                                style="margin-left: 20px;">
                                            <i class="ic ic-search"></i>
                                            <span class="tooltip"></span>
                                            <span class="blind">{{ message("item.com.014") }}</span> <!-- 검색 -->
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- row -->
                        <div class="row">
                            <div class="col">
                                <div class="form_label"> {{ message("item.info.028") }} </div> <!-- 비고 -->
                                <div class="form_data">
                                <span class="item_group">
                                    <textarea class="form-control maxlength" id="etcCntnts" name="etcCntnts"
                                              maxlength="2000" required></textarea>
                                </span>
                                </div>
                            </div>
                        </div>
                        <!-- row -->
                        <div class="row">
                            <div class="col">
                                <div class="form_label"> {{ message("item.info.055") }} </div>
                                <div class="form_data">

                                    <ul style="width: 100%; list-style: none; padding: 0; margin: 0;">
                                        <li class="btn_area "
                                            style="display: grid; grid-template-columns: 200px auto 100px 40%; gap: var(--gap-item-group);">
                                            <p style="width: max-content;">1. {{ message("item.info.047") }}</p>
                                            <span class="item_wrap put_txt _grade">
                                            <input type="text" name="greenLevel" id="greenLevel"
                                                   class="form-control maxlength" maxlength="50">
                                        </span>
                                            <div class="attach_btn">
                                                <input type="file" accept=".pdf" id="greenLevelDocId" name="greenLevelDocId" >
                                                <button type="button" class="btn _fill s_small" id="greenLevelBtn">
                                                        {{ message("item.info.054") }}</button>
                                            </div>
                                            <div id="greenLevelAttachArea"></div>
                                        </li>
                                        <li class="btn_area"
                                            style="display: grid; grid-template-columns: 200px auto 100px 40%; gap: var(--gap-item-group);">
                                            <p style="width: max-content;">2. {{ message("item.info.048") }}</p>
                                            <span class="item_wrap put_txt _grade">
                                            <input type="text" name="energyEffectLevel" id="energyEffectLevel"
                                                   class="form-control maxlength" maxlength="50">
                                        </span>
                                            <div class="attach_btn">
                                                <input type="file" accept=".pdf" id="energyEffectLevelDocId" name="energyEffectLevelDocId">
                                                <button type="button" class="btn _fill s_small"
                                                        id="energyEffectLevelBtn">{{ message("item.info.054") }}</button>
                                            </div>
                                            <div id="energyEffectLevelAttachArea"></div>
                                        </li>
                                        <li class="btn_area"
                                            style="display: grid; grid-template-columns: 200px auto 100px 40%; gap: var(--gap-item-group);">
                                            <p style="width: max-content;">3. {{ message("item.info.049") }}</p>
                                            <span class="item_wrap put_txt _grade">
                                            <input type="text" name="zeroEnergyLevel" id="zeroEnergyLevel"
                                                   class="form-control maxlength" maxlength="50">
                                        </span>
                                            <div class="attach_btn">
                                                <input type="file" accept=".pdf" id="zeroEnergyLevelDocId" name="zeroEnergyLevelDocId">
                                                <button type="button" class="btn _fill s_small"
                                                        id="zeroEnergyLevelBtn">{{ message("item.info.054") }}</button>
                                            </div>
                                            <div id="zeroEnergyLevelAttachArea"></div>
                                        </li>
                                        <li class="btn_area"
                                            style="display: grid; grid-template-columns: 200px auto 100px 40%; gap: var(--gap-item-group);">
                                            <p style="width: max-content;">4. {{ message("item.info.050") }}</p>
                                            <span class="item_wrap put_txt _grade">
                                            <input type="text" name="bfLevel" id="bfLevel"
                                                   class="form-control maxlength" maxlength="50">
                                        </span>
                                            <div class="attach_btn">
                                                <input type="file" accept=".pdf" id="bfLevelDocId" name="bfLevelDocId">
                                                <button type="button" class="btn _fill s_small" id="bfLevelBtn">
                                                        {{ message("item.info.054") }}</button>
                                            </div>
                                            <div id="bfLevelAttachArea"></div>
                                        </li>
                                    </ul>

                                </div>
                            </div>
                        </div>
                        <!-- row -->
                        <div class="row cols3">
                            <div class="col">
                                <div class="form_label">{{ message("item.info.051") }}</div> <!-- 환경성선언제품 -->
                                <div class="form_data">
                                <span class="item_wrap put_txt _number">
                                    <input type="text" name="evironmentMtrl" id="evironmentMtrl"
                                           class="form-control number maxlength" maxlength="5">
                                </span>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form_label">{{ message("item.info.052") }}</div> <!-- 저탄소제품 -->
                                <div class="form_data">
                                <span class="item_wrap put_txt _number">
                                    <input type="text" name="co2Mtrl" id="co2Mtrl"
                                           class="form-control number maxlength" maxlength="5">
                                </span>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form_label">{{ message("item.info.053") }}</div> <!-- 친환경제품 -->
                                <div class="form_data">
                                <span class="item_wrap put_txt _number">
                                    <input type="text" name="ecoMtrl" id="ecoMtrl"
                                           class="form-control number maxlength" maxlength="5">
                                </span>
                                </div>
                            </div>
                        </div>

                        <div class="box img_box" id="img_box">
                            <!-- 기본, 조감도 미등록 상태 -->
                            <p class="data_info" id="data_info">
                                    {{ message("msg.022") }}
                            </p>
                            <!-- 조감도 등록 -  p에 '.hide' / img의 '.hide' 삭제 -->
                            <img src="" class="hide" id="imagePreview" />
                            <div class="btn_area">
                                <button type="button" class="btn icon_btn _outline" id="addFileButton">
                                    <i class="ic ic-picture-one"></i>
                                    <span class="tooltip">
                                            {{ message("item.info.033") }}
                                    </span>
                                </button>
                                <button type="button" class="btn icon_btn _outline" id="removeAllButton">
                                    <i class="ic ic-delete"></i>
                                    <span class="tooltip">
                                            {{ message("item.info.034") }}
                                    </span>
                                </button>
                                <input type="file" accept="image/*" id="fileNm" name="fileNm" style="display: none" />
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</article>
<div id="popup" class="popup_overlay modal_base" style="display: none;">
    <!-- 모달창 내용 -->
</div>
{% endblock content %} {% block footer_script %}
<!-- TODO FIXME API KEY 교체  -->
<script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
<script src="//dapi.kakao.com/v2/maps/sdk.js?appkey=efec1f02b667e5e6ebcaf575cac03ffe&libraries=services"
        type="text/javascript"></script>
<script>
    const params = new URLSearchParams(window.location.search);
    var type = params.get("type");
    const pjtNo = params.get("pjtNo");
    let plcReqNo = params.get('plcReqNo') ? params.get('plcReqNo') : null;

    let isPublic = false;

    var page = {
        data: {
            init: "={{ message('item.com.005') }}="
        },

        bindingEvent: function () {
            $('#btnOpenOrgSearchPopup').on('click', function (e) {
                openOrgSearchPopup();
            });
        },

        init: function () {
            this.bindingEvent();
            this.loadData(pjtNo);

            var title = "{{ message('item.info.030') }}";
            $("#addForm input[radio]").prop("disabled", false);

            gaiaPortal.navMenuInit("M010101", title);
            $("#menuDepth").append(`<li class="breadcrumb_item">${title}</li>`);

            if (type === 'p') {
                $("#newWindow").hide();
                $(".breadcrumb_item").css("pointerEvents","none");
            }
        },

        // 새창
        open: function () {
            const width = 1500;
            const height = 700;
            let left = Math.ceil((window.screen.width - width) / 2);
            left += window.screenLeft; // 듀얼 모니터일 때
            const top = Math.ceil((window.screen.height - height) / 2);

            window.open(
                    `/project/information/update?pjtNo=${pjtNo}&type=p`,
                    "",
                    `width=${width},height=${height},left=${left},top=${top}`
            );

            window.location.replace(`/project/information?pjtNo=${pjtInfo.pjtNo}&cntrctNo=${pjtInfo.cntrctNo}&_condition=init`);
            return false;
        },

        // 저장
        save: function () {
            /**
             * 2025-01-02 경위도 validation 추가
             * 경도 (Longitude) - plcLctX
             * 위도 (Latitude) - plcLctY
             */
            let fn_valid_result = validateLatLon($('#plcLctX').val(), $('#plcLctY').val());

            if (!fn_valid_result.valid) {
                if (fn_valid_result.longitude != "" && fn_valid_result.target.includes('longitude')) {
                    let callback = function () { $('#plcLctX').focus(); }
                    // 경도는 -180에서 180 사이의 유효한 숫자여야 합니다.
                    gaiaCommon.customAlert("{{ message('msg.information.002') }}", callback);
                    return false;
                }
                if (fn_valid_result.latitude != "" && fn_valid_result.target.includes('latitude')) {
                    let callback = function () { $('#plcLctY').focus(); }
                    // 위도는 -90에서 90 사이의 유효한 숫자여야 합니다.
                    gaiaCommon.customAlert("{{ message('msg.information.001') }}", callback);
                    return false;
                }
            }
            this.update();
        },

        // 닫기
        close: function () {
            if (type === 'd') {
                window.location.replace(`/project/information?pjtNo=${pjtInfo.pjtNo}&cntrctNo=${pjtInfo.cntrctNo}&_condition=init`);
            } else if (type === 'p') {
                window.close();
            }
        },

        // 수정
        update: function () {
            const params = new URLSearchParams(window.location.search);
            const addForm = document.getElementById("addForm");
            const formData = new FormData(addForm);
            const pjtNo = params.get("pjtNo");
            const pjtNm = $("#pjtNm").val();
            const cnstwkType = $("#cnstwkType").val();
            const useYn = $("input[name='useYn']:checked").val();
            const rgnCd = $("#rgnCd").val();
            const conPstats = $("#conPstats").val();

            if (pjtNm.trim() && cnstwkType && useYn && rgnCd && conPstats) {
                let projectData = {
                    pjtNo: pjtNo,
                    pjtNm: pjtNm.trim(),
                    cnstwkType: $("#cnstwkType").val(),
                    plcLctAdrs: $("#plcLctAdrs").val().trim(),
                    plcLctX: $("#plcLctX").val(),
                    plcLctY: $("#plcLctY").val(),
                    pjtBgnDate: formatDate($("#pjtBgnDate").val()),
                    pjtEndDate: formatDate($("#pjtEndDate").val()),
                    cnstwkDaynum: $("#cnstwkDaynum").val(),
                    aprvlDate: formatDate($("#aprvlDate").val()),
                    ntpDate: formatDate($("#ntpDate").val()),
                    acrarchlawUsgCd: $("#acrarchlawUsgCd").val(),
                    cntrctType: $("#cntrctType").val(),
                    cnstwkScle: $("#cnstwkScle").val().trim(),
                    parkngPsblNum: $("#parkngPsblNum").val(),
                    totarVal: $("#totarVal").val(),
                    lndAreaVal: $("#lndAreaVal").val(),
                    archtctAreaVal: $("#archtctAreaVal").val(),
                    landarchtAreaVal: $("#landarchtAreaVal").val(),
                    bdtlRate: $("#bdtlRate").val(),
                    measrmtRate: $("#measrmtRate").val(),
                    bssFloorHgVal: $("#bssFloorHgVal").val(),
                    topHgVal: $("#topHgVal").val(),
                    mainFcltyCntnts: $("#mainFcltyCntnts").val().trim(),
                    dminsttDiv: $('input[name="dminsttDiv"]:checked').val(),
                    dminsttNm: $("#dminsttNm").val().trim().split('>').pop().trim(),
                    dminsttCd: $("#dminsttCd").val(),
                    cnstwkCst: removeCommas($("#cnstwkCst").val()),
                    chgCntrctAmt: removeCommas($("#chgCntrctAmt").val()),
                    conPstats: $("#conPstats").val()
                            ? $("#conPstats").val()
                            : "0602",
                    etcCntnts: $("#etcCntnts").val(),
                    useYn: $("input[name='useYn']:checked").val(),

                    rgnCd: $("#rgnCd").val(),
                    insptrNm: $("#insptrNm").val().trim(),
                    cmNm: $("#cmNm").val().trim(),
                    spvsCorpNm: $("#spvsCorpNm").val().trim(),
                    cntrctCorpNm: $("#cntrctCorpNm").val().trim(),

                    greenLevel: $("#greenLevel").val(),
                    energyEffectLevel: $("#energyEffectLevel").val(),
                    zeroEnergyLevel: $("#zeroEnergyLevel").val(),
                    bfLevel: $("#bfLevel").val(),

                    evironmentMtrl: $("#evironmentMtrl").val(),
                    co2Mtrl: $("#co2Mtrl").val(),
                    ecoMtrl: $("#ecoMtrl").val(),
                };

                console.log(projectData)

                // JSON 데이터를 FormData에 추가
                formData.append(
                        "projectData",
                        new Blob([JSON.stringify(projectData)], {
                            type: "application/json",
                        })
                );
                const maxSize = 25 * 1024 * 1024; // 25MB
                const fileInputs = [
                    { id: "fileNm", key: "files" },                     // 조감도
                    { id: "greenLevelDocId", key: "greenLevelDoc" },     // 녹색건축
                    { id: "energyEffectLevelDocId", key: "energyEffectLevelDoc" }, // 에너지효율
                    { id: "zeroEnergyLevelDocId", key: "zeroEnergyLevelDoc" }, // 제로에너지
                    { id: "bfLevelDocId", key: "bfLevelDoc" }            // BF 인증
                ];

                fileInputs.forEach(input => {
                    const inputElement = document.getElementById(input.id);
                    if (inputElement && inputElement.files.length > 0) {
                        const file = inputElement.files[0];
                        if (file.size > maxSize) {
                            gaiaCommon.customAlert("{{ message('msg.app.013') }}".replace('{0}', maxSize));
                            throw new Error('File size exceeded');
                        }
                        formData.append(input.key, file);
                    }
                });

                formData.append("deleteFileYn", file.deleteFileYn);
                file.deleteEcoDocId.forEach(item  => {
                    formData.append("deleteEcoDocId", item.docId);
                });

                const url = "/api/project/information/update/" + pjtNo;
                gaiaCommon.LoadingOverlay('body', true);
                gaiaCommon.post(url, formData, function (data){
                    if (data.ok) {
                        gaiaCommon.customAlert("{{ message('msg.007') }}", function () {
                            if (type === 'd') {
                                window.location.replace(`/project/information?pjtNo=${pjtInfo.pjtNo}&cntrctNo=${pjtInfo.cntrctNo}`);
                            } else if (type === 'p') {
                                if (window.opener && !window.opener.closed) {
                                    window.opener.location.reload();
                                }
                                window.close();
                            }
                            gaiaCommon.LoadingOverlay('body', false);
                        });
                    } else {
                        gaiaCommon.customAlert(data.message);
                    }
                }, function (error){
                    console.error(status, error);
                    gaiaCommon.customAlert("{{ message('msg.060') }}");
                    gaiaCommon.LoadingOverlay('body', false);
                })
            } else if (!pjtNm.trim()) {
                let callback = function () { $('#pjtNm').focus(); }
                gaiaCommon.customAlert("{{ message('msg.023') }}", callback);
                return false;
            } else if (!cnstwkType) {
                let callback = function () { $('#cnstwkType').focus(); }
                gaiaCommon.customAlert("{{ message('msg.024') }}", callback);
                return false;
            } else if (!rgnCd) {
                let callback = function () { $('#rgnCd').focus(); }
                gaiaCommon.customAlert("{{ message('msg.063') }}", callback);
                return false;
            } else if (!conPstats) {
                let callback = function () { $('#conPstats').focus(); }
                gaiaCommon.customAlert("공사진행 상태를 선택해주세요.", callback);
                return false;
            } else {
                gaiaCommon.customAlert("{{ message('msg.025') }}");
                return false;
            }
        },

        // 수정시 기본데이터
        loadData: function (pjtNo) {
            const url = "/api/project/information/" + pjtNo;
            gaiaCommon.get(url, {}, function (result) {
                let data = result.details.project;
                let fileData = result.details.attachment;
                let greenLevelDoc = result.details.greenLevelDoc;
                let energyEffectLevelDoc = result.details.energyEffectLevelDoc;
                let zeroEnergyLevelDoc = result.details.zeroEnergyLevelDoc;
                let bfLevelDoc = result.details.bfLevelDoc;

                $(".cost").each(function () {
                    $(this).val($(this).val().replace(/,/g, ""));
                });
                // 폼 데이터 채우기
                $("#pjtNm").val(gaiaCommon.decodeSafeText(data.pjtNm));
                $("#cnstwkType").val(gaiaCommon.decodeSafeText(data.cnstwkType));
                $("#plcLctAdrs").val(gaiaCommon.decodeSafeText(data.plcLctAdrs));
                $("#plcLctX").val(data.plcLctX);
                $("#plcLctY").val(data.plcLctY);
                $("#pjtBgnDate").val(formatDate2(data.pjtBgnDate));
                $("#pjtEndDate").val(formatDate2(data.pjtEndDate));
                $("#cnstwkDaynum").val(data.cnstwkDaynum);
                $("#aprvlDate").val(formatDate2(data.aprvlDate));
                $("#ntpDate").val(formatDate2(data.ntpDate));
                $("#acrarchlawUsgCd").val(gaiaCommon.decodeSafeText(data.acrarchlawUsgCd));
                $("#cntrctType").val(gaiaCommon.decodeSafeText(data.cntrctType));
                $("#cnstwkScle").val(gaiaCommon.decodeSafeText(data.cnstwkScle));
                $("#parkngPsblNum").val(data.parkngPsblNum);
                $("#totarVal").val(data.totarVal);
                $("#lndAreaVal").val(data.lndAreaVal);
                $("#archtctAreaVal").val(data.archtctAreaVal);
                $("#landarchtAreaVal").val(data.landarchtAreaVal);
                $("#bdtlRate").val(data.bdtlRate);
                $("#measrmtRate").val(data.measrmtRate);
                $("#bssFloorHgVal").val(data.bssFloorHgVal);
                $("#topHgVal").val(data.topHgVal);
                $("#mainFcltyCntnts").val(gaiaCommon.decodeSafeText(data.mainFcltyCntnts));
                $("#dminsttNm").val(gaiaCommon.decodeSafeText(data.dminsttNm));
                $("#cnstwkCst").val(addCommas(data.cnstwkCst));
                $("#chgCntrctAmt").val(addCommas(data.chgCntrctAmt));
                $("#conPstats").val(gaiaCommon.decodeSafeText(data.conPstats));
                $("#etcCntnts").val(gaiaCommon.decodeSafeText(data.etcCntnts));

                $("#rgnCd").val(gaiaCommon.decodeSafeText(data.rgnCd));
                $("#insptrNm").val(gaiaCommon.decodeSafeText(data.insptrNm));
                $("#cmNm").val(gaiaCommon.decodeSafeText(data.cmNm));
                $("#spvsCorpNm").val(gaiaCommon.decodeSafeText(data.spvsCorpNm));
                $("#cntrctCorpNm").val(gaiaCommon.decodeSafeText(data.cntrctCorpNm));

                $("#greenLevel").val(gaiaCommon.decodeSafeText(data.greenLevel));
                $("#energyEffectLevel").val(gaiaCommon.decodeSafeText(data.energyEffectLevel));
                $("#zeroEnergyLevel").val(gaiaCommon.decodeSafeText(data.zeroEnergyLevel));
                $("#bfLevel").val(gaiaCommon.decodeSafeText(data.bfLevel));

                $("#evironmentMtrl").val(gaiaCommon.decodeSafeText(data.evironmentMtrl));
                $("#co2Mtrl").val(gaiaCommon.decodeSafeText(data.co2Mtrl));
                $("#ecoMtrl").val(gaiaCommon.decodeSafeText(data.ecoMtrl));

                if (data.useYn === "Y") {
                    $("#useY").prop("checked", true);
                } else {
                    $("#useN").prop("checked", true);
                }

                calculateDays();

                if (data.dminsttDiv === "GO") {
                    $("#dminsttDivGO").prop("checked", true);
                    $('#btnOpenOrgSearchPopup').show();
                    isPublic = true;
                } else {
                    $("#dminsttDivPU").prop("checked", true);
                    $('#btnOpenOrgSearchPopup').hide();
                    isPublic = false;
                }

                // 파일 미리보기 업데이트
                const imagePreview =
                        document.getElementById("imagePreview");
                const dataInfo = document.getElementById("data_info");

                if (fileData) {
                    const rawPath = fileData.fileDiskPath || '';
                    const normalizedPath = rawPath.replace(/\\/g, '/');
                    const trimmedPath = normalizedPath.replace(/^.*\/upload/, '/upload');

                    const fileUrl = trimmedPath + "/" + fileData.fileDiskNm;
                    imagePreview.src = fileUrl;
                    imagePreview.style.display = "block";
                    imagePreview.style.maxWidth = "fit-content";
                    dataInfo.style.display = "none";

                } else {
                    // 파일이 없는 경우
                    imagePreview.style.display = "none";
                    dataInfo.style.display = "block";
                }

                page.renderEcoFile(greenLevelDoc, "#greenLevelAttachArea", "#greenLevelDocId");
                page.renderEcoFile(energyEffectLevelDoc, "#energyEffectLevelAttachArea", "#energyEffectLevelDocId");
                page.renderEcoFile(zeroEnergyLevelDoc, "#zeroEnergyLevelAttachArea", "#zeroEnergyLevelDocId");
                page.renderEcoFile(bfLevelDoc, "#bfLevelAttachArea", "#bfLevelDocId");

                file.originEcoDocs = {
                    greenLevelDoc: greenLevelDoc ? greenLevelDoc.docId : null,
                    energyEffectLevelDoc: energyEffectLevelDoc ? energyEffectLevelDoc.docId : null,
                    zeroEnergyLevelDoc: zeroEnergyLevelDoc ? zeroEnergyLevelDoc.docId : null,
                    bfLevelDoc: bfLevelDoc ? bfLevelDoc.docId : null,
                };
            });
        },

        renderEcoFile: function (doc, targetId, inputId) {
            if (doc && doc.docNm) {
                const html = `
                    <div class="list_item">
                        <span class="f_name" style="width:100%;">${doc.docNm}</span>
                        <button type="button" class="icon_btn">
                            <i class="ic ic-close"></i>
                            <span class="blind">첨부파일 삭제</span>
                        </button>
                    </div>
                `;

                const $targetArea = $(targetId);
                const $input = $(inputId);

                $targetArea.empty().append(html);

                // 삭제 버튼 클릭 시 삭제할 리스트 담기
                $targetArea.find(".icon_btn").on("click", function () {
                    $input.val("");
                    $targetArea.empty();
                    file.deleteEcoDocId.push({ docId: doc.docId });
                });
            }
        },

        // 셀렉트박스 호출
        makeSelectBox: function (comCodeSelectBoxGets, callback) {
            gaiaCommon.post("/api/util/make-selectBox", comCodeSelectBoxGets, function(data){
                let returnMap = data.details.returnMap;
                comCodeSelectBoxGets.forEach(function (item, index) {
                    let addAppLineContent = document.getElementById(item.selectBoxId);
                    let categorySelect = `${returnMap[item.selectBoxId]}`;

                    if (plcReqNo == null && item.selectBoxId === "conPstats") {
                        // 👉 기본 추가 페이지: "0601" 제거만 하고, 비활성화하지 않음
                        let tempDom = document.createElement("div");
                        tempDom.innerHTML = categorySelect;
                        let options = tempDom.querySelectorAll("option");
                        options.forEach((opt) => {
                            if (opt.value === "0601") {
                                opt.remove();
                            }
                        });
                        categorySelect = tempDom.innerHTML;

                    } else if (plcReqNo != null && item.selectBoxId === "conPstats") {
                        // 👉 현장개설요청 페이지: "0601"만 남기고 선택 + 비활성화
                        let tempDom = document.createElement("div");
                        tempDom.innerHTML = categorySelect;
                        let options = tempDom.querySelectorAll("option");

                        options.forEach((opt) => {
                            if (opt.value !== "0601") {
                                opt.remove();
                            } else {
                                opt.selected = true;
                            }
                        });

                        categorySelect = tempDom.innerHTML;

                        // 👉 DOM에 렌더링된 후 비활성화 처리
                        setTimeout(() => {
                            const selectBox = document.getElementById("conPstats");
                            if (selectBox) {
                                selectBox.disabled = true;
                            }
                        }, 0);
                    }

                    if (addAppLineContent) {
                        addAppLineContent.innerHTML = categorySelect;
                    }

                    $(`#selectBox${index + 1}`).append(categorySelect);
                });

                if (typeof callback === "function") callback();
            }, function(status, error){
                console.error("Error making select box:", status, error);
            })
        },

        initializeSelectBoxes() {
            let selectBoxRequests = [
                {
                    cmnGrpCd: "ce229e27-98c6-8c89-7be7-cbc27b0b1fc8",
                    selectBoxId: "cnstwkType",
                    selectBoxNmType: "KOR",
                    ckeckedValue: "",
                    orderByCol: "",
                    orderByType: "",
                    initText: page.data.init,
                    paramNm: "cnstwkType",
                    funName: "",
                    funParam: "this.value",
                    funtype: "",
                },
                {
                    cmnGrpCd: "97bdc843-f3be-05fc-0812-8acc7206dde5",
                    selectBoxId: "acrarchlawUsgCd",
                    selectBoxNmType: "KOR",
                    ckeckedValue: "",
                    orderByCol: "",
                    orderByType: "",
                    initText: page.data.init,
                    paramNm: "acrarchlawUsgCd",
                    funName: "",
                    funParam: "this.value",
                    funtype: "",
                },
                {
                    cmnGrpCd: "0575cf90-0d6a-4d96-a298-d252c8179c32",
                    selectBoxId: "cntrctType",
                    selectBoxNmType: "KOR",
                    ckeckedValue: "",
                    orderByCol: "",
                    orderByType: "",
                    initText: page.data.init,
                    paramNm: "cntrctType",
                    funName: "",
                    funParam: "this.value",
                    funtype: "",
                },
                {
                    cmnGrpCd: "d5b531ad-6c9d-c2e6-f9b7-7c1aca9d4711",
                    selectBoxId: "conPstats",
                    selectBoxNmType: "KOR",
                    ckeckedValue: "",
                    orderByCol: "",
                    orderByType: "",
                    initText: page.data.init,
                    paramNm: "conPstats",
                    funName: "",
                    funParam: "this.value",
                    funtype: "",
                },
                {
                    cmnGrpCd: "a86bb248-ea2a-40fc-b6bb-3663b5e4a453",
                    selectBoxId: "rgnCd",
                    selectBoxNmType: "KOR",
                    ckeckedValue: "",
                    orderByCol: "cmn_cd_nm_krn",
                    orderByType: "",
                    initText: page.data.init,
                    paramNm: "rgnCd",
                    funName: "",
                    funParam: "this.value",
                    funtype: "",
                },

            ];

            page.makeSelectBox(selectBoxRequests, function() {
                // select box 렌더링이 끝난 후 init 호출
                page.init();
            });
        },
    };

    var file = {
        originEcoDocs: {
            greenLevelDoc: null,
            energyEffectLevelDoc: null,
            zeroEnergyLevelDoc: null,
            bfLevelDoc: null,
        },
        deleteEcoDocId:[],
        deleteFileYn: "N",

        airvwAtchFile() {
            const dropArea = document.getElementById("img_box");
            const addBtn = document.getElementById("addFileButton");
            const removeBtn = document.getElementById("removeAllButton");
            const fileInput = document.getElementById("fileNm");
            const imagePreview = document.getElementById("imagePreview");
            const dataInfo = document.getElementById("data_info");

            // 클릭 이벤트 처리
            addBtn.addEventListener("click", () => {
                fileInput.click();
            });

            // 드래그 앤 드롭 이벤트 처리
            dropArea.addEventListener("dragover", (e) => {
                e.preventDefault();
                e.stopPropagation();
                dropArea.style.backgroundColor = "#eee";
            });

            dropArea.addEventListener("dragleave", (e) => {
                e.preventDefault();
                e.stopPropagation();
                dropArea.style.backgroundColor = "#fff";
            });

            dropArea.addEventListener("drop", (e) => {
                e.preventDefault();
                e.stopPropagation();
                dropArea.style.backgroundColor = "#fff";
                const files = e.dataTransfer.files;
                if (validateFiles(files)) {
                    // 파일 입력 필드에 파일 설정
                    fileInput.files = files;
                    handleFiles(files);
                }

            });

            // 파일 입력 필드 변경 이벤트 처리
            fileInput.addEventListener("change", () => {
                const files = fileInput.files;
                if (validateFiles(files)) {
                    handleFiles(files);
                }
            })

            // 삭제 버튼 클릭 이벤트 처리
            removeBtn.addEventListener("click", () => {
                imagePreview.src = ""; // 이미지 미리보기 초기화
                imagePreview.classList.add("hide"); // 이미지 숨기기
                dataInfo.style.display = "block"; // 기본 메시지 보이기
                imagePreview.style.display = "none";
                fileInput.value = ""; // 파일 입력 초기화

                file.deleteFileYn = "Y";
            });

            // 이미지 및 파일 표시 함수
            function handleFiles(files) {
                if (files.length > 0) {
                    dataInfo.style.display = "none";
                    imagePreview.style.display = "block";
                    imagePreview.style.maxWidth = "fit-content";
                    imagePreview.classList.remove("hide");

                    const file = files[0];
                    const reader = new FileReader();
                    reader.onload = (event) => {
                        imagePreview.src = event.target.result;
                        imagePreview.style.maxWidth = "fit-content";
                    };
                    reader.readAsDataURL(file);
                }
                file.deleteFileYn = "Y";
            }

            // 첨부파일형식 유효성
            function validateFiles(files) {
                const allowedExtensions = ["image/"];

                const file = files[0];
                const fileType = file.type;
                const isValid = allowedExtensions.some((ext) =>
                        fileType.startsWith(ext)
                );
                if (!isValid) {
                    gaiaCommon.customAlert("{{ message('msg.026') }} : " + file.name);
                    return false;
                }
                return true;
            }
        },

        ecoFile() {
            const mappings = [
                { btn: "#greenLevelBtn", input: "#greenLevelDocId", target: "#greenLevelAttachArea" },
                { btn: "#energyEffectLevelBtn", input: "#energyEffectLevelDocId", target: "#energyEffectLevelAttachArea" },
                { btn: "#zeroEnergyLevelBtn", input: "#zeroEnergyLevelDocId", target: "#zeroEnergyLevelAttachArea" },
                { btn: "#bfLevelBtn", input: "#bfLevelDocId", target: "#bfLevelAttachArea" },
            ];

            mappings.forEach(({ btn, input, target }) => {
                // 등록 버튼 클릭 -> 파일 선택창 열기
                $(btn).on("click", function () {
                    $(input).click();
                });

                // 파일 선택하면 파일명 표시 + 동적으로 list_item 생성
                $(input).on("change", function (e) {
                    const fileName = e.target.files.length > 0 ? e.target.files[0].name : "";

                    const $targetArea = $(target);
                    $targetArea.empty();

                    if (fileName) {
                        const docKey = input.replace("#", "").replace("DocId", "Doc"); // greenLevelDocId -> greenLevelDoc
                        const originDocId = file.originEcoDocs[docKey];
                        if (originDocId) {
                            file.deleteEcoDocId.push({ docId: originDocId });
                            file.originEcoDocs[docKey] = null;
                        }

                        const listItem = `
                        <div class="list_item">
                            <span class="f_name" style="width:100%;">${fileName}</span>
                            <button type="button" class="icon_btn">
                                <i class="ic ic-close"></i>
                                <span class="blind">첨부파일 삭제</span>
                            </button>
                        </div>
                    `;
                        $targetArea.append(listItem);

                        // X 버튼 누르면 파일 초기화 + 삭제
                        $targetArea.find(".icon_btn").on("click", function () {
                            $(input).val("");
                            $targetArea.empty();
                        });
                    }
                });
            });
        }

    }
    $(function () {
        gaia.create({
            $init: function ($params) {
                $('input[name="dminsttDiv"]').on('change', function () {
                    const selectedValue = $(this).val();

                    if (selectedValue === 'GO') { // 공공
                        isPublic = true;
                        $('#dminsttNm').attr('placeholder', '수요기관 선택');
                        $('#dminsttNm').val('');
                        $('#btnOpenOrgSearchPopup').show();
                    } else { // 민간
                        isPublic = false;
                        $('#dminsttNm').attr('placeholder', '수요기관 입력');
                        $('#dminsttNm').val('');
                        $('#dminsttCd').val('');
                        $('#btnOpenOrgSearchPopup').hide();
                    }
                });

                // 공공일 때 입력 차단
                $('#dminsttNm')
                        .on('keydown keypress keyup input paste', function (e) {
                            if (isPublic) {
                                e.preventDefault();
                                return false;
                            }
                        })
                        .on('mousedown', function (e) {
                            if (isPublic) {
                                e.preventDefault();
                                this.blur();
                            }
                        })
                        .on('focus', function () {
                            if (isPublic) {
                                this.blur();
                            }
                        });

                // 초기 상태
                isPublic = false;
                $('#dminsttNm').attr('placeholder', '수요기관 입력');
                page.initializeSelectBoxes();

                file.airvwAtchFile();
                file.ecoFile();
                gaia.loaded = true
            }
        });
    })











    // 함수

    document
            .getElementById("pjtBgnDate")
            .addEventListener("change", calculateDays);
    document
            .getElementById("pjtEndDate")
            .addEventListener("change", calculateDays);

    // YYYYMMDD 형식으로 변환
    function formatDate(dateStr) {
        if (!dateStr) {
            return null;
        }
        const date = new Date(dateStr);
        const year = date.getFullYear();
        const month = ("0" + (date.getMonth() + 1)).slice(-2);
        const day = ("0" + date.getDate()).slice(-2);

        return year + month + day;
    }
    // YYYY-MM-DD 형식으로 변환
    function formatDate2(dateStr) {
        if (!dateStr) {
            return null;
        }
        const year = dateStr.slice(0, 4);
        const month = dateStr.slice(4, 6);
        const day = dateStr.slice(6, 8);
        return `${year}-${month}-${day}`;
    }

    // 기간 계산
    function calculateDays() {
        const pjtBgnDate = document.getElementById("pjtBgnDate").value;
        const pjtEndDate = document.getElementById("pjtEndDate").value;

        if (!pjtBgnDate || !pjtEndDate) {
            document.getElementById("cnstwkDaynum").value = "";
            return;
        }

        if (pjtBgnDate && pjtEndDate) {
            const start = new Date(pjtBgnDate);
            const end = new Date(pjtEndDate);

            if (end < start) {
                gaiaCommon.customAlert("{{ message('msg.027') }}");
                document.getElementById("pjtEndDate").value = "";
                document.getElementById("cnstwkDaynum").value = "";
                return;
            }

            const timeDiff = end - start;
            const dayDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));
            document.getElementById("cnstwkDaynum").value = dayDiff + 1;
        }
    }

    // 주소찾기 POPUP
    let execDaumPostcode = function () {
        new daum.Postcode({
            oncomplete: function (data) {
                // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

                // console.log('도로명주소 : ' + data.roadAddress);
                // console.log('지번주소 : ' + data.jibunAddress);
                // console.log('우편번호 : ' + data.zonecode);

                // 도로명 주소의 노출 규칙에 따라 주소를 표시한다.
                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
                let roadAddr = data.roadAddress; // 도로명 주소 변수
                let extraRoadAddr = '';          // 참고 항목 변수

                // 법정동명이 있을 경우 추가한다. (법정리는 제외)
                // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
                if (data.bname !== '' && /[동|로|가]$/g.test(data.bname)) {
                    extraRoadAddr += data.bname;
                }
                // 건물명이 있고, 공동주택일 경우 추가한다.
                if (data.buildingName !== '' && data.apartment === 'Y') {
                    extraRoadAddr += (extraRoadAddr !== '' ? ', ' + data.buildingName : data.buildingName);
                }
                // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.
                if (extraRoadAddr !== '') {
                    extraRoadAddr = ' (' + extraRoadAddr + ')';
                }

                // 우편번호와 주소 정보를 해당 필드에 넣는다.
                //document.getElementById('sample4_postcode').value = data.zonecode;
                //document.getElementById("sample4_jibunAddress").value = data.jibunAddress;    // 지번
                document.getElementById("plcLctAdrs").value = roadAddr;

                // 참고항목 문자열이 있을 경우 해당 필드에 넣는다.
                if (roadAddr !== '') {
                    document.getElementById("plcLctAdrs").value = `${roadAddr} ${extraRoadAddr}`;
                } else {
                    //document.getElementById("plcLctAdrsExtra").value = '';
                }

                // 위도 및 경도 좌표값 구하기
                const geocoder = new kakao.maps.services.Geocoder();
                geocoder.addressSearch(data.roadAddress, (result, status) => {
                    if (status === kakao.maps.services.Status.OK) {
                        console.log('경도 : ' + result[0].x);     // longitude
                        console.log('위도 : ' + result[0].y);     // latitude

                        // 소수점 5자리
                        document.getElementById("plcLctX").value = Math.floor(result[0].x * 100000) / 100000;
                        document.getElementById("plcLctY").value = Math.floor(result[0].y * 100000) / 100000;
                    }

                    if (status === kakao.maps.services.Status.ZERO_RESULT) {

                    }
                });

            }
        }).open();
    }

    let openOrgSearchPopup = function () {
        const width = 600;
        const height = 700;
        let left = Math.ceil((window.screen.width - width) / 2);
        left += window.screenLeft; // 듀얼 모니터일 때
        const top = Math.ceil((window.screen.height - height) / 2);
        // 권한 검증 후 팝업 열기
        gaiaCommon.checkAuth("INFO_U_02", () => {
            $("#popup").load("/project/org-search", function () {
                console.log('load finish')
                // $('.pop_box').draggable({});
            });
            $("#popup").css({ "display": "flex" });
        });
    }

    if (opener) {
        opener.document.onkeydown = fkey;
        opener.document.onkeypress = fkey;
        opener.document.onkeyup = fkey;

        function fkey(e) {
            if (window.event.keyCode == 116) {
                window.close();
            }
        };

        window.opener.onbeforeunload = function () {
            if (window) {
                window.close();
            }
        };

    }
</script>
<script src="/webjars/jstree/jstree.min.js"></script>
{% endblock footer_script %}