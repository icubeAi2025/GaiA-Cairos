
<h3 class="conts_tit" id="dsgn_cu_tit">검토 의견 추가</h3>
<div class="btn_area s_default">
    <button type="button" class="btn _fill" id="action-button" onclick="dsgnInput.save()">{{ message('btn.006') }}</button>
    <button type="button" class="btn _outline" id="close-popup" onclick="dsgnInput.close()">{{ message('btn.007') }}</button>
    <div class="btn_group iconbtns">
        <button class="icon_btn" id="open-new-window" onclick="dsgnInput.open()">
            <i class="fa-solid fa-up-right-from-square"></i>
            <span class="tooltip">{{ message('item.com.017') }}</span>
        </button>
    </div>
</div>
<div class="form_box" id="dsgn_cu_form">
    <div class="container" style="display: flex; align-items: center;">
        <span class="caption">
            <span><b class="c_red">*</b> {{ message('item.com.023') }}</span>
        </span>
    </div>
    <div class="group">
        <div class="row">
            <div class="col">
                <div class="form_label required">제목</div>
                <div class="form_data">
                    <input type="text" class="maxlength" id="cu_title" name="title" required maxlength="255">
                </div>
            </div>
        </div>
        <!-- row -->
        <div class="row">
            <div class="col">
                <div class="form_label required">검토 분류</div>
                <div class="form_data">
                    <div class="selectbox sort" style="margin-left: 0;">
                        <span class="selectbox" id="cu_dsgnCd_box">
                        </span>
                    </div>  
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="form_label">문서 번호</div>
                <div class="form_data">
                    <input type="text" class="maxlength" id="cu_docNo" name="docNo" maxlength="100">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="form_label">도면 번호</div>
                <div class="form_data">
                    <input type="text" class="maxlength" id="cu_dwgNo" name="dwgNo" maxlength="255">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="form_label">도면 명</div>
                <div class="form_data">
                    <input type="text" class="maxlength" id="cu_dwgNm" name="dwgNm" maxlength="2000">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="form_label">검토 의견</div>
                <div class="form_data">
                    <textarea class="maxlength" id="cu_rvw_opnin" maxlength="2000"></textarea>
                </div>
            </div>
        </div>
        <!-- row -->
        <div class="row">
            <div class="col">
                <div class="form_label">문제점</div>
                <div class="form_data">
                    <div class="item_group" role="group" aria-label="Basic radio group">
                        <label class="form_check">
                            <input class="check_mark" type="radio" id="cu_isuY" name="isuYn" value="Y" checked>
                            <span class="check_label">Yes</span>
                        </label>
                        <label class="form_check">
                            <input class="check_mark" type="radio" id="cu_isuN" name="isuYn" value="N">
                            <span class="check_label">No</span>
                        </label>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div class="form_label">교훈</div>
                <div class="form_data">
                    <div class="item_group" role="group" aria-label="Basic radio group">
                        <label class="form_check">
                            <input class="check_mark" type="radio" id="cu_lesnY" name="lesnYn" value="Y" checked>
                            <span class="check_label">Yes</span>
                        </label>
                        <label class="form_check">
                            <input class="check_mark" type="radio" id="cu_lesnN" name="lesnYn" value="N">
                            <span class="check_label">No</span>
                        </label>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- row -->
        <div class="row">
            <div class="col">
                <div class="form_label">{{ message('btn.021') }}</div> <!-- 파일첨부 -->
                <div class="form_data">
                    <div class="attach-component" id="designReview-fileAttach"></div>
                    {% include "sub/file_attach_component" %}
                </div>
            </div>
        </div>
        <div class="g-group g-col2" style="grid-template-columns: 50% 50%;">
            <div class="group">
                <div class="s_conts">
                    <span class="tree_route">검토 도서</span>
    
    
                    <!-- S: Slick Slider -->
                    <div class="process_photo">
                        <div class="rvw_dwg_photo" id="rvw_dwg_photo">
                        </div>
    
                        <div class="slick_nav">
                            <div class="btn_area">
                                <div class="btn_group _outline">
                                    <button type="button" class="btn icon_btn" onclick="dsgnInput.addDwgPhoto('rvw')">
                                        <i class="ic ic-picture-one"></i>
                                        <span class="blind">추가</span>
                                    </button>
                                    <button type="button" class="btn icon_btn" onclick="dsgnInput.photo.delPhoto('rvw_dwg_photo')">
                                        <i class="ic ic-delete"></i>
                                        <span class="blind">삭제</span>
                                    </button>
                                </div>

                            </div>
                        </div>
                    </div>
                    <input type="hidden" id="cu_rvwDwgNo" value="">
                </div>
            </div>

            <div class="group">
                <div class="s_conts">
                    <span class="tree_route">변경 요청</span>
        
                    <div class="process_photo">
                        <div class="chg_dwg_photo" id="chg_dwg_photo">
                        </div>
        
                        <div class="slick_nav">
                            <div class="btn_area">
                                <div class="btn_group _outline">
                                    <button type="button" class="btn icon_btn" onclick="dsgnInput.addDwgPhoto('chg')">
                                        <i class="ic ic-picture-one"></i>
                                        <span class="blind">추가</span>
                                    </button>
                                    <button type="button" class="btn icon_btn" onclick="dsgnInput.photo.delPhoto('chg_dwg_photo')">
                                        <i class="ic ic-delete"></i>
                                        <span class="blind">삭제</span>
                                    </button>
                                </div>

                            </div>
                        </div>
                        <input type="hidden" id="cu_chgDwgNo" value="">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="dwg_popup" class="popup_overlay modal_base" style="display: none;">
        <!-- 팝업 내용 -->
    </div>
</div>
<script>
    // 새창 모드일 경우,
    var dsgnCuPopup;
    var fileAttachComponent;
    $(document).ready(function () {
        dsgnInput.initializeSelectBoxes();
    });

    var dsgnInput = {
        mode: null,
        dsgnNo: null,
        dwgPhotoMode: null,
        init: function (mode, dsgnNo) {
            if(fileAttachComponent){
                fileAttachComponent.destroy();
            }
            fileAttachComponent = FileAttachComponent.init({
                id:'designReview-fileAttach',
                maxUploadFileSize:100,
                failCount:true
            })
            this.mode = mode;
            this.dsgnNo = dsgnNo;
            let title;
            if(mode === "create"){
                title = "검토 의견 추가";
            }
            else if(mode === "update"){
                title = "검토 의견 수정";
                this.updateInputSet();
            }

            $("#dsgn_cu_tit").text(title);
        },

        close: function() {
            this.formBoxReset(); // 입력한 값 초기화
            this.photo.savedRvwPhotoData = null; // 검토도서 데이터 초기화
            this.photo.newRvwPhotoData = null; // 검토도서 데이터 초기화
            this.photo.savedChgPhotoData = null; // 변경요청 데이터 초기화
            this.photo.newChgPhotoData = null; // 변경요청 데이터 초기화
            this.photo.rvwDwgNo = null;     // 검토도서 번호 초기화
            this.photo.chgDwgNo = null;     // 변경요청 번호 초기화

            this.photo.deleteRvwSno = null;     //
            this.photo.deleteRvwFileNo = null;     //
            this.photo.deleteRvwFileKey = null;     //
            this.photo.deleteChgSno = null;     //
            this.photo.deleteChgFileNo = null;     //
            this.photo.deleteChgFileKey = null;     //

            $("#rvw_dwg_photo").html(''); // 검토도서 요소 초기화
            $("#chg_dwg_photo").html(''); // 변경요청 요소 초기화

            fileAttachComponent.destroy();

            page.dsgn.gridInit(cntrctNo, dsgnPhaseNo);

            $("#dsgn_list").show();
            $("#dsgn_cu").hide();
        },

        //새창 오픈
        open: function () {
            let dsgnNo;
            if(this.mode === "update"){
                dsgnNo = this.dsgnNo;
            }
            
            if(!cntrctNo || !dsgnPhaseNo){
                gaiaCommon.customAlert("설계 검토 단계 정보가 없습니다.");
                return;
            }else if(this.mode === "update" && !dsgnNo){
                gaiaCommon.customAlert("설계 검토 정보가 없습니다.");
                return;
            }

            let url = this.mode === "update" ? `/design/designReview/form?mode=update&cntrctNo=${cntrctNo}&dsgnPhaseNo=${dsgnPhaseNo}&dsgnNo=${dsgnNo}&pjtNo=${pjtNo}`
                : `/design/designReview/form?mode=create&cntrctNo=${cntrctNo}&dsgnPhaseNo=${dsgnPhaseNo}&pjtNo=${pjtNo}`;

            const _width = 1150;
            const _height = 750;

            let _left = Math.ceil((window.screen.width - _width)/2);
            _left += window.screenLeft; // 듀얼 모니터일 때
            const _top = Math.ceil((window.screen.height - _height)/2);

            dsgnCuPopup = window.open(url, "dsgnCuPopup", `width=${_width}, height=${_height},left=${_left},top=${_top}, scrollbars=yes, resizable=yes`);
            this.close();
        },

        save: function () {
            if (this.mode == "create") {
                this.create();
            } else if (this.mode == "update") {
                this.update();
            }
        },

        create: function () {
            if(!cntrctNo || !dsgnPhaseNo){
                gaiaCommon.customAlert('저장할 설계 검토 단계 정보가 없습니다.');
                return false;
            }

            // 필수 값 유효성 확인
            if (!this.validateData()) return false;

            let dsgnData = {
                cntrctNo: cntrctNo,
                dsgnPhaseNo: dsgnPhaseNo,
                title: $("#cu_title").val(),
                dsgnCd: $("#cu_dsgnCd").val(),
                docNo: $("#cu_docNo").val() || null,
                dwgNo: $("#cu_dwgNo").val() || null,
                dwgNm: $("#cu_dwgNm").val() || null,
                rvwOpnin: $("#cu_rvw_opnin").val() || null,
                isuYn: $("input[name='isuYn']:checked").val() || null,
                lesnYn: $("input[name='lesnYn']:checked").val() || null,
                dwgs: this.setDwgs()
            }

            const formData = new FormData();

            formData.delete('files');
            console.log("UPLOADED FILES : ",fileAttachComponent.state.uploadedFiles)
            for(const file of fileAttachComponent.state.uploadedFiles){
                if(file.success){
                    if(file.realFile){
                        formData.append('files', file.realFile);
                    }
                }
            }

            formData.append('dsgn', new Blob([JSON.stringify(dsgnData)], { type: 'application/json' }));

            // 검토도서, 변경요청 파일 추가
            if (this.photo.newRvwPhotoData) {
                formData.append('rvwPhotoMeta', JSON.stringify(this.photo.newRvwPhotoData));
            }

            if (this.photo.newChgPhotoData) {
                formData.append('chgPhotoMeta', JSON.stringify(this.photo.newChgPhotoData));
            }

            // console.log("설계 검토 저장 입력데이터: ", dsgnData);

            // 서버 전송
            gaiaCommon.LoadingOverlay('body', true);
            gaiaCommon.postForm("/api/design/review/create",formData, function (response) {
                if (response.ok) {
                    gaiaCommon.customAlert('{{ message("msg.044") }}', function () { // 저장되었습니다
                        // dsgnInput.formBoxReset(); // 폼 초기화
                        dsgnInput.close(); // 기존 close() 호출
                        gaiaCommon.LoadingOverlay('body', false);
                    });
                }else{
                    gaiaCommon.LoadingOverlay('body', false);
                    gaiaCommon.customAlert('{{ message("msg.045") }}');	// 저장에 실패 했습니다.
                }
            },function (error) {
                gaiaCommon.LoadingOverlay('body', false);
                gaiaCommon.customAlert('{{ message("msg.045") }}');	// 저장에 실패 했습니다.
            })
        },

        update: function () {
            const dsgnNo = dsgnInput.dsgnNo;

            if(!cntrctNo || !dsgnPhaseNo || !dsgnNo){
                gaiaCommon.customAlert('저장할 설계 검토 정보가 없습니다.');
                return false;
            }

            // 필수 값 유효성 확인
            if (!this.validateData()) return false;

            let dsgnData = {
                cntrctNo: cntrctNo,
                dsgnPhaseNo: dsgnPhaseNo,
                dsgnNo: dsgnNo,
                title: $("#cu_title").val(),
                dsgnCd: $("#cu_dsgnCd").val(),
                docNo: $("#cu_docNo").val(),
                dwgNo: $("#cu_dwgNo").val(),
                dwgNm: $("#cu_dwgNm").val(),
                rvwOpnin: $("#cu_rvw_opnin").val(),
                isuYn: $("input[name='isuYn']:checked").val(),
                lesnYn: $("input[name='lesnYn']:checked").val(),
                rvwDwgNo: $("#cu_rvwDwgNo").val(),
                chgDwgNo: $("#cu_chgDwgNo").val(),
                deleteRvwFileNo: dsgnInput.photo.deleteRvwFileNo,
                deleteRvwFileKey: dsgnInput.photo.deleteRvwFileKey,
                deleteChgFileNo: dsgnInput.photo.deleteChgFileNo,
                deleteChgFileKey: dsgnInput.photo.deleteChgFileKey,
            }

            // dwgs 추가 조건
            dsgnData.dwgs = this.setDwgs();

            const formData = new FormData();

            // 검토도서, 변경요청 파일 추가
            if (this.photo.newRvwPhotoData) {
                formData.append('rvwPhotoMeta', JSON.stringify(this.photo.newRvwPhotoData));
            }

            if (this.photo.newChgPhotoData) {
                formData.append('chgPhotoMeta', JSON.stringify(this.photo.newChgPhotoData));
            }

            formData.append('removedFiles',
                new Blob([JSON.stringify(fileAttachComponent.state.deletedFiles)],
                    {type:"application/json"}
                ));

            formData.delete('files');
            for(const file of fileAttachComponent.state.uploadedFiles){
                if(file.success){
                    if(file.realFile){
                        formData.append('files', file.realFile);
                    }
                }
            }

            formData.append('dsgn', new Blob([JSON.stringify(dsgnData)], { type: 'application/json' }));

            console.log("설계 검토 수정 입력데이터: ", dsgnData);


            // 서버 전송
            gaiaCommon.LoadingOverlay('body', true);
            gaiaCommon.postForm("/api/design/review/update",formData,function (response) {
                if (response.ok) {
                    gaiaCommon.customAlert('{{ message("msg.007") }}', function () { // 수정되었습니다
                        // dsgnInput.formBoxReset(); // 폼 초기화
                        dsgnInput.close(); // 기존 close() 호출
                        gaiaCommon.LoadingOverlay('body', false);
                    });
                } else{
                    gaiaCommon.LoadingOverlay('body', false);
                    gaiaCommon.customAlert('{{ message("msg.045") }}');	// 저장에 실패 했습니다.
                }
            },function (error) {
                gaiaCommon.LoadingOverlay('body', false);
                gaiaCommon.customAlert('{{ message("msg.045") }}');	// 저장에 실패 했습니다.
            })
        },

        setDwgs() {
            const dwgs = [];

            if (dsgnInput.photo.newRvwPhotoData) {
                dwgs.push({
                    dwgCd: '0501',
                    dwgDscrpt: dsgnInput.photo.newRvwPhotoData.dwgDscrpt
                });
            } else if (dsgnInput.photo.savedRvwPhotoData) {
                dwgs.push({
                    sno: dsgnInput.photo.savedRvwPhotoData.sno,
                    dwgNo: dsgnInput.photo.savedRvwPhotoData.dwgNo,
                    dwgDscrpt: dsgnInput.photo.savedRvwPhotoData.dwgDscrpt,
                    dwgCd: '0501'
                });
            } else {
                dwgs.push({
                    dwgCd: '0501',
                    dwgDscrpt: ''
                });
            }

            if (dsgnInput.photo.newChgPhotoData) {
                dwgs.push({
                    dwgCd: '0502',
                    dwgDscrpt: dsgnInput.photo.newChgPhotoData.dwgDscrpt
                });
            } else if (dsgnInput.photo.savedChgPhotoData) {
                dwgs.push({
                    sno: dsgnInput.photo.savedChgPhotoData.sno,
                    dwgNo: dsgnInput.photo.savedChgPhotoData.dwgNo,
                    dwgDscrpt: dsgnInput.photo.savedChgPhotoData.dwgDscrpt,
                    dwgCd: '0502'
                });
            } else {
                dwgs.push({
                    dwgCd: '0502',
                    dwgDscrpt: ''
                });
            }

            return dwgs;
        },
        updateInputSet(){
            const dsgnNo = dsgnInput.dsgnNo;
            if(!cntrctNo || !dsgnPhaseNo || !dsgnNo){
                gaiaCommon.customAlert("설계 검토 정보가 없습니다.");
                return false;
            }

            gaiaCommon.get(`/api/design/review/${cntrctNo}/${dsgnPhaseNo}/${dsgnNo}`, {}, function(result){
                if(result.ok){
                    let inputData = result.details.dsgn;
                    let attachments = result.details.attachments;
                    let chgDwgAttach = result.details.chgDwgAttach;
                    let rvwDwgAttach = result.details.rvwDwgAttach;

                    // 설계 검토 데이터 설정
                    $("#cu_title").val(gaiaCommon.decodeSafeText(inputData.title));        // 제목
                    $("#cu_dsgnCd").val(inputData.dsgnCd);      // 검토 분류
                    $("#cu_docNo").val(gaiaCommon.decodeSafeText(inputData.docNo));        // 문서 번호
                    $("#cu_dwgNo").val(gaiaCommon.decodeSafeText(inputData.dwgNo));        // 도면 번호
                    $("#cu_dwgNm").val(gaiaCommon.decodeSafeText(inputData.dwgNm));        // 도면 명
                    $("#cu_rvw_opnin").val(gaiaCommon.decodeSafeText(inputData.rvwOpnin)); // 검토 의견
                    $("#cu_rvwDwgNo").val(inputData.rvwDwgNo); // 검토 도서 번호
                    $("#cu_chgDwgNo").val(inputData.chgDwgNo); // 변경 요청 번호

                    // 문제점
                    if(inputData.isuYn === "Y"){
                        $("#cu_isuY").prop('checked', true);
                        $("#cu_isuN").prop('checked', false);
                    }else{
                        $("#cu_isuN").prop('checked', true);
                        $("#cu_isuY").prop('checked', false);
                    }

                    // 교훈
                    if(inputData.lesnYn === "Y"){
                        $("#cu_lesnY").prop('checked', true);
                        $("#cu_lesnN").prop('checked', false);
                    }else{
                        $("#cu_lesnN").prop('checked', true);
                        $("#cu_lesnY").prop('checked', false);
                    }

                    // 검토 도서, 변경 요청 데이터 설정
                    if(rvwDwgAttach){
                        rvwDwgAttach.dwgDscrpt = inputData.rvwDwgDscrpt;
                        dsgnInput.photo.loadDwgPhotos(rvwDwgAttach, "rvw_dwg_photo");
                    }

                    if(chgDwgAttach){
                        chgDwgAttach.dwgDscrpt = inputData.chgDwgDscrpt;
                        dsgnInput.photo.loadDwgPhotos(chgDwgAttach, "chg_dwg_photo");
                    }

                    //첨부파일 데이터 설정
                    fileAttachComponent.setOrgFiles(attachments)
                    fileAttachComponent.render();
                }
            },function(error){
                console.log(`[Modal] 검토 의견 수정 초기 렌더링 실패, /api/design/designReview/dsgn/${cntrctNo}/${dsgnPhaseNo}/${dsgnNo}, PARAMS : {}`,error);
            });
        },

        // 입력된 값 모두 초기화.
        formBoxReset: function() {
            // `form_box` 클래스 하위의 모든 입력 요소 선택
            const formBoxElements = document.querySelector("#dsgn_cu_form");

            if (formBoxElements) {
                // 모든 input 요소 초기화
                formBoxElements.querySelectorAll("input").forEach(input => {
                    if (input.type === "checkbox" || input.type === "radio") {
                        input.checked = false; // 체크박스 및 라디오 버튼 초기화
                    } else {
                        input.value = ""; // 일반 입력 필드 초기화
                    }
                });

                // 모든 select 요소 초기화
                formBoxElements.querySelectorAll("select").forEach(select => {
                    select.selectedIndex = 0; // 첫 번째 옵션으로 설정
                });

                // 모든 textarea 요소 초기화
                formBoxElements.querySelectorAll("textarea").forEach(textarea => {
                    textarea.value = "";
                });
                // 파일 입력 초기화
                const fileInput = document.getElementById('fileInput');
                if (fileInput) {
                    fileInput.value = "";
                }

                // 첨부 파일 리스트 초기화
                const fileList = document.getElementById('fileList');
                if (fileList) {
                    fileList.innerHTML = '';
                }
            }
        },


        // 필수 값 유효성 확인
        validateData: function(){
            let addRegex = /^(?!\s)[^\/:*?"<>|]+$/;
            let isValid = true;

            $(".required").each(function () {
                const inputElement = $(this).closest(".row").find("input, select, textarea");
                if (!inputElement.val()) {
                    gaiaCommon.customAlert("{{ message('msg.008') }}"); // 필수 값이 누락되었습니다.
                    inputElement.focus();
                    console.log(inputElement);
                    isValid = false;
                    return false;
                }
            });

            if (!isValid) return false; // 필수 값 체크에서 실패한 경우 종료

            // 유효성 검사 대상 필드 리스트
            const fieldsToValidate = ['#cu_title', '#cu_docNo', '#cu_dwgNo', '#cu_dwgNm', '#cu_rvw_opnin'];

            // 각 필드에 이벤트 리스너 추가
            fieldsToValidate.forEach(selector => {
                const value = $(selector).val();

                // 값이 없는 경우 유효성 검사 패스
                if (!value || value === "") return;

                if (!addRegex.test(value)) {
                    gaiaCommon.customAlert("{{ message('msg.079') }}" + '/ , : , * , ? , " , < , >  , |'); // 유효하지 않은 값이 포함되어 있습니다 : [/, :, *, ?, ", <, >, ., |]
                    $(selector).focus();
                    isValid = false;
                    return false;
                }
            });

            return isValid;
        },

        // 검토분류 콤보박스 생성
        // 셀렉트박스 호출
        makeSelectBox: function (cmnGrpCd, selectBoxId, elementId, ckeckedValue) {
            let initText = "검토 분류";
            let requestData = {
                cmnGrpCd: cmnGrpCd,
                selectBoxId: selectBoxId,
                selectBoxNmType: "KOR", //TODO: 영어일 때 항목 가져오는 거 필요.
                ckeckedValue: ckeckedValue,
                orderByCol: "",
                orderByType: "",
                initText: initText,
                paramNm: selectBoxId,
                funName: "",
                funParam: "this.value",
                funtype: "onchange",
            };

            gaiaCommon.post("/api/util/make-selectBox",[requestData],function (data) {
                let returnMap = data.details.returnMap;

                // 메인 화면 결함분류 콤보박스 업데이트
                let addAppLineContent = document.getElementById(elementId);
                addAppLineContent.innerHTML = returnMap[selectBoxId];
            },function (error) {
                console.log(`[Modal] 결함 분류 드롭다운 리스트 생성 실패, /api/util/make-selectBox, PARAMS : {[requestData]}`,error);
            })
        },

        initializeSelectBoxes(ckeckedValue) {
            dsgnInput.makeSelectBox(
                "19a8bb53-74b4-405a-8d91-2b38555fc7d9",
                "cu_dsgnCd",
                "cu_dsgnCd_box",
                ckeckedValue
            );
        },

        addDwgPhoto: function (mode) {
            gaiaCommon.checkAuth("DM_DSGN_CU_02", () => {
                this.dwgPhotoMode = mode;
                $("#dwg_popup").load(`/design/designReview/dwgPhoto/modal?mode=${mode}&pjtNo=${pjtNo}&cntrctNo=${cntrctNo}`);
                $("#dwg_popup").css({ "display": "flex" });
            });
		},

        // 사진관련
        photo : {
            savedRvwPhotoData: null,
            newRvwPhotoData: null,
            savedChgPhotoData: null,
            newChgPhotoData: null,
            dwgPhotoDataArr: [],
            deleteRvwSno: null,
            deleteRvwFileNo: null,
            deleteRvwFileKey: null,
            deleteChgSno: null,
            deleteChgFileNo: null,
            deleteChgFileKey: null,
            rvwDwgNo: null,
            chgDwgNo: null,

            loadDwgPhotos: function (data, targetId) {
                if (!data) return; // 데이터가 없으면 종료

                const photoHtml = `
                    <dl class="dl_box p_photo">
                        <dt class="item_dt">
                            <label class="form_check">
                                <input class="check_mark" type="checkbox" name="check" value="0">
                            </label>
                        </dt>
                        <dd class="item_dd">
                            <figure class="p_photo_info">
                                <img src="${data.fileDiskPath.replace(/\\/g, '/').replace(/^.*\/upload/, '/upload')}/${data.fileDiskNm}" alt="${data.fileNm}">
                                <figcaption>
                                    <p class="desc">${gaiaCommon.decodeSafeText(data.dwgDscrpt)}</p>
                                    <input type="hidden" id="fileNo" value="${data.fileNo}">
                                    <input type="hidden" id="sno" value="${data.sno}">
                                </figcaption>
                            </figure>
                        </dd>
                    </dl>`;

                $(`#${targetId}`).html(photoHtml);

                // 데이터 저장
                if (targetId === "rvw_dwg_photo") {
                    this.savedRvwPhotoData = data;
                    this.rvwDwgNo = data.rvwDwgNo;
                } else if (targetId === "chg_dwg_photo") {
                    this.savedChgPhotoData = data;
                    this.chgDwgNo = data.chgDwgNo;
                }
            },

            // 사진 추가
            setPhoto: function (data) {
                console.log('setPhoto', data);
                // this.dwgPhotoDataArr.push(data);

                let photoHtml =
                    `<dl class="dl_box p_photo">
                        <dt class="item_dt">
                            <label class="form_check">
                                <input class="check_mark" type="checkbox" name="check" value="0">
                            </label>
                        </dt>
                        <dd class="item_dd">
                            <figure class="p_photo_info">
                                <img src=${data.src} alt="검토도서사진">
                                <figcaption>
                                    <p class="desc">${data.dscrpt}</p>
                                </figcaption>
                            </figure>
                        </dd>
                    </dl>`;

                if (data.dwgCd === "0501") { // 검토 도서
                    if (data.meta && this.savedRvwPhotoData) {
                        this.deleteRvwSno = this.savedRvwPhotoData.sno;
                        this.deleteRvwFileNo = this.savedRvwPhotoData.fileNo;
                        this.deleteRvwFileKey = this.savedRvwPhotoData.fileKey;
                    }

                    if (data.meta) {
                        this.newRvwPhotoData = data.meta;
                        this.newRvwPhotoData.dwgCd = data.dwgCd;
                        this.newRvwPhotoData.dwgDscrpt = data.dscrpt;
                    }

                    if (photoHtml) {
                        $("#rvw_dwg_photo").html(photoHtml);
                    }
                }
                else if (data.dwgCd === "0502") { // 변경 요청
                    if (data.meta && this.savedChgPhotoData) {
                        this.deleteChgSno = this.savedChgPhotoData.sno;
                        this.deleteChgFileNo = this.savedChgPhotoData.fileNo;
                        this.deleteChgFileKey = this.savedChgPhotoData.fileKey;
                    }

                    if (data.meta) {
                        this.newChgPhotoData = data.meta;
                        this.newChgPhotoData.dwgCd = data.dwgCd;
                        this.newChgPhotoData.dwgDscrpt = data.dscrpt;
                    }

                    if (photoHtml) {
                        $("#chg_dwg_photo").html(photoHtml);
                    }
                }
            },

            // 사진 삭제
            delPhoto: function (dwgElId) {
                if (dwgElId === 'rvw_dwg_photo') {
                    if (this.savedRvwPhotoData) {
                        this.deleteRvwSno = this.savedRvwPhotoData.sno;
                        this.deleteRvwFileNo = this.savedRvwPhotoData.fileNo;
                        this.deleteRvwFileKey = this.savedRvwPhotoData.fileKey;
                    }

                    this.savedRvwPhotoData = null;
                }
                else if (dwgElId === 'chg_dwg_photo') {
                    if (this.savedChgPhotoData) {
                        this.deleteChgSno = this.savedChgPhotoData.sno;
                        this.deleteChgFileNo = this.savedChgPhotoData.fileNo;
                        this.deleteChgFileKey = this.savedChgPhotoData.fileKey;
                    }
                    this.savedChgPhotoData = null;
                }
                $(`#${dwgElId}`).html('');


                // if (this.photoData) {
                //     if (this.photoData.sno) {
                //         this.deleteSno = this.photoData.sno;
                //     }
                //     if (this.photoData.phtSno) {
                //         this.deletePhtSno = this.photoData.phtSno;
                //     }
                //     this.photoData = null;

                // }
            }
        },
    };

</script>
