<style>
    #attach_save {
        margin-bottom: 10px
    }
    #attach_save button:first-child{
        margin-left:10px;
    }
    .cfrm_his {
        position: absolute;
        right: 20px;
        color: #e35c4d;
    }

    .cfrm_his span {
        cursor: pointer;
    }

    #detail {
        display: block;
        padding: 10px;
        border-bottom:1px solid var(--form-in-bd);
    }

    .cfrm_list {
        padding-top: 15px;
        margin-bottom: 20px;
    }
    .cfrm_list ~ .cfrm_list{
        border-top : 1px solid var(--form-in-bd);
    }

    .cfrm_list p {
        margin: 0;
    }
    .cfrm_rgst_div {
        display: flex;
    }
    .cfrm_opnin {
        margin: 10px 0;
    }
    .cfrm_opnin pre{
        font-family: 'Pretendard';
        white-space: pre-wrap;
        margin: 0;
    }
    .cfrm_attach_list ul {
        margin: 0;
        padding: 0;
        list-style-type: none;
    }

    .cfrm_attach_list li {
        padding-bottom: 5px;
        gap:0.5rem;
    }
    .cfrm_attach_list.detail .list_item .thumbnail{
        width: 40px;
    }

    .text_center {
        text-align: center;
    }

    .cfrm_his button, .cfrm_rgst_div button {
        background: none;
        border: none;
        padding: 0;
        margin: 0;
        color: #e35c4d;
        font: inherit;
        cursor: pointer;
    }

    .info {
        display: flex;
        justify-content: center;
    }
</style>

<div id="input" style=" position: sticky; top: 20px;">
    <div class="group">
        <h4 class="conts_s-tit collapse_head">
            {{ message('item.com.087') }}
            <div class="btn_group iconbtns" style="margin-right: 7px;" id="evaDate">
                <div id="dateStatus"></div>
            </div>
            <button type="button" class="icon_btn collapse_btn">
                <!-- <button type="button" class="icon_btn collapse_btn" style="position: unset;"> -->
                <i class="ic ic-arrow"></i>
                <span class="blind">영역접기</span>
            </button>
        </h4>
        <div class="collapse collapse_body" style="max-height: 600px; overflow-y: auto;">

            <div class="form_box">
                <div class="group">
                    <!-- detail -->
                    <div class="row" id="detail" style="display: none;"></div>
                </div>
                <div class="group" style="margin-top:10px;">
                    <div class="btn_area" id="attach_save">
                        {{ saveBtnHtml | raw }}
<!--                        <button type="button" class="btn _fill" onclick="evaluation.save()">저장</button>-->
                    </div>
                    <!-- input -->
                    <div id="inputForm" hidden>
                        <div class="row" id="">
                            <div class="col">
                                <div class="form_label">{{ message('item.dsgn.035') }}</div>
                                <div class="form_data" style="display: flex;justify-content: right;">
                                    <textarea id="evlOpnin" maxlength="1024"></textarea>
                                    <div class="char-counter" style="display:flex; justify-content: end; padding: 3px; font-size: var(--font-xs); color: var(--color-gray);">
                                        <span class="current-count">0</span>/<span class="max-count">1024</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- row -->
                        <div class="row" id="evaAttach">
                            <div class="col">
                                <div class="form_label">{{ message('item.com.062') }}</div> <!-- 첨부파일 -->
                                <div class="form_data">
                                    <div class="attach-component" id="designEvaluation-fileAttach"></div>
                                    {% include 'sub/file_attach_component' %}
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- history -->
                    <div class="row">
                        <div class="col" id="apprer_check">
                            <div class="form_label required">{{ message('item.dsgn.036') }}</div>
                            <div class="form_data">
                                <label class="form_check">
                                    <input class="check_mark" type="radio" name="apprer_cd" value="0301">
                                    <span class="check_label">{{ message('item.dfccy.009') }}</span>
                                </label>
                                <label class="form_check">
                                    <input class="check_mark" type="radio" name="apprer_cd" value="0302">
                                    <span class="check_label">{{ message('item.dfccy.010') }}</span>
                                </label>
                                <div class="cfrm_his">
                                    {{ apprerBtnHtml | raw }}
{#                                    <button onclick="evaluation.saveApprer();" id="apprer_save" data-apprer-result="">{{ message('btn.006') }}</button>#}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<script>
    var USER_ID = '{{USER_ID}}';
    var currentEvaList = [];
    var currentEvaSeq = null;
    var currentBackChk = null;
    var fileAttachComponent;

    var evaluation = {
        init: function () {
            evaluation.read();
            if(fileAttachComponent){
                fileAttachComponent.destroy();
            }
            fileAttachComponent = FileAttachComponent.init({
                id:'designEvaluation-fileAttach',
                maxUploadFileSize:100,
                failCount:false
            })
            gaia.loaded = true;
        },
        read() {
            let params = {
                dsgnNo: currentDsgnNo,
                dsgnPhaseNo: dsgnPhaseNo
            }

            gaiaCommon.LoadingOverlay('body', true);

            gaiaCommon.post('/api/design/evaluation/detail',params,function(data) {
                let evaList = data.details.evaList;

                if (evaList.length == 0) {
                    return;
                }

                currentBackChk = evaList[0].backchk_cd;
                if(isEnd || currentBackChk === '0402') {
                    $('#apprer_save').hide();
                    $('#apprer_check').find('input[name="apprer_cd"]').prop('disabled', true);
                }

                let bgnDate = evaList[0].bgn_date;
                let endDate = evaList[0].end_date;
                let today = new Date().toISOString().slice(0, 10);
                let dateStatus = isEnd ? "{{ message('item.dfccy.004') }}" : bgnDate > today ? "대기중" : "{{ message('item.com.041') }}";

                $('#evaDate').html(`${bgnDate} ~ ${endDate} <div style='color: red; padding:.35em;'> [ ${dateStatus} ] </div>`);

                let apprerCd = evaList[0].apprer_cd;
                if (apprerCd) {
                    $(`input[name="apprer_cd"][value="${apprerCd}"]`).prop('checked', true);
                    $('#apprer_save').data('apprer-result', apprerCd);
                }

                // 내 평가 여부
                // let myEvaluation = evaList.some(eva => eva.rgstr_id === USER_ID); // 삭제할 로직

                if(evaList[0].eva_seq) {
                    // 등록된 평가 있을 때
                    $('#detail').show().children().empty();
                    if(!isEnd && currentBackChk !== '0402') {
                        $('#inputForm').show();
                    }
                    $('#detail').append(evaluation.makeEvaluationHtml(evaList));
                } else {
                    // 없을 때
                    if(isEnd || currentBackChk === '0402') {
                        // 입력기간 종료 시
                        $('#inputForm').hide();
                        let msg = isEnd ? "{{ message('msg.dfccy.004') }}" : "{{ message('msg.dfccy.010') }}";
                        $('#detail').show().append(`<div class="info">
                                                        <p class="data_info">
                                                            ${msg}
                                                        </p>
                                                    </div>`);
                    } else if(!isEnd && currentBackChk !== '0402') {
                        // 입력기간 진행 + 내 의견 없을 시 + 미결
                        $('#inputForm').show();
                        $('#detail').hide();
                    }
                }
                gaiaCommon.LoadingOverlay('body', false);
            },function(error){
                gaiaCommon.customAlert("{{ message('msg.060') }}");
                gaiaCommon.LoadingOverlay('body', false);
                console.error(`설계 검토 툴 평가의 추가/수정 실패, /api/design/evaluation/detail, PARAMS : ${params}`,error);
            })
        },
        save() {
            let goSave = evaluation.validate();

            if(!goSave) {
                return
            }

            if(currentEvaSeq) {
                evaluation.modify();
                return
            }

            if(!$('#evlOpnin').val()) {
                gaiaCommon.customAlert("{{ message('msg.dfccy.046') }}");
                return
            }

            var formData = new FormData();

            let data = {
                dmEvaluation: {
                    dsgnNo: currentDsgnNo,
                    cntrctNo: cntrctNo,
                    evlOpnin: $('#evlOpnin').val()
                },
            }

            formData.delete('files');
            fileAttachComponent.state.uploadedFiles.forEach(file => {
                if(file.realFile){
                    formData.append('files', file.realFile);
                }
            })
            formData.append('saveData', new Blob([JSON.stringify(data)], { type: 'application/json' }));


            gaiaCommon.customConfirm("{{ message('item.dfccy.059') }}", "{{ message('msg.dfccy.019') }}", "", function(){
                gaiaCommon.LoadingOverlay('body', true);
                gaiaCommon.postForm('/api/design/evaluation/create',formData,function(result) {
                    if(result.ok) {
                        gaiaCommon.customAlert("{{ message('msg.044') }}", function(){
                            gaiaCommon.checkAuth("DM_EVAL_C_01", () => {
                                // 저장 후, 화면 업데이트.
                                $("#popup").load(`/design/evaluationForm?pjtNo=${pjtNo}&cntrctNo=${cntrctNo}`);
                            });
                            // page.init();
                        });
                    } else {
                        gaiaCommon.customAlert("{{ message('msg.045') }}");
                    }

                },function(error){
                    gaiaCommon.customAlert("{{ message('msg.045') }}");
                    console.error(`설계 검토 툴 평가의 평가 생성 실패, /api/design/evaluation/create, PARAMS : ${data}`,error);
                },function(){
                    gaiaCommon.LoadingOverlay('body', false);
                });
            })
        },
        saveApprer() {
            let goSave = evaluation.validate();

            if(!goSave) {
                return
            }

            let chkApprerCd = $(`input[name='apprer_cd']:checked`).val();

            if(!chkApprerCd) {
                gaiaCommon.customAlert("{{ message('msg.dfccy.020') }}");
                return;
            }

            if($('#apprer_save').data('apprer-result') === chkApprerCd) {
                gaiaCommon.customAlert("{{ message('msg.dsgn.010') }}");
                return;
            }

            let data = {
                dsgnNo: currentDsgnNo,
                cntrctNo: $('#cntrctNo').val(),
                apprerCd: chkApprerCd
            }

            gaiaCommon.customConfirm("{{ message('item.dsgn.037') }}", "{{ message('msg.dsgn.004') }}", "", function(){
                gaiaCommon.post('/api/design/evaluation/update-apprer',data,function(result) {
                    if(result.ok) {
                        gaiaCommon.customAlert("{{ message('msg.044') }}");
                        page.read(currentPage, currentDsgnNo);
                        gaiaCommon.checkAuth("DM_EVAL_APPRER_01", () => {
                            // 저장 후, 화면 업데이트.
                            $("#popup").load(`/design/evaluationForm?pjtNo=${pjtNo}&cntrctNo=${cntrctNo}`);
                        });

                    } else {
                        gaiaCommon.customAlert("{{ message('msg.045') }}");
                    }

                },function(error) {
                    gaiaCommon.customAlert("{{ message('msg.045') }}");
                    console.error(`설계 검토 툴 평가의 평가자 결과 등록 실패, /api/design/evaluation/update-apprer, PARAMS : ${data}`,error);
                })
            })
        },
        delete(evaSeq){
            let goDelete = evaluation.validate();

            if(!goDelete) {
                return
            }

            gaiaCommon.customConfirm("{{message('item.dfccy.052')}}", "{{message('msg.dfccy.012')}}", "{{message('msg.dfccy.013')}}", function(){
                gaiaCommon.get('/api/design/evaluation/delete/'+evaSeq,{},function(result) {
                    gaiaCommon.customAlert("{{ message('msg.006') }}");
                    gaiaCommon.checkAuth("DM_EVAL_D", () => {
                        // 저장 후, 화면 업데이트.
                        $("#popup").load(`/design/evaluationForm?pjtNo=${pjtNo}&cntrctNo=${cntrctNo}`);
                    });

                },function(error) {
                    gaiaCommon.customAlert("{{ message('msg.060') }}");
                    console.error(`설계 검토 툴 평가의 삭제 실패, /api/design/evaluation/delete/${evaSeq}, PARAMS : {}`,error);
                })
            })
        },
        modify(){
            if(!$('#evlOpnin').val()) {
                gaiaCommon.customAlert("{{ message('msg.dfccy.046') }}");
                return
            }

            var formData = new FormData();

            let data = {
                dmEvaluation: {
                    evaSeq: currentEvaSeq,
                    evlOpnin: $('#evlOpnin').val()
                },
                delFileList: fileAttachComponent.state.deletedFiles
            }
            formData.delete("files");
            fileAttachComponent.state.uploadedFiles.forEach(file => {
                if(file.realFile){
                    formData.append('files', file.realFile);
                }
            })

            formData.append('saveData', new Blob([JSON.stringify(data)], { type: 'application/json' }));

            gaiaCommon.customConfirm("{{message('item.dsgn.043')}}", "{{ message('msg.dsgn.009') }}", "", function(){
                gaiaCommon.LoadingOverlay('body', true);
                gaiaCommon.postForm('/api/design/evaluation/update',formData,function(result) {
                    if(result.ok) {
                        gaiaCommon.customAlert("{{ message('msg.007') }}");
                        gaiaCommon.checkAuth("DM_EVAL_U_01", () => {
                            // 저장 후, 화면 업데이트.
                            $("#popup").load(`/design/evaluationForm?pjtNo=${pjtNo}&cntrctNo=${cntrctNo}`);
                        });
                    } else {
                        gaiaCommon.customAlert("{{ message('msg.045') }}");
                    }

                },function(error) {
                    gaiaCommon.customAlert("{{ message('msg.045') }}");
                    console.error(`설계 검토 툴 평가의 수정 실패, /api/design/evaluation/update, PARAMS : ${data}`, error);
                },function(xhr){
                    gaiaCommon.LoadingOverlay('body', false);
                })
            })
        },
        setModify(evaSeq){
            let goModify = evaluation.validate();

            if(!goModify) {
                return
            }

            currentEvaSeq = evaSeq;
            let targetData = currentEvaList.find(eva => eva.eva_seq === evaSeq);
            // 의견 조회 숨기기
            $(`#eva_${evaSeq}`).hide();
            if($('#detail .cfrm_list:visible').length === 0) {
                $('#detail').hide();
            }

            // 입력창 오픈
            fileAttachComponent.destroy();
            fileAttachComponent = FileAttachComponent.init({
                id:'designEvaluation-fileAttach',
                maxUploadFileSize:100,
                failCount:false
            })

            $('#inputForm').show();
            $('#evaAttach').show();

            $('#evlOpnin').val(targetData.evl_opnin);
            $('.current-count').text(targetData.evl_opnin.length);

            // 기존 첨부파일 표시
            if(targetData.evaFiles && targetData.evaFiles.length > 0) {
                fileAttachComponent.setOrgFiles(targetData.evaFiles);
            }
            fileAttachComponent.render();
        },
        validate(){
            if (currentBackChk === '0402') {
                gaiaCommon.customAlert("{{ message('msg.dfccy.010') }}");
                return false;
            }

            if(isEnd) {
                gaiaCommon.customAlert("{{ message('msg.dfccy.004') }}");
                return false;
            }

            return true;
        },
        makeEvaluationHtml(evaList) {
            currentEvaList = evaList;
            let isMe = false;
            let evaDelAuth = '{{ evaDelBtnHtml | raw }}' !== '';
            let evaModAuth = '{{ evaModBtnHtml | raw }}' !== '';
            let slash = evaDelAuth && evaModAuth;
            let html = evaList.map(eva => {
                isMe = USER_ID === eva.rgstr_id ? true : false;
                let attachHtml = '';
                // 첨부파일 리스트 생성
                if(eva.atch_file_no) {
                    attachHtml = page.createAttachArea(eva.evaFiles);
                }
                return `
                    <div class="cfrm_list" id="eva_${eva.eva_seq}">
                        <div class="cfrm_rgst_div">
                            <div>
                                <span class="name_color">${eva.rgstr_nm}</span>
                                <span>${eva.rgst_dt}</span>
                            </div>
                            ${!isMe || currentBackChk === '0402' ? '' :
                    `<div class="cfrm_his">`+
                    (evaDelAuth?`<span onclick="evaluation.delete('${eva.eva_seq}')">{{ message('btn.002') }}</span>`:``)+
                    (slash?'<span> / </span>':'')+
                    (evaModAuth?`<span onclick="evaluation.setModify('${eva.eva_seq}')">{{ message('btn.003') }}</span>`:``)+
                    `</div>` }
                        </div>
                        <div class="cfrm_opnin">
                            <pre id="cfrm_opnin_cntnts">${eva.evl_opnin ? eva.evl_opnin : ''}</pre>
                        </div>
                        <div class="cfrm_attach_list detail">
                            <ul>
                                ${attachHtml}
                            </ul>
                        </div>
                    </div>
                `;
            }).join(''); // 배열을 문자열로 변환

            return html;
        }
    }

    $(document).on('input', '#evlOpnin', function(){
        let maxLength = $(this).attr('maxlength');
        let inputLength = $(this).val().length;
        let msg = "{{ message('msg.app.045') }}".replace("{0}", maxLength);

        $('.max-count').text(maxLength);

        if(inputLength >= maxLength) {
            gaiaCommon.customAlert(`글자수는 최대 ${maxLength}자까지 입력 가능합니다.`);
        }

        $('.current-count').text(inputLength);
    })


    var cTargetBtn = $(".collapse_btn");
    var cTargetArea = $(".collapse_body");
    $(cTargetBtn).click(function () {
        $(this).toggleClass('collapsed');
        $(this).parent().next(cTargetArea).slideToggle();
    });

    $(function(){
        evaluation.init();
    })
</script>