
<div class="modal fade" id="photoModal" style="z-index:1000;">
	<div class="pop_box _md">
		<div class="pop_header">
			<h5 class="pop_tit">{{ message("item.construction.051") }}</h5>
			<div class="btn_area">
				<button type="button" class="icon_btn pop_close" id="cancelModal">
					<i class="ic ic-close"></i>
					<span class="blind">창닫기</span>
				</button>
			</div>

		</div>
		<div class="pop_body" id="modal-content">
			<form id='inputForm'>

				<div class="conts_form">
					<div class="form_box">
						<!-- row -->
						<div class="row">
							<div class="col">
								<div class="form_label">{{ message("item.construction.052") }}</div>
								<div class="form_data">
									<span class="selectbox" id="activityIdSelectbox" style="z-index:0">
									</span>
								</div>
							</div>
						</div>
						<!-- row -->
						<div class="row">
							<div class="col">
								<div class="form_label required">{{ message("item.app.001") }}</div>
								<div class="form_data">
									<input type="text" id="titl_nm" name="titl_nm">
								</div>
							</div>
						</div>
						<!-- row -->
						<div class="row">
							<div class="col">
								<div class="form_label">{{ message("item.commonCode.005") }}</div>
								<div class="form_data">
									<input type="text" id="dscrpt" name="dscrpt">
								</div>
							</div>
						</div>
						<!-- row -->
						<div class="row">
							<div class="col">
								<div class="form_label">{{ message("item.construction.053") }}</div>
								<div class="form_data">
									<input type="date" class="date w-md" id="shot_date" name="shot_date">
								</div>
							</div>
						</div>
						<!-- row -->
						<div class="row">
							<div class="col">
								<div class="form_label required">{{ message("item.construction.054") }}</div>
								<div class="form_data" style="position: relative;height: 340px;">
									<div style="top: 0;position: absolute;" id="photoDiv">
										<button type="button" class="btn icon_btn" id="addPhoto">
											<i class="ic ic-picture-one"></i>
											<span class="blind">추가</span>
										</button>
									</div>
									<div style="position: absolute;bottom: 8px; height:300px; width: 530px;">
										<div id="uploadImg" style="height:290px; width: 530px; display:flex; flex-wrap:nowrap; overflow-x: auto"></div>
									</div>
								</div>
								<input type="file" accept="image/*" id="fileNm" name="fileNm" style="display: none;" multiple />
							</div>
                            <div class="form_help" style="margin-top: 8px; color: #eb6565; font-size: 12px; position:absolute; bottom:4px; right: 12px">
                                <i class="ic ic-info" style="margin-right: 4px;"></i>1MB 이상의 파일은 업로드 시 자동으로 크기가 조정됩니다
                            </div>
						</div>
					</div>
				</div>


			</form>
		</div>

		<div class="pop_footer">
			<div class="btn_area s_default jc_e">
				<button type="button" class="btn _outline" id="cancelModalBtn">취소</button>
				<button type="button" class="btn _fill" onclick="addArrPhoto()">완료</button>
			</div>
		</div>
	</div>
</div>


{% block footer_script %}
<style>
	.cell-BizON { background-color: #FFF000 !important }
	.pop_box._sm { width: 62rem;}
</style>
<script>

	var urlParams = new URLSearchParams(location.search);
	var id = "";
	var code = "";
	var type = "";
	var curSeq = 0;
	var fileMap = {};
	var addPhotoArr = [];

    // 이미지 드로그앤 드롭
    const dropZone = document.getElementById('uploadImg');

    dropZone.addEventListener('dragover', function (e) {
      e.preventDefault();   // 기본 브라우저 동작 막기
      dropZone.style.backgroundColor = '#f0f0f0';
    });

    dropZone.addEventListener('dragleave', function (e) {
      e.preventDefault();
      dropZone.style.backgroundColor = '';
    });

    dropZone.addEventListener('drop', function (e) {
        e.preventDefault();
        dropZone.style.backgroundColor = '';
        dropZone.innerHTML = ''; // 기존 이미지 초기화

        const files = e.dataTransfer.files;
        if (!files.length) return;

        addPhotoArr = []; // 이전 항목 초기화

        for (let i = 0; i < files.length; i++) {
            const file = files[i];

            if (!file.type.startsWith('image/')) {
                dropZone.innerHTML = "이미지 파일만 가능합니다.";
                continue;
            }

            const reader = new FileReader();
            reader.onload = function (evt) {
                // 미리보기 이미지 추가
                const img = document.createElement("img");
                img.src = evt.target.result;
                img.style.maxWidth = "100px";
                img.style.marginRight = "8px";
                img.style.borderRadius = "4px";
                dropZone.appendChild(img);

                // addPhotoArr에 추가
                addPhotoArr.push({
                    titl_nm: gaiaCommon.decodeSafeText($("#titl_nm").val()),
                    dscrpt: gaiaCommon.decodeSafeText($("#dscrpt").val()),
                    shot_date: $("#shot_date").val() || '',
                    base: evt.target.result, // base64
                    file: file
                });
            };

            reader.readAsDataURL(file);
        }
    });

	var initModal = function(){
		// 그리드에서 값가져옴
		const modalElement = document.getElementById("photoModal");
        addPhotoArr = [];
        $("#uploadImg").empty();  // 미리보기 초기화

        // 촬영일자 보고날짜로 설정
		$("#shot_date").val($("#dailyReportDate").val());

		/*
		const row = JSON.parse(
			modalElement.getAttribute("data-id-value")
		);
		code = row.rsce_cd;
		type = row.rsce_tp_cd;
		id = row.cntrct_chg_id;
		if (code && type && id) {
			modal.init();
		}
		*/
		
		$(".pop_box").css("z-index", 9999);

		let makeItem = [];
		makeItem[0] = { makeId: 'activity',
		                col1: 'activity_id',
		                col2: 'activity_id || \': \' || activity_nm',
		                tableName: 'cw_daily_report_activity',
						addSql: cntrctNo + ',' + rId,
		                orderByCol: 'activity_id',
		                orderByType: 'ASC',
		                boxType: 'selectBox',
		                ckeckedValue: '',
		                initText: '',
		                paramNm: 'selectBox',
		                funName: '',
		                funParam: 'this.value',
		                funtype: 'onchange'};

		$.ajax({
		    url: '/api/construction/dailyreport/make-commonBox',
		    method: "POST",
		    dataType: "json",
		    xhrFields: { withCredentials: true },
		    contentType : 'application/json; charset=UTF-8',
		    traditional : true,
		    data: JSON.stringify(makeItem),
		    success: function(data) {
		        let returnMap = data.details.returnMap;
		        
		        let addAppLineCentent = document.getElementById("activityIdSelectbox");
		        addAppLineCentent.innerHTML = returnMap.selectBox;
		    },
            error: function (xhr, status, error) {
                console.error(status, error);
                gaiaCommon.customAlert("{{ message('msg.060') }}");
            }
		});


		$("#cancelModalBtn").click(function(){
			resetModal();
			closeModal('click');
		});
		
		$("#cancelModal").click(function(){
			resetModal();
			closeModal('click');
		});




		curSeq = photoArr.length;
//		$("#photoDiv").append(`<input type="file" accept="image/*" id="file_`+curSeq+`" name="fileNm" style="display: none;"/>`);
		
/**
		$("#file_"+curSeq).change(function(e){
			getDataUrl(e.target.files[0]);
		});
*/
	}


	function getDataUrl(img) {
		var reader = new FileReader();
		
		reader.onload = function(){
			var r = reader.result;
			$("#uploadImg").css("width", 300);
			$("#uploadImg").css("height", 290);
			$("#uploadImg").css("display", flex);
			$("#uploadImg").css("flex-wrap", nowrap);
			$("#uploadImg").css("overflow-x", auto);
			$("#uploadImg").attr("src", r);
		}
		reader.readAsDataURL(img);
	}


	function addArrPhoto(){
		// 제목 미입력할 경우
		if($("#titl_nm").val() == ""){
			gaiaCommon.customAlert("{{ message('msg.039') }}".replace('{0}', "{{ message('item.app.001') }}"));
			return false;
		}

        // 날짜 미입력할경우
		if($("#shot_date").val() == ""){
			gaiaCommon.customAlert("날짜를 입력해 주세요");
			return false;
		}

        // 파일 미존재할 경우
		if(!addPhotoArr.length){
			gaiaCommon.customAlert("{{ message('msg.038') }}".replace('{0}', "{{ message('item.construction.054') }}"));
			return false;
		}

        const photoList = [];
        const fileList = [];

        // Activity 셀렉트 박스
        const selectedActivityId = $("#activity").val();
        const selectedActivityNm = $("#activity option:selected").text();

        // List<MultipartFile> files 형태로 files 세팅 필요
        const formData = new FormData();

        addPhotoArr.forEach(item => {
            const thisSeq = curSeq++;

            const photoData = {
                seq: thisSeq,
                activity_id: selectedActivityId,
                activity_nm: selectedActivityNm,
                titl_nm: $("#titl_nm").val(),
                dscrpt: $("#dscrpt").val(),
                shot_date: $("#shot_date").val(),
                base: item.base,
                file: item.file
            };

            photoArr.push(photoData);
            photoList.push(photoData);
            fileList.push(item.file);
            fileMap[thisSeq] = item.file;

            // 파일만 업로드용
            formData.append('files', item.file);
        });

        gaiaCommon.LoadingOverlay('body', true);
        gaiaCommon.postForm('/resource/upload', formData, function (response) {
                console.log('response', response);
                if (response.details.result) {
                    gaiaCommon.customAlert('{{ message("msg.044") }}', function () { // 저장되었습니다

                    let metas = response.details.metas;
                    photoList.forEach((photo, idx) => {
                        let meta = metas[idx];
                        if (meta) {
                            // 서버 메타데이터 매핑
                            photo.fileNm       = meta.originalFilename;
                            photo.fileDiskNm   = meta.fileName;
                            photo.fileDiskPath = meta.dirPath;
                            photo.fileSize     = meta.size;
                            photo.meta        = meta;
                        }
                    });

                    console.log('*** photoList = ',photoList);
                    if (typeof window.receivePhotosFromModal === "function") {
                        window.receivePhotosFromModal(photoList, fileList);
                    }
                    gaiaCommon.LoadingOverlay('body', false);
                    closeModal();  // 모달 닫기 함수
                    resetModal();  // 모달 내부 초기화
                });
                }else{
                    gaiaCommon.LoadingOverlay('body', false);
                    gaiaCommon.customAlert('{{ message("msg.045") }}');	// 저장에 실패 했습니다.
                }
            },function (error) {
                console.log('error', error);
                gaiaCommon.LoadingOverlay('body', false);
                gaiaCommon.customAlert('{{ message("msg.045") }}');	// 저장에 실패 했습니다.
            }
        );
	}
	
	function closeModal(type){
		if(type == 'click'){
			$("#file_"+curSeq).remove();
		}

		var modalElement = document.getElementById("photoModal");
		modalElement.style.display = "none";
		document.body.style.overflow = 'unset';
	}


	function resetModal(){
		$("#titl_nm").val("");
		$("#dscrpt").val("");
		$("#shot_date").val("");
		$("#uploadImg").attr("src", "");
		$("#fileNm").val("");
		$("#uploadImg").empty();  // 미리보기 초기화
	}
	
	$(document).on("ready",function(){
		/**
		$("#addPhoto").click(function(e){
			$("#file_"+curSeq).click();
		});
		*/
	})

	// 파일 탐색기 오픈
    $("#addPhoto").on("click", function () {
        $("#fileNm").click(); // 숨겨진 input 클릭
    });

    // 파일 선택할 경우 미리보기 & photoArr 데이터 준비

    $("#fileNm").on("change", function (e) {
        const files = e.target.files;
        if (!files.length) return;

        const totalFiles = files.length;

        $("#uploadImg").empty(); // 모달 내 미리보기 초기화
        addPhotoArr = [];

        gaiaCommon.LoadingOverlay('body', true);
        let processed = 0; // 처리된 파일 수
        for (let i = 0; i < totalFiles; i++) {
            const file = files[i];
            if (!(file instanceof File)) continue;


            // 미리보기 표시
            const previewImg = $("<img>")
                .css({marginRight: "8px", borderRadius: "4px", "object-fit": "contain", border: "1px solid #e0e0e0" });
            console.log('*** previewImg= ',previewImg);
            tware.utils.resizeImage(previewImg[0], file, (resData) => {
                $("#uploadImg").append(previewImg);

                addPhotoArr.push({
                    titl_nm: gaiaCommon.decodeSafeText($("#titl_nm").val()),
                    dscrpt: gaiaCommon.decodeSafeText($("#dscrpt").val()),
                    shot_date: $("#shot_date").val() || '',
                    base: resData.data,
                    file: resData.file
                });

                processed++;
                console.log('*** resData',resData);
                // 모든 파일 처리 끝났을 때 로딩 닫기
                if (processed === totalFiles) {
                    gaiaCommon.LoadingOverlay('body', false);
                }
            });

        }

        $(this).val('');
    });


	$(document).on("click", "#addPhotoData", function () {
	    initModal();
		document.body.style.overflow = 'hidden';
		
	});
</script>
{% endblock footer_script %}