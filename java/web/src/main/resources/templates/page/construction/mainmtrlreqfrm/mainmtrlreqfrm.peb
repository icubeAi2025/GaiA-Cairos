{% extends 'layout/base_content' %} {% block content %}
<section class="contents_wrap">

    <article class="conts g-row" id="container">
        <div class="group">

            <div class="conts_grid" >
                <div class="search_wrap">
                    <span class="selectbox" id="workTypeSelect">
                    </span>
                    <div class="searchbox_wrap">
                        <input type="text" id="searchValue" onkeypress="if( event.keyCode === 13 ){page.search();}" placeholder='문서번호, 품명, 검수자' />
                        <button type="button" class="icon_btn search" onclick="page.search()">
                            <i class="ic ic-search"></i>
                            <span class="blind">
                                {{ message("item.com.014") }}
                            </span>
                        </button>
                    </div>
                </div>
                <div class="toolbar">
                    <div class="btn_area s_default">
                        {{ btnHtml | raw }}
                    </div>
                </div>
                <div class="grid" id="mainmtrlreqfrmGrid"></div>
            </div>
        </div>
    </article>
</section>
<div id="popup" class="popup_overlay modal_base" style="display: none;">
    <!-- 모달창 내용 -->
</div>
{% endblock content %}
{% block footer_script %}
<script>
    let pjtNo;
    let cntrctNo;
    let cntrctNm;
    let initSearchData = [];
    let workType= '';
    let searchValue;
    var imgDir = '{{imgDir}}';

    var isDelAuth = "{{ isDelAuth }}"

    const params = new URLSearchParams(window.location.search);
    const urlSearchValue = params.get("urlSearchValue");


    $(function () {
        gaia.create({
            $init: function () {
                page.initializeSelectBoxes()

                const searchData = gaia.getSearchData(initSearchData);
                if (urlSearchValue && urlSearchValue.trim() !== '') {
                    searchValue = urlSearchValue.trim();
                    $('#searchValue').val(searchValue);
                } else if (searchData && searchData.searchValue) {
                    searchValue = searchData.searchValue;
                    $('#searchValue').val(searchValue);
                }

                page.init();
            }
        });
    });

    var page = {
        init: function () {
            pjtNo = pjtInfo.pjtNo;
            cntrctNo = pjtInfo.cntrctNo;
            cntrctNm = pjtInfo.cntrct_nm;

            gaiaPortal.navMenuInit('M0407', '주요자재 검수요청서');

            gaiaCommon.makeCntrctSelectBox(
                "#container", // id: 컨테이너
                () => {
                    $(".btn_area").hide();
                },
                function initCb(initialCntrctNo) {   // 초기 콜백
                    cntrctNo = initialCntrctNo;
                    mainmtrlreqfrmGrid.init();
                },
                function chgCb(changedCntrctNo) {   // 변경 콜백
                    cntrctNo = changedCntrctNo;
                    mainmtrlreqfrmGrid.init();
                }
            );

            gaia.loaded = true
        },

        // 추가 페이지 이동
        addMtrlReqfrm: function () {
            window.location.href = `/construction/mainmtrlreqfrm/addMtrlReqfrm?type=d&cntrctNo=${cntrctNo}&pjtNo=${pjtNo}`;
        },

        // 수정 페이지 이동
        updateMtrlReqfrm: function (){
            let checkedList = []; // 체크된 행
            const allRows = mainmtrlreqfrmGrid.mainmtrlreqfrmGrid.getCheckedRows();

            allRows.forEach(row => {
                const cntrctNo= row.cntrctNo;
                const reqfrmNo= row.reqfrmNo;
                checkedList.push({
                    cntrctNo: cntrctNo,
                    reqfrmNo: reqfrmNo,
                });
            });

            if (allRows.some(row => row.apprvlStatsNm === "승인")) {
                gaiaCommon.customAlert("승인된 항목은 수정할 수 없습니다.");
                return;
            }

            if (checkedList.length === 1) {
                const selectedRow = checkedList[0];
                const { cntrctNo, reqfrmNo } = selectedRow;
                window.location.href = `/construction/mainmtrlreqfrm/updateMtrlReqfrm?type=d&cntrctNo=${cntrctNo}&pjtNo=${pjtNo}&reqfrmNo=${reqfrmNo}`;

            } else {
                gaiaCommon.customAlert("{{ message('msg.020') }}");  // 수정할 항목을 하나만 선택해주세요.
            }
        },

        // 삭제
        deleteMtrlReqfrm: function (){
            const listName = "mainmtrlReqfrmList";
            let checkedList = []; // 체크된 행
            const allRows = mainmtrlreqfrmGrid.mainmtrlreqfrmGrid.getCheckedRows();

            allRows.forEach(row => {
                const cntrctNo= row.cntrctNo;
                const reqfrmNo= row.reqfrmNo;
                const cmNm= row.cmNm;
                checkedList.push({
                    cntrctNo: cntrctNo,
                    reqfrmNo: reqfrmNo,
                    cmNm: cmNm,
                });
            });

            // const hasBlockedItem = checkedList.some(item => item.cmNm != null);

            // const confirmTitle = hasBlockedItem ? "검수 요청된 문서는 삭제할 수 없습니다. 그외 문서를 삭제합니다." : "선택한 주요자재 검수요청서를 삭제합니다.";


            if (checkedList.length === 0) {
                gaiaCommon.customAlert("{{ message('msg.055') }}"); // 삭제할 항목을 선택해주세요.
                return;
            }

            gaiaCommon.customConfirm("주요자재 검수요청서 삭제", "주요자재 검수요청서 삭제", "{{ message('msg.009') }}", function () {
                let data = { [listName]: checkedList };

                gaiaCommon.post('/api/construction/mainmtrlreqfrm/deleteMtrlReqfrm', data, function (response) {
                    if (response.ok) {
                        gaiaCommon.customAlert("{{ message('msg.006') }}"); // 삭제가 완료되었습니다.
                        $('#searchValue').val("");
                        mainmtrlreqfrmGrid.init();
                    }
                })
            });
        },

        // 검수결과 등록 페이지 이동
        addMtrlReqfrmResult: function () {
            let checkedList = []; // 체크된 행
            const allRows = mainmtrlreqfrmGrid.mainmtrlreqfrmGrid.getCheckedRows();

            allRows.forEach(row => {
                const cntrctNo= row.cntrctNo;
                const reqfrmNo= row.reqfrmNo;
                checkedList.push({
                    cntrctNo: cntrctNo,
                    reqfrmNo: reqfrmNo,
                });
            });

            if (allRows.some(row => row.apprvlStatsNm === "승인")) {
                gaiaCommon.customAlert("승인된 항목은 수정할 수 없습니다.");
                return;
            }

            if (checkedList.length === 1) {
                const selectedRow = checkedList[0];
                const { cntrctNo, reqfrmNo } = selectedRow;
                window.location.href = `/construction/mainmtrlreqfrm/addMtrlReqfrmResult?type=d&cntrctNo=${cntrctNo}&pjtNo=${pjtNo}&reqfrmNo=${reqfrmNo}`;

            } else if (checkedList.length === 0){
                gaiaCommon.customAlert("검수 결과를 등록/수정할 항목을 선택해주세요");
            }
            else {
                gaiaCommon.customAlert("검수 결과를 등록/수정할 항목을 하나만 선택해주세요");
            }
        },

        initializeSelectBoxes: function () {
            let selectBoxRequests = [
                {
                    //카테고리
                    cmnGrpCd: "19a8bb53-74b4-405a-8d91-2b38555fc7d9",
                    selectBoxId: "workType",
                    selectBoxNmType: "KOR",
                    ckeckedValue: workType,
                    orderByCol: "",
                    orderByType: "",
                    paramNm: "workType",
                    funName: "page.toggleWork",
                    funParam: "",
                    funtype: "onchange",
                },
            ];

            page.makeSelectBox(selectBoxRequests);
        },

        // 셀렉트박스 호출
        makeSelectBox: function (comCodeSelectBoxGets) {
            gaiaCommon.post("/api/util/make-selectBox",comCodeSelectBoxGets,(data) => {
                let returnMap = data.details.returnMap;
                comCodeSelectBoxGets.forEach(function (item) {
                    let categorySelect = returnMap[item.selectBoxId];
                    $("#workTypeSelect").prepend(categorySelect);

                    // 전체 옵션 추가
                    let defaultOption = $("<option>", {
                        value: "",
                        text: "전체",
                        selected: true,
                    });
                    $("#workType").prepend(defaultOption);
                });

            },(xhr, status, error) => {
                console.error("Error making select box:", status, error);
            })
        },

        // 검색
        search: function (){
            workType = $("#workType").val();
            searchValue = $('#searchValue').val();

            initSearchData.searchValue = searchValue;
            initSearchData.workType = workType;

            gaia.setSearchData(initSearchData);
            mainmtrlreqfrmGrid.init();
        },

        // 공종 선택
        toggleWork() {
            workType = $("#workType").val();
            searchValue = '';
            $('#searchValue').val('')

            initSearchData.searchValue = searchValue;
            initSearchData.workType = workType;

            gaia.setSearchData(initSearchData);
            mainmtrlreqfrmGrid.init();
        },

        // 검수요청
        inspectionRequest: function () {
            const allRows = mainmtrlreqfrmGrid.mainmtrlreqfrmGrid.getCheckedRows();

            // 체크된 행만 필터링 + 필요한 컬럼만 선택
            const checkedList = allRows
                .map(row => ({
                    cntrctNo: row.cntrctNo,
                    reqfrmNo: row.reqfrmNo,
                    cnsttyCd: row.cnsttyCd,
                    cnsttyNm: row.cnsttyNm,
                    cntrctNm: cntrctNm
                }));

            if (checkedList.length === 0) {
                gaiaCommon.customAlert("검수요청을 보낼 항목을 선택 해 주세요");
                return false;
            }

            
            const hasApproved = allRows.some(r => r.apprvlStatsNm?.trim() === '승인');
            if (hasApproved) {
                gaiaCommon.customAlert("승인된 항목은 검수요청을 보낼 수 없습니다.");
                return;
            }

            // 체크된 항목에서 공종 배열로 변환
            const cnsttySets = checkedList.map(r => new Set(r.cnsttyCd.split(',').map(s => s.trim())));

            // 첫 번째 항목 기준
            const firstSet = cnsttySets[0];

            // 다른 항목들이 첫 번째 항목과 모두 교집합이 있는지 확인
            const hasDifferent = cnsttySets.slice(1).some(s => {
                const intersection = new Set([...s].filter(x => firstSet.has(x)));
                return intersection.size === 0; // 교집합 없으면 다름
            });

            if (hasDifferent) {
                gaiaCommon.customAlert("선택된 항목들의 공종이 모두 동일해야 검수요청을 보낼 수 있습니다.");
                return;
            }

            // const firstCnsttyCd = checkedList[0].cnsttyCd?.trim();
            // const hasDifferent = checkedList.some(r => r.cnsttyCd?.trim() !== firstCnsttyCd);
            // if (hasDifferent) {
            //     gaiaCommon.customAlert("선택된 항목들의 공종이 모두 동일해야 검수요청을 보낼 수 있습니다.");
            //     return;
            // }

            console.log("checkedList",checkedList)

            gaiaCommon.checkAuth("MREQ_AP_REQ", () => {
                $("#popup").load(`/construction/mainmtrlreqfrm/request`, function () {
                    $("#popup").css({ "display": "flex" });
                    popup.init(checkedList);
                });
            });
        },
        // 결재요청
        paymentRequest: function () {
            const allRows = mainmtrlreqfrmGrid.mainmtrlreqfrmGrid.getCheckedRows();

            const checkedList = allRows
                .map(row => ({
                    cntrctNo: row.cntrctNo,
                    reqfrmNo: row.reqfrmNo,
                    cnsttyNm: row.cnsttyNm,
                    rsltNm: row.rsltNm,
                    apprvlStatsNm: row.apprvlStatsNm
                }));

            const invalidRow = checkedList.find(row => !row.rsltNm || row.rsltNm.trim() === '');
            if (invalidRow) {
                gaiaCommon.customAlert("검수결과가 입력되지 않은 항목이 있습니다. 검수결과를 등록해주세요.");
                return;
            }

            const approvedRow = checkedList.find(row => row.apprvlStatsNm === '승인');
            if (approvedRow) {
                gaiaCommon.customAlert("{{ message('msg.070') }}");
                return;
            }

            gaiaCommon.customConfirm(
                    "{{ message('item.app.025') }}",
                    "{{ message('item.app.025') }}",
                    "{{ message('msg.quality.034') }}",
                    function () {
                        $.ajax({
                            url: '/api/construction/mainmtrlreqfrm/paymentRequest',
                            type: 'POST',
                            contentType: 'application/json',
                            dataType: "json",
                            data: JSON.stringify(checkedList),
                            success: function (response) {
                                if (response.ok) {
                                    gaiaCommon.customAlert("{{ message('msg.034') }}", function () {
                                        location.reload();
                                    });
                                } else if (response.errorCode === '1000') {
                                    gaiaCommon.customAlert("{{ message('msg.monthlyreport.010') }}");
                                }
                            }
                        });
                    }
                );
        },
        cancelPayment: function () {
        const allRows = mainmtrlreqfrmGrid.mainmtrlreqfrmGrid.getCheckedRows();

            const checkedList = allRows
                .map(row => ({
                    cntrctNo: row.cntrctNo,
                    reqfrmNo: row.reqfrmNo,
                }));

            gaiaCommon.customConfirm(
                    "결재취소",
                    "결재취소",
                    "결재를 취소 하시겠습니까?",
                    function () {
                        $.ajax({
                            url: '/api/construction/mainmtrlreqfrm/cancelPayment',
                            type: 'POST',
                            contentType: 'application/json',
                            dataType: "json",
                            data: JSON.stringify(checkedList),
                            success: function (response) {
                                if (response.ok) {
                                    gaiaCommon.customAlert("{{ message('msg.034') }}", function () {
                                        location.reload();
                                    });
                                } else if (response.errorCode === '1000') {
                                    gaiaCommon.customAlert("{{ message('msg.monthlyreport.010') }}");
                                }
                            }
                        });
                    }
                );
        },
    }

    var mainmtrlreqfrmGrid = {
        init: function () {
            let _this = this;
            if (this.mainmtrlreqfrmGrid) {
                this.mainmtrlreqfrmGrid.destroy();
                this.mainmtrlreqfrmGrid = null;
            }

            let bodyHeight;
            if (gaiaCommon.me.isAdmin() || isGAIA()) {
                bodyHeight = window.innerHeight - 500;
            } else if (isCAIROS()) {
                bodyHeight = window.innerHeight - 420;
            }

            const dataSource = createDataSource({
                readData: {
                    url: "/api/construction/mainmtrlreqfrm/list",
                    method: "GET",
                    initParams: {
                        pjtNo: pjtNo,
                        cntrctNo: cntrctNo,
                        searchValue: searchValue,
                        workType: workType,
                    },
                }
            });

            if (!this.mainmtrlreqfrmGrid) {
                this.mainmtrlreqfrmGrid = new tui.Grid({
                    el: document.getElementById('mainmtrlreqfrmGrid'),
                    bodyHeight: bodyHeight,
                    data: dataSource,
                    scrollX: true,
                    scrollY: true,
                    draggable: false,
                    contextMenu: null,
                    rowHeaders: [
                        {
                            type: "checkbox",
                            header: `<input type="checkbox" id="checkAll" class="hidden-input" name="_checked" />`,
                            width: 70,
                            renderer: {
                                type: window.IconRenderer,
                                options: [
                                    {
                                        type: "checkBox",
                                    },
                                    // 삭제
                                    {
                                        auth: isDelAuth === "true" ? true : false,
                                        type:'trash',
                                        url: "/api/construction/mainmtrlreqfrm/deleteMtrlReqfrm",
                                        idFields: "cntrctNo,reqfrmNo",
                                        keyName: 'mainmtrlReqfrmList',
                                        msgList: {
                                            confirmTit: "삭제",
                                            confirmSubTit: "주요자재 검수 요청서 삭제",
                                            confirmMsg: "{{ message('msg.009') }}",
                                            completeMsg: "{{ message('msg.006') }}"
                                        },
                                        //사전 조건 검사 함수
                                        // condition:function(rowData){
                                        //     console.log("ROWDATA :", rowData);
                                        //     if (rowData.cmNm != null) {
                                        //         gaiaCommon.customAlert("검수 요청된 문서는 삭제할 수 없습니다.");
                                        //         return false;
                                        //     }
                                        //     return true;
                                        // },
                                        success: function () {
                                            $('#searchValue').val("");
                                            mainmtrlreqfrmGrid.init();
                                        },
                                        fail:function(rowData){
                                            console.log("여기는 ajax 통신 실패시 로직 작성111.\nROWDATA :",rowData)
                                        },
                                        complete:function(rowData){
                                        }
                                    },
                                    // 레포트 미리보기
                                    {
                                        type:'eyes',
                                        idFields:'cntrctNo,reqfrmNo',
                                        success:function(rowData) {
                                            let param = {
                                                cntrctNo: rowData.cntrctNo,
                                                reqfrmNo: rowData.reqfrmNo,
                                                apprvlId: rowData.apprvlId,
                                                imgDir: imgDir.substring(0, imgDir.indexOf("/upload")),
                                                baseUrl: window.location.origin
                                            }

                                            gaiaCommon.openReportViewer('/mainmtrl-reqfrm-report/mainmtrl_reqfrm_report.jrf', param)
                                        },
                                    }
                                ]
                            },
                        },
                    ],
                    columns: [
                        {
                            header: '{{ message("item.quality.007") }}', // 문서 번호
                            name: "docNo",
                            renderer:{
                                type:window.IconRenderer,
                                options:[
                                    {
                                        type:'newWindow',
                                        idFields: "cntrctNo,reqfrmNo",
                                        isHover:true,
                                        success:function(rowData) {
                                            window.location.href = `/construction/mainmtrlreqfrm/getMtrlReqfrm?cntrctNo=${rowData.cntrctNo}&reqfrmNo=${rowData.reqfrmNo}`;
                                        },
                                    }
                                ]
                            },
                            width: 300,
                            resizable: true,
                            ellipsis: true,
                        },
                        {
                            header: '{{ message("item.progressstatus.010") }}', name: "cnsttyNm", align: "center", resizable: true, ellipsis: true  // 공종
                        },
                        {
                            header: '품명', name: "prdnm",  width: 150, resizable: true, ellipsis: true, align: "left"
                        },
                        {
                            header: '검수요청일자', name: "reqDt", width: 200, align: "center", resizable: true, ellipsis: true
                        },
                        {
                            header: '검수자', name: "cmNm", align: "center", resizable: true, ellipsis: true
                        },
                        {
                            header: '검수일', name: "cmDt", align: "center", resizable: true, ellipsis: true
                        },
                        {
                            header: '판정', name: "rsltNm", align: "center", resizable: true, ellipsis: true
                        },
                        {
                            header: '{{ message("item.quality.016") }}', name: "apprvlNm", align: "center", resizable: true, ellipsis: true   // 결재자
                        },
                        {
                            header: '{{ message("item.quality.017") }}', name: "apprvlDt", align: "center", resizable: true, ellipsis: true   // 결재일
                        },
                        {
                            header: '{{ message("item.quality.015") }}', name: "apprvlStatsNm", align: "center", resizable: true, ellipsis: true  // 결과
                            // PDF 미리보기
                            ,   renderer: { 
                                type: window.IconRenderer,
                                options: [
                                    {
                                        type: "printer",
                                        auth: (rowData) => {
                                            return rowData.dsmValid === "true";
                                        },
                                        success: (rowData) => {
                                            const docId = rowData.docId;
                                            // 파라미터 1: 통합문서관리(DOC), 2: 열람할 문서 key, 3: 다운로드 여부(o: 'DA', x: 입력안함)
                                            gaiaCommon.pdfViewUtil('DOC', docId, 'DA');
                                        }
                                    }
                                ]
                            },
                        },
                    ],
                    header: {
                        height: 70,
                        complexColumns: [
                            {
                                header: '검수 결과',
                                name: 'result',
                                childNames: ['cmDt', 'rsltNm']
                            },
                            {
                                header: '{{ message("item.quality.012") }}',
                                name: 'payment',
                                childNames: ['apprvlNm', 'apprvlDt', 'apprvlStatsNm']
                            },
                        ]
                    }
                });
            }
            this.mainmtrlreqfrmGrid.on("errorResponse", function (ev) {
                const statusCode = ev.xhr.status;

                if (statusCode === 403) {
                    gaiaCommon.customAlert(SESSION_EXPIRED_MSG, () => { location.reload(); });
                } else {
                    console.error("데이터 요청 중 오류 발생:", ev.xhr.status, ev.xhr.statusText);
                }
            });
            refreshGrid(this.mainmtrlreqfrmGrid);
        },
    }
</script>
{% endblock footer_script %}