{% extends 'layout/base_content' %}
{% block head %}
    <style>
        .slider-container {
            max-width: 100vw;
            width: 100%;
            overflow: hidden;
        }
        #formBox {
            border-top: 1px solid var(--tb-bd);
            width: 100%;
            height: 150px;
        }
        #todayActivityContents {
            height: 100%;
        }
        #tomorrowActivityContents {
            height: 100%;
        }
        #row {
            height: 100%;
        }
        .activity_span {
            color:#004A99;
            font-weight:bold;
            cursor: pointer;
        }
        #formLabel {
            justify-content: center;
            text-align: center;
        }
        /* 가로 배치용 */
        .resource_card_wrap {
            display: flex;
            justify-content: space-between;
            gap: 16px;
            flex-wrap: wrap;
        }

        /* 개별 카드 */
        .resource_card {
            flex: 1;
            min-width: 320px;
            border: 1px solid #ccc;
            background: #fff;
            padding: 0px 4px;
            box-sizing: border-box;
            position: relative;
            margin-top: 15px;
            height: 80%;
        }
        .dl_box {
            margin-bottom: 1.5px;
            display: grid;
            grid-template-columns: 30px 1fr;
            align-items: stretch
            min-height: 300px;
        }
        .dl_box dt {
            writing-mode: vertical-rl;
            justify-content: center;
            width: 30px;
        }
        .dl_box dd {
            width: 100%;
            min-height: 100px;
        }
        .resource_card .card-badge {
            position: absolute;
            top: 4px;
            right: 8px;
            color: var(--color-default);
            font-weight: 700;
            font-size: 14px;
            padding-top: 8px;
            padding-right: 3px;
            border-radius: 6px;
            line-height: 1;
        }
        .icon_btn more {
            float: right;
            transform: translateY(0);
        }
        -- 모달에서 사용
        .tui-grid-cell-has-input .tui-grid-cell-content {
            padding: 5px !important;
        }
        .more::after {
            content: none;
        }
        .ul_list li {
            min-width: 500px;
        }
    </style>
{% endblock %}
{% block content %}
    <section class="contents_wrap">
        <article class="conts_area">
            <div class="conts">
                <div class="conts_form">
                    <div class="btn_area s_default">
                        {{ btnHtml | raw }}
                        <button type="button" class="btn _outline" id="cancel">{{ message("btn.007") }}</button>
                    </div>

                    <form id='inputForm'>
                        <!--개요 S-->
                        <div class="s_conts">
                            <span class="tree_route">{{ message("item.construction.012") }}</span>
                            <div class="form_box">
                                <div class="group">
                                    <!-- row -->
                                    <div class="row cols2">
                                        <div class="col">
                                            <div class="form_label required">{{ message("item.construction.002") }}</div>
                                            <div class="form_data">
                                                <input type="date" class="date w-md dDate" id="dailyReportDate" name="dailyReportDate" readonly>
                                            </div>
                                        </div>
                                        <div class="col">
                                            <div class="form_label required">{{ message("item.construction.001") }}</div>
                                            <div class="form_data">
                                                <input type="text" id="reportNo" name="reportNo" class="maxlength" maxlength="20" readonly>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- row -->
                                    <div class="row">
                                        <div class="col">
                                            <div class="form_label">{{ message("item.app.001") }}</div>
                                            <div class="form_data">
                                                <input type="text" id="title" name="title" class="maxlength" maxlength="100" readonly>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- row -->
                                    <div class="row">
                                        <div class="col">
                                            <div class="form_label">{{ message("item.construction.013") }}</div>
                                            <div class="form_data">
                                                <div class="form_box in_formbox">
                                                    <div class="row cols3">
                                                        <div class="col">
                                                            <div class="form_label">{{ message("item.construction.005") }} :
                                                            </div>
                                                            <div class="form_data">
                                                                <div class="item_group">
                                                                    <span class="item_wrap">
                                                                        {{ message("item.construction.006") }} <input
                                                                            type="text" class="w-md" id="amWthr"
                                                                            name="amWthr" readonly>
                                                                    </span>
                                                                    <span class="item_wrap">
                                                                        {{ message("item.construction.007") }} <input
                                                                            type="text" class="w-md" id="pmWthr"
                                                                            name="pmWthr" readonly>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col">
                                                            <div class="form_label">{{ message("item.construction.014") }} :
                                                            </div>
                                                            <div class="form_data">
                                                                <div class="item_group">
                                                                    <span class="item_wrap put_txt _celsius">
                                                                        {{ message("item.construction.010") }} <input
                                                                            type="text" class="w-xs cost" id="dlowstTmprtVal"
                                                                            name="dlowstTmprtVal" readonly>
                                                                    </span>
                                                                    <span class="item_wrap put_txt _celsius">
                                                                        {{ message("item.construction.009") }} <input
                                                                            type="text" class="w-xs cost" id="dtopTmprtVal"
                                                                            name="dtopTmprtVal" readonly>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col">
                                                            <div class="form_label blind">{{message("item.construction.015") }}/{{message("item.construction.016") }}</div>
                                                            <div class="form_data">
                                                                <div class="item_group">

                                                                    <span class="item_wrap put_txt _mm">
                                                                        {{ message("item.construction.015") }} <input
                                                                            type="text" class="w-xs cost" id="prcptRate"
                                                                            name="prcptRate" readonly>
                                                                    </span>

                                                                    <span class="item_wrap put_txt _mm">
                                                                        {{ message("item.construction.016") }} <input
                                                                            type="text" class="w-xs cost" id="snowRate"
                                                                            name="snowRate" readonly>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <!-- row -->
                                    <div class="row" id="acmltDiv"">
                                        <div class="col">
                                            <div class="form_label">{{ message("item.construction.017") }}</div>                        <!-- 공정현황 -->
                                            <div class="form_data">

                                                <table class="table ta_c" style="width:100%;">
                                                    <thead>
                                                        <tr>
                                                            <th scope="col">{{ message("item.app.040") }}</th>                          <!-- 구분 -->
                                                            <th scope="col">{{ message("item.construction.018") }}(%)</th>
                                                            <th scope="col">{{ message("item.construction.019") }}(%)</th>
                                                            <th scope="col">{{ message("item.construction.020") }}(%)</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr>
                                                            <th scope="row">{{ message("item.construction.021") }}</th>                 <!-- 당일 -->
                                                            <td><input type="text" readonly class="w-sm calc"
                                                                    style="text-align:center;" id="todayPlanBohalRate"
                                                                    name="todayPlanBohalRate"></td>
                                                            <td><input type="text" readonly class="w-sm calc"
                                                                    style="text-align:center;" id="todayArsltBohalRate"
                                                                    name="todayArsltBohalRate"></td>
                                                            <td><input type="text" readonly class="w-sm calc"
                                                                    style="text-align:center;" id="todayProcess"
                                                                    name="todayProcess"></td>
                                                        </tr>
                                                        <tr>
                                                            <th scope="row">{{ message("item.construction.022") }}</th>                 <!-- 누적 -->
                                                            <td><input type="text" readonly class="w-sm calc"
                                                                    style="text-align:center;" id="acmltPlanBohalRate"
                                                                    name="acmltPlanBohalRate"></td>
                                                            <td><input type="text" readonly class="w-sm calc"
                                                                    style="text-align:center;" id="acmltArsltBohalRate"
                                                                    name="acmltArsltBohalRate"></td>
                                                            <td><input type="text" readonly class="w-sm calc"
                                                                    style="text-align:center;" readonly id="acmltProcess"
                                                                    name="acmltProcess"></td>
                                                        </tr>
                                                    </tbody>
                                                </table>

                                            </div>
                                        </div>
                                    </div>
                                    <!-- row -->
                                    <div class="row">
                                        <div class="col">
                                            <div class="form_label" id="formLabel">특이사항 <br> (안전/품질/환경) </div>
                                            <div class="form_data">
                                                <textarea id="majorMatter" name="majorMatter" class="maxlength" maxlength="2000" readonly></textarea>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <!--개요 E-->

                        <!--금일 주요작업 Activity S-->
                        <div class="s_conts" id="activityDiv">
                            <span class="tree_route">작업현황</span>
                            <div class="row">
                                <div style="margin-bottom:6px;">
                                    <span class="activity_span" id="todayActivity">&gt; 금일 작업 Activity :
                                        <span id="todayActivityCount" style="text-decoration: underline; text-underline-offset: 3px;"></span>
                                    </span>
                                </div>
                            </div>
                            <div class="row">
                                <div style="margin-bottom:6px;">
                                    <span class="activity_span" id="tomorrowActivity">&gt; 명일 계획 Activity :
                                        <span id="tomorrowActivityCount" style="text-decoration: underline; text-underline-offset: 3px;"></span>
                                    </span>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form_box" id="formBox">
                                    <div class="row" id="row">
                                        <div class="col">
                                            <div class="form_label" id="formLabel">금일 작업 내용</div>
                                            <div class="form_data">
                                                <textarea  id="todayActivityContents" readonly>
                                                </textarea>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form_box" id="formBox">
                                    <div class="row" id="row">
                                        <div class="col">
                                            <div class="form_label" id="formLabel">명일 작업 계획</div>
                                            <div class="form_data">
                                                <textarea  id="tomorrowActivityContents" readonly>
                                                </textarea>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--금일 주요작업 Activity E-->

                        <!--공정 사진 S-->
                        <div class="s_conts" id="photoDiv">
                            <span class="tree_route">{{ message("item.construction.049") }}</span>
                            <!-- S: Slick Slider -->
                            <div class="process_photo">
                                <div class="process_photo_list">
                                </div>

                                <div class="slick_nav">
                                    <div class="btn_area">
                                        <div class="btn_group _outline">
                                            <button type="button" class="btn icon_btn" id="addPhotoData" style="display:none">
                                                <i class="ic ic-picture-one"></i>
                                                <span class="blind">추가</span>
                                            </button>
                                            <button type="button" class="btn icon_btn" onclick="delPhoto()" id="delPhotoData" style="display:none">
                                                <i class="ic ic-delete"></i>
                                                <span class="blind">삭제</span>
                                            </button>
                                        </div>

                                        <div class="btn_group _outline slick_indigator">
                                            <button type="button" class="btn icon_btn prev">
                                                <span class="blind">이전</span>
                                            </button>
                                            <button type="button" class="btn icon_btn next">
                                                <span class="blind">다음</span>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--공정 사진 E-->

                        <!-- 자원 S -->
                        <div class="s_conts" id="resourceDiv">
                            <div class="resource_card_wrap">

                                <div class="resource_card">
                                    <span class="tree_route">인력</span>
                                    <span class="card-badge" id="laborBadge">(0/0)</span>
                                    <dl class="dl_box ris_item">
                                        <dt class="ris_dt">사무관리</dt>
                                        <dd class="ris_dd">
                                            <div class="dl_item">
                                                <button type="button" class="icon_btn more" style="float: right; margin-top: 10px; display:none;">
                                                    <i class="ic ic-plus"></i>
                                                    <span class="tooltip">추가</span>
                                                </button>
                                                <ul class="ul_list _dash lbr-admin" style="float: left; width: 230px;">
                                                    <!-- JS로 li 추가됨 -->
                                                </ul>
                                            </div>
                                        </dd>
                                        <dt class="ris_dt">현장시공</dt>
                                        <dd class="ris_dd">
                                            <div class="dl_item">
                                                <button type="button" class="icon_btn more" style="float: right; margin-top: 10px; display:none;">
                                                    <i class="ic ic-plus"></i>
                                                    <span class="tooltip">추가</span>
                                                </button>
                                                <ul class="ul_list _dash lbr-field" style="float: left; width: 230px;">
                                                    <!-- JS로 li 추가됨 -->
                                                </ul>
                                            </div>
                                        </dd>
                                    </dl>
                                </div>
                                <div class="resource_card">
                                    <span class="tree_route">자재</span>
                                    <dl class="dl_box ris_item">
                                        <dt class="ris_dt">관급자재</dt>
                                        <dd class="ris_dd">
                                            <div class="dl_item">
                                                <button type="button" class="icon_btn more" style="float: right; margin-top: 10px; display:none;">
                                                    <i class="ic ic-plus"></i>
                                                    <span class="tooltip">추가</span>
                                                </button>
                                                <ul class="ul_list _dash mtrl-govsply" style="float: left; width: 230px;">
                                                    <!-- JS로 li 추가됨 -->
                                                </ul>
                                            </div>
                                        </dd>
                                        <dt class="ris_dt">사급자재</dt>
                                        <dd class="ris_dd">
                                            <div class="dl_item">
                                                <button type="button" class="icon_btn more" style="float: right; margin-top: 10px; display:none;">
                                                    <i class="ic ic-plus"></i>
                                                    <span class="tooltip">추가</span>
                                                </button>
                                                <ul class="ul_list _dash mtrl" style="float: left; width: 230px;">
                                                    <!-- JS로 li 추가됨 -->
                                                </ul>
                                            </div>
                                        </dd>
                                    </dl>
                                </div>
                                <div class="resource_card">
                                    <span class="tree_route">장비</span>
                                    <dl class="dl_box ris_item">
                                        <dt class="ris_dt">장비</dt>
                                        <dd class="ris_dd">
                                            <div class="dl_item">
                                                <button type="button" class="icon_btn more" style="float: right; margin-top: 10px; display:none;">
                                                    <i class="ic ic-plus"></i>
                                                    <span class="tooltip">추가</span>
                                                </button>
                                                <ul class="ul_list _dash expnss" style="float: left; width: 230px;">
                                                    <!-- JS로 li 추가됨 -->
                                                </ul>
                                            </div>
                                        </dd>
                                    </dl>
                                </div>
                            </div>
                        </div>
                        <!-- 자원 E -->
                    </form>
                </div>
            </div>
        </article>

    </section>
{% include "page/construction/dailyreport/dailyreport_pic" %}
{% include "page/construction/dailyreport/dailyreport_material_renewal" %}
{% include "page/construction/dailyreport/dailyreport_labor_renewal" %}
{% include "page/construction/dailyreport/dailyreport_expenses_renewal" %}
{% endblock content %}
{% block footer_script %}
    <script src="/assets/js/construction/construction.js"></script>
    <script>
        var urlParams = new URLSearchParams(location.search);
        var cntrctNo = urlParams.get('cntrctNo');
        var rId = urlParams.get('rId');
        let drDt = '';
        let photoArr = new Array();
        let delArr = new Array();
        let uploadedPhotoArr = [];      // 모달에서 넘겨받을 photoArr
        let uploadedFileList = [];      // 모달에서 넘겨받을 File[]
        let todayList = [];             // 금일 액티비티 copy 에 사용될 변수
        let tomorrowList = [];          // 명일 액티비티 copy 에 사용될 변수
        let resourceForm = new Array();
        let addFlag = null;             // 자원 추가할 경우 어떤 자원인지 (자재(관급/사급), 인력(사무/현장)) 모달에 전달할 때 사용
        let displayMaterialList = [];   // 자재 부모페이지와 모달 데이터 동기화에 사용
        let displayLaborList = [];      // 인력 부모페이지와 모달 데이터 동기화에 사용
        let displayExpensesList = [];   // 장비 부모페이지와 모달 데이터 동기화에 사용

        let init = function () {

            $("#cancel").click(function () {
                window.location.href = "/construction/dailyreport"+`?pjtNo=${pjtInfo.pjtNo}&cntrctNo=${pjtInfo.cntrctNo}&_condition=init`;
                sessionStorage.setItem('cntrctNo', cntrctNo);
            });
            $("#edit").click(function () {
                window.location.href = "/construction/dailyreport/update?cntrctNo=" + cntrctNo + "&rId=" + rId+`&pjtNo=${pjtInfo.pjtNo}`;
            });
            $("#save").click(function () {
                saveDailyReport();
            });
            $("#addPhotoData").click(function () {
                $("#photoModal").show();
            });

            $("#dailyReportDate").change(function (e) {
                callJsonApi();
            });

            setTimeout(() => summary.init(), 500);
        };

        let summary = {
            //수정되기 전 원래 데이터들을 담아놓는 state
            summaryDetail :null,
            activityTodayDetail:null,
            activityNextDetail:null,
            mData:null,
            lData:null,
            eData:null,
            photoData:null,
            init: function () {
                this.read();
            },
            read: function () {

                var param = {
                    cntrctNo: cntrctNo
                    , dailyReportId: rId
                };

                $.ajax({
                    url: BASEPATH + 'dailyreport/dailyreport-detail',
                    method: 'POST',
                    dataType: 'json',
                    contentType: 'application/json; charset-utf-8',
                    data: JSON.stringify(param),
                    async: false,
                    success: function (response, status, xhr) {
                        Object.keys(response.details).forEach(key => {
                            summary[key] = response.details[key];
                        });
                        data = summary.summaryDetail;

                        if (data.dailyReportDate == "" && sType == "d") {
                            $("#dailyReportDate").hide();
                        } else {
                            $("#dailyReportDate").val(data.dailyReportDate);
                        }


                        $("#reportNo").val(gaiaCommon.decodeSafeText(data.reportNo));
                        $("#title").val(gaiaCommon.decodeSafeText(data.title));
                        $("#amWthr").val(data.amWthr);
                        $("#pmWthr").val(data.pmWthr);
                        $("#dlowstTmprtVal").val(data.dlowstTmprtVal);
                        $("#dtopTmprtVal").val(data.dtopTmprtVal);
                        $("#prcptRate").val(data.prcptRate);
                        $("#snowRate").val(data.snowRate);
                        $("#majorMatter").val(gaiaCommon.decodeSafeText(data.majorMatter));
                        $("#todayPlanBohalRate").val(data.todayPlanBohalRate || 0);
                        $("#todayArsltBohalRate").val(data.todayArsltBohalRate || 0);
                        $("#todayProcess").val(data.todayProcess || 0);
                        $("#acmltPlanBohalRate").val(data.acmltPlanBohalRate || 0);
                        $("#acmltArsltBohalRate").val(data.acmltArsltBohalRate || 0);
                        $("#acmltProcess").val(data.acmltProcess || 0);
                        $("#sftyWorkItem").val(gaiaCommon.decodeSafeText(data.sftyWorkItem));
                        $("#todayActivityContents").val(gaiaCommon.decodeSafeText(data.todayActivityContents));
                        $("#tomorrowActivityContents").val(gaiaCommon.decodeSafeText(data.tomorrowActivityContents));

                        // 승인/반려/승인요청인 경우 수정버튼 숨김
                        if(data.apprvlStats) {
                            $("#edit").hide();
                        } else {
                            $("#edit").show();
                        }

                        drDt = data.dailyReportDate;

                        // 액티비티 건 수
                        todayList = response.details.activityTodayDetail || [];
                        tomorrowList = response.details.activityNextDetail || [];

                        const todayCount = todayList.length || 0;
                        const tomorrowCount = tomorrowList.length || 0;

                        $("#todayActivityCount").text(todayCount + "개");
                        $("#tomorrowActivityCount").text(tomorrowCount + "개");

                        initResourceData();

                        photo.init(response.details.photoData);
                    },
                    error: function (xhr, status, error) {
                        console.error(status, error);
                        gaiaCommon.customAlert("{{ message('msg.060') }}");
                    }
                });
                gaiaCommon.LoadingOverlay('body', false);
            }
        }

        function splitResource(data) {
            const { lData = [], mData = [], eData = [] } = data;

            // 누적 저장용 배열
            const grouped = {
                ".ul_list._dash.lbr-field": [],       // 인력 - 현장시공
                ".ul_list._dash.lbr-admin": [],       // 인력 - 사무관리
                ".ul_list._dash.mtrl-govsply": [],    // 자재 - 관급
                ".ul_list._dash.mtrl": [],            // 자재 - 사급
                ".ul_list._dash.expnss": []           // 장비
            };

            // 인력
            lData.forEach(item => {
                if (item.rsce_tp_cd === "L") {
                    grouped[".ul_list._dash.lbr-field"].push(item);
                } else if (item.rsce_tp_cd === "LS") {
                    grouped[".ul_list._dash.lbr-admin"].push(item);
                }
            });

            // 자재
            mData.forEach(item => {
                if (item.govsply_mtrl_yn === "Y") {
                    grouped[".ul_list._dash.mtrl-govsply"].push(item);
                } else if (item.govsply_mtrl_yn === "N") {
                    grouped[".ul_list._dash.mtrl"].push(item);
                }
            });

            // 장비
            eData.forEach(item => {
                grouped[".ul_list._dash.expnss"].push(item);
            });

            // 자원 한번씩 렌더링
            Object.entries(grouped).forEach(([selector, items]) => {
                if (items.length > 0) {
                    renderResourceList(items, selector);
                    updateLaborCardBadge();
                }
            });

        }

        function callJsonApi() {
            gaiaCommon.LoadingOverlay('body', true);
            gaiaCommon.customAlert("{{ message('msg.dailyreport.001') }}");
            var formData = {
                pjtNo: pjtInfo.pjtNo
                , tm: $("#dailyReportDate").val().replaceAll("-", "")
            }

            $.ajax({
                url: '/api/util/kma-weather',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function (response) {
                    let kma = response.details.kma;

                    $("#amWthr").val(kma.am_wf);
                    $("#pmWthr").val(kma.pm_wf);
                    $("#dlowstTmprtVal").val(kma.ta_min);
                    $("#dtopTmprtVal").val(kma.ta_max);
                    $("#prcptRate").val(kma.rn_day);
                    $("#snowRate").val(kma.sd_max);
                },
                error: function (response) {
                    gaiaCommon.customAlert("{{ message('msg.construction.002') }}");
                    return false;
                },
                complete: function(){
                    gaiaCommon.LoadingOverlay('body', false);
                }
            });
        }

        // 이미지 슬라이더에 렌더링
        let photo = {
            init: function (data) {
                data.forEach(function (row, seq) {

                    let imagePath = `${row.file_disk_path}/${row.file_disk_nm}`;
                    imagePath = imagePath.replace(/^.*[\\/](upload[\\/].*)$/, '/$1');

                                    photoArr.push({
                                        file_no: row.file_no
                                        , sno: row.sno
                                        , seq: seq
                                        , activity_nm: row.activity_nm
                                        , activity_id: row.activity_id
                                        , titl_nm: row.titl_nm
                                        , dscrpt: row.dscrpt
                                        , shot_date: row.shot_date
                                        , base: imagePath
                                        , cnstty_pht_sno: row.cnstty_pht_sno
                                    });
                    let hid = "style='display:none;'"
                    if (sType == "e") {
                        hid = "";
                    }
                    $(".process_photo_list").slick('slickAdd',
                        `<div class="custom-slide" data-seq="${seq}">` +
                        `<input id="slick_` + row.cnstty_pht_sno + `" file_no="` + row.file_no + `" cnstty_pht_sno="` + row.sno + `" shot_date="` + row.shot_date + `" hidden>` +
                        `<dl class="dl_box p_photo">` +
                        `<dt class="item_dt">` +
                        `<label class="form_check">` +
                        `<input class="check_mark" type="checkbox" name="check" value="` + seq + `" ` + hid + `>` +
                        `<span class="check_label">` + (row.activity_id || '') + ` : ` + (row.activity_nm || '') + `</span>` +
                        `</label>` +
                        `</dt>` +
                        `<dd class="item_dd">` +
                        `<figure class="p_photo_info">` +
                        `<img src="${imagePath}" style="height:200px;">` +
                        `<figcaption>` +
                        `<p class="tit">` + row.titl_nm + `</p>` +
                        `<p class="desc">` + row.dscrpt + `</p>` +
                        `<p class="date">` + row.shot_date + `</p>` +
                        `</figcaption>` +
                        `</figure>` +
                        `</dd>` +
                        `</dl>` +
                        `</div>`
                    );
                });
            }
        }

        // 사용자가 추가한 이미지 슬라이더에 추가
        function setPhoto(seq) {
            var data = photoArr[seq];
            $(".process_photo_list").slick('slickAdd',
                `<div class="custom-slide" data-seq="${seq}">` +
                `<dl class="dl_box p_photo">` +
                `<dt class="item_dt">` +
                `<label class="form_check">` +
                `<input class="check_mark" type="checkbox" name="check" value="` + seq + `">` +
                `<span class="check_label">` + data.activity_nm + `</span>` +
                `</label>` +
                `</dt>` +
                `<dd class="item_dd">` +
                `<figure class="p_photo_info">` +
                `<img src="` + URL.createObjectURL(data.file)+ `" alt="Act 1 공정사진" style="height:200px;">` +
                `<figcaption>` +
                `<p class="tit">` + data.titl_nm + `</p>` +
                `<p class="desc">` + data.dscrpt + `</p>` +
                `<p class="date">` + data.shot_date + `</p>` +
                `</figcaption>` +
                `</figure>` +
                `</dd>` +
                `</dl>` +
                `</div>`
            );
        }

        function delPhoto() {
            const $slider = $(".process_photo_list");
            const $checked = $('input[name=check]:checked');

            if ($checked.length < 1) {
                gaiaCommon.customAlert("{{ message('msg.035') }}".replace('{0}', "{{ message('btn.002') }}"));
                return false;
            }

            // 역순 삭제 (slick 인덱스 꼬임 방지)
            $checked.get().reverse().forEach(el => {
                const $slide = $(el).closest('.custom-slide');
                const slickIndex = parseInt($slide.attr("data-slick-index"));
                const $input = $slide.find("input[file_no]");

                if (!isNaN(slickIndex)) {
                    $slider.slick('slickRemove', slickIndex);
                }

                if ($input.length && $input.attr("cnstty_pht_sno")) {
                    // 서버 저장된 사진
                    const sno = $input.attr("cnstty_pht_sno");

                    delArr.push({
                        cntrctNo: cntrctNo,
                        dailyReportId: rId,
                        cnsttyPhtSno: sno,
                        fileNo: $input.attr("file_no"),
                        sno: sno,
                        shotDate: $input.attr("shot_date")
                    });

                    // 배열 정리
                    photoArr = photoArr.filter(row => row.cnstty_pht_sno != sno);
                    uploadedPhotoArr = uploadedPhotoArr.filter(row => row.cnstty_pht_sno != sno);
                } else {
                    // 신규 추가(Blob) 사진 data-seq 활용
                    const seq = $slide.data("seq");

                    photoArr = photoArr.filter(row => row.seq != seq);
                    uploadedPhotoArr = uploadedPhotoArr.filter(row => row.seq != seq);
                }
            });

            $slider.slick('refresh');
            console.log('*** photoArr =', photoArr, 'delArr =', delArr);
        }

        // 이미지 업로드 모달에서 호출할 함수, 이미지 파일 전달 받음
        function receivePhotosFromModal(photoList, fileList) {
            // 서버 전달용
            uploadedPhotoArr.push(...photoList);
            uploadedFileList.push(...fileList);

            for (let i = 0; i < photoList.length; i++) {
                const photo = photoList[i];
                // const file = fileList[i];

                setPhoto(photo.seq);
            }
        }

        // 작업일지 저장, 이미지 파일 업로드 완료 후 보고서 저장해야 해서 async 처리함
        async function saveDailyReport() {
            try {
                gaiaCommon.LoadingOverlay('body', true);

                // 필수 입력값 검증
                const reportDate = $("#dailyReportDate").val().trim();
                const reportNo = $("#reportNo").val().trim();

                if (!reportDate) {
                    return handleValidationError("{{ message('msg.039') }}".replace('{0}', "{{ message('item.construction.002') }}"));
                }
                if (!reportNo) {
                    return handleValidationError("{{ message('msg.039') }}".replace('{0}', "{{ message('item.construction.001') }}"));
                }

                // 기본 폼 데이터
                const inputForm = $("#inputForm").serializeArray();
                inputForm.push({ name: 'cntrctNo', value: cntrctNo });
                inputForm.push({ name: 'todayActivityContents', value: $("#todayActivityContents").val() });
                inputForm.push({ name: 'tomorrowActivityContents', value: $("#tomorrowActivityContents").val() });
                if (rId) inputForm.push({ name: 'dailyReportId', value: rId });

                const formData = objectifyForm(inputForm);

                // 자원 데이터 동기화
                const resourceFormData = buildResourceFormData(resourceForm);
                console.log('*** resourceFormData = ',resourceFormData);
                formData['dailyReportResource'] = resourceFormData;

                // 파일 처리
                const { hasFileChanges, imgFile } = buildFileFormData(uploadedPhotoArr, uploadedFileList, delArr);

                // 파일 업로드
                if (hasFileChanges) {
                    await uploadReportFiles(imgFile);
                }

                await dailyReportAddOrUpdate(formData);
            } catch (err) {
                console.error("saveDailyReport error:", err);
                gaiaCommon.customAlert("저장 중 오류가 발생했습니다.");
          } finally {
                gaiaCommon.LoadingOverlay('body', false);
          }
        }

        // 유효성 오류 처리 공통
        function handleValidationError(msg) {
            gaiaCommon.customAlert(msg);
            gaiaCommon.LoadingOverlay('body', false);
            throw new Error("ValidationError");
        }

        // 파일 FormData
        function buildFileFormData(uploadedPhotoArr, uploadedFileList, delArr = []) {
            const imgFile = new FormData();
            const dataObj = [];

            (uploadedPhotoArr || []).forEach((photo, i) => {
                const file = uploadedFileList[i];
                dataObj.push({
                    cntrctNo,
                    dailyReportId: rId,
                    activityId: photo.activity_id,
                    dscrpt: photo.dscrpt,
                    seq: photo.seq,
                    shotDate: photo.shot_date?.replaceAll("-", ""),
                    titlNm: photo.titl_nm,
                    fileNm: photo.fileNm,
                    fileDiskNm: photo.fileDiskNm,
                    fileDiskPath: photo.fileDiskPath,
                    fileSize: photo.fileSize,
                    meta: photo.meta
                });
                if (file) imgFile.append("uploadFile", file);
            });

            imgFile.append("uploadData", JSON.stringify(dataObj));
            imgFile.append("deleteData", JSON.stringify(delArr));

            return { hasFileChanges: dataObj.length > 0 || delArr.length > 0, imgFile };
        }

        // 파일 업로드
        async function uploadReportFiles(imgFile) {
            return new Promise((resolve, reject) => {
                $.ajax({
                    url: BASEPATH + 'dailyreport/uploadFile',
                    type: 'POST',
                    processData: false,
                    contentType: false,
                    data: imgFile,
                    success: resolve,
                    error: reject
                });
            });
        }

        async function dailyReportAddOrUpdate(formData) {
            $.ajax({
                url: BASEPATH + 'dailyreport/update-dailyreport',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success(result) {
                    if (result.ok) {
                        if (result.details && result.details.resultMsg == "DuplicateReportNo") {
                            gaiaCommon.customAlert("중복된 보고서 번호입니다.");
                            return;
                        }
                        gaiaCommon.customAlert("{{ message('msg.034') }}");
                        window.location.href = "/construction/dailyreport/detail?cntrctNo=" + cntrctNo + "&rId=" + rId+`&pjtNo=${pjtInfo.pjtNo}`;

                    } else {
                        gaiaCommon.customAlert(result.message);
                    }
                },
                error() {
                    gaiaCommon.customAlert("{{ message('msg.045') }}");
                },
                complete() {
                    gaiaCommon.LoadingOverlay('body', false);
                }
            });
        }

        function objectifyForm(formArray) {
            //serialize data function`
            var returnArray = {};
            for (var i = 0; i < formArray.length; i++) {
                returnArray[formArray[i]['name']] = formArray[i]['value'];
            }
            return returnArray;
        }

        function buildResourceFormData(resourceForm) {
            const uiData = [];
            $(".ul_list._dash li").each(function () {
                const $li = $(this);

                const rsceCd   = String($li.attr("data-rsce-cd") || "");
                const total    = N($li.attr("data-total-qty"));
                const actual   = N($li.attr("data-actual-qty"));
                const acmtl    = N($li.attr("data-acmtl-qty"));
                const remndr   = N($li.attr("data-remndr-qty"));

                const ori      = N($li.attr("data-ori-qty"));
                const rsceTpCd = ($li.attr("data-rsce-tp-cd") || "").toUpperCase() || null;

                // 관급/사급(Y/N) 파생
                const govTxt   = String($li.attr("data-govsply_mtrl_txt") || "");
                const govYn    = govTxt === "관급자재" ? "Y" : (govTxt ? "N" : null);

                uiData.push({
                    rsce_cd: rsceCd,
                    rsce_tp_cd: rsceTpCd,
                    total_qty: total,
                    actual_qty: actual,
                    acmtl_qty: acmtl,
                    remndr_qty: remndr,
                    ori_qty: ori,
                    govsply_mtrl_yn: govYn,
                    manual_yn: $li.attr("data-manual-yn") ?? "N",
                    cbs_insert_yn: $li.attr("data-cbs-insert-yn") ?? "N",
                    rsce_nm: $li.attr("data-rsce-nm") ?? "",
                    spec_nm: $li.attr("data-spec-nm") ?? "",
                    unit: $li.attr("data-unit") ?? ""
                });
            });
            console.log('*** uiData = ',uiData);

            // 원본 복사
            const updated = JSON.parse(JSON.stringify(resourceForm || []));

            // 삭제 표시: 원본에 있는데 UI엔 없으면 dlt_yn = 'Y'
            updated.forEach(item => {
                const exists = uiData.some(ui => ui.rsce_cd === item.rsce_cd);
                if (!exists) {
                    item.dlt_yn = "Y";
                }
            });

            // 수정 반영: UI에 있는 항목은 수치/메타를 data-* 값으로 덮어씀
            uiData.forEach(ui => {
                const found = updated.find(it => it.rsce_cd === ui.rsce_cd);
                if (found) {
                    // 수정(덮어쓰기)
                    found.rsce_tp_cd      = ui.rsce_tp_cd ?? found.rsce_tp_cd ?? null;
                    found.total_qty       = N(ui.total_qty);
                    found.actual_qty      = N(ui.actual_qty);
                    found.acmtl_qty       = N(ui.acmtl_qty);
                    found.remndr_qty      = N(ui.remndr_qty);
                    found.ori_qty         = N(ui.ori_qty);
                    found.govsply_mtrl_yn = ui.govsply_mtrl_yn ?? found.govsply_mtrl_yn ?? null;
                    found.manual_yn       = ui.manual_yn ?? found.manual_yn ?? "N";
                    found.cbs_insert_yn   = ui.cbs_insert_yn ?? found.cbs_insert_yn ?? "N";
                    found.rsce_nm         = ui.rsce_nm ?? found.rsce_nm ?? "";
                    found.spec_nm         = ui.spec_nm ?? found.spec_nm ?? "";
                    found.unit            = ui.unit ?? found.unit ?? "";
                    // 살아있는 항목은 기본 N
                    if (found.dlt_yn !== "Y") found.dlt_yn = "N";
                }
            });
            console.log('*** updated=',updated);

            // 서버 전송용 필드 정제 (camelCase 매핑)
            const result = updated.map(item => ({
                cntrctNo: cntrctNo ?? null,
                dailyReportId: rId ?? null,
                rsceTpCd: item.rsce_tp_cd ?? null,
                rsceSno: item.rsce_sno ?? null,
                rsceCd: item.rsce_cd ?? null,
                totalQty: N(item.total_qty),
                planQty: N(item.plan_qty),
                actualQty: N(item.actual_qty),
                acmtlQty: N(item.acmtl_qty),
                remndrQty: N(item.remndr_qty),
                govsplyMtrlYn: item.govsply_mtrl_yn ?? null,
                mainRsceDsply: item.main_rsce_dsply ?? null,
                cntrctChgId: item.cntrct_chg_id ?? null,
                dltYn: item.dlt_yn ?? "N",
                manualYn: item.manual_yn ?? "N"
            }));

            return result;
        }

        // 안전한 숫자 변환
        function N(v) {
            if (v === null || v === undefined || v === '') return 0;
            const n = Number(String(v).replace(/,/g, '').trim());
            return isFinite(n) ? n : 0;
        }

        // 액티비티 복사 후 textarea에 붙여넣음
        function copyActivity(type) {
            const list = (type === "today")
                ? (todayList || [])
                : (tomorrowList || []);

            // 액티비티명 앞에 ▶ 붙임, newLine 함
            let text = list
                .map(item => `▶ ${item.activity_nm}`)
                .join("\n");


            // Clipboard API 사용 가능할 때(localhost 나 https만 지원)
            if (navigator.clipboard && navigator.clipboard.writeText) {
                navigator.clipboard.writeText(text)
                    .then(() => gaiaCommon.customAlert(
                        (type === "today" ? "금일" : "명일") + " Activity가 복사되었습니다."
                    ))
                    .catch(err => {
                        console.error("Clipboard error:", err);
                        fallbackCopy(text, type);
                    });
            }
            // 불가능할 경우
            else {
                fallbackCopy(text, type);
            }
        }

        // navigator.clipboard.writeText 대체하는 복사 기능
        function fallbackCopy(text, type) {
            const tempInput = document.createElement("textarea");
            tempInput.value = text;
            document.body.appendChild(tempInput);
            tempInput.select();
            try {
                const success = document.execCommand("copy");
                if (success) {
                    gaiaCommon.customAlert((type === "today" ? "금일" : "명일") + " Activity가 복사되었습니다.");
                } else {
                    gaiaCommon.customAlert("복사를 실패했습니다.");
                }
            } catch (err) {
                gaiaCommon.customAlert("브라우저가 복사를 지원하지 않습니다.");
                console.error(err);
            }
            document.body.removeChild(tempInput);
        }

        // 자원 카드에 자원 리스트 출력
        function renderResourceList(data, targetSelector) {
            const $list = $(targetSelector);
            $list.empty();
            data.forEach((item) => {
                const actualQty = Number(item.actual_qty) || 0;
                const acmtlQty = Number(item.acmtl_qty) || 0;
                const todayAcmtlQty = acmtlQty + actualQty; // 전일누계 + 금일수량

                // 자재(M), 장비(E)인 경우 규격(spec_nm) 표시
                const rsceTp = (item.rsce_tp_cd || '').substring(0, 1); // L, M, E 중 첫 글자
                const spec = item.spec_nm && item.spec_nm.trim() !== '' ? ` (${item.spec_nm})` : '';
                const nameWithSpec =
                    rsceTp === 'M' || rsceTp === 'E'
                        ? `${item.rsce_nm}${spec}`
                        : item.rsce_nm;

                const li = $(`
                    <li data-govsply-mtrl-txt="${item.govsply_mtrl_txt === 'Y' ? '관급자재' : '사급자재'}"
                        data-rsce-cd="${String(item.rsce_cd)}"
                        data-rsce-nm="${String(item.rsce_nm)}"
                        data-spec-nm="${String(item.spec_nm)}"
                        data-unit="${String(item.unit)}"
                        data-total-qty="${String(item.total_qty)}"
                        data-actual-qty="${String(item.actual_qty)}"
                        data-acmtl-qty="${String(item.acmtl_qty)}"
                        data-remndr-qty="${String(item.remndr_qty)}"
                        data-ori-qty="${String(item.ori_qty)}"
                        data-rsce-tp-cd="${String(item.rsce_tp_cd)}"
                        data-manual-yn="${String(item.manual_yn)}"
                        data-cbs-insert-yn="${String(item.cbs_insert_yn)}"
                    >
                        <span class="r_name">${nameWithSpec}</span>
                        (<span class="r_actual_qty">${item.actual_qty}</span> /
                        <span class="r_today_acmtl_qty">${todayAcmtlQty}</span>)
                    </li>
                `);

                $list.append(li);
            });
        }


        function extractListFromUl($ul) {
            const list = [];
                $ul.children('li').each(function () {
                    const $li = $(this);
                    list.push({
                        govsply_mtrl_txt: $li.attr('data-govsply-mtrl-txt') ?? '',
                        rsce_tp_cd:       ($li.attr('data-rsce-tp-cd')||'').toUpperCase(),
                        rsce_cd:          $li.attr('data-rsce-cd')   ?? '',
                        rsce_nm:          $li.attr('data-rsce-nm')   ?? '',
                        spec_nm:          $li.attr('data-spec-nm')   ?? '',
                        unit:             $li.attr('data-unit')      ?? '',
                        total_qty:        N($li.attr('data-total-qty')),
                        actual_qty:       N($li.attr('data-actual-qty')),
                        acmtl_qty:        N($li.attr('data-acmtl-qty') ?? $li.attr('data-ori-qty')),
                        remndr_qty:       N($li.attr('data-remndr-qty')),
                        ori_qty:          N($li.attr('data-ori-qty')),
                        manual_yn:        $li.attr('data-manual-yn') ?? 'Y',
                        cbs_insert_yn:    $li.attr('data-cbs-insert-yn') ?? 'N'
                    });
                });
            return list;
        }

        function updateLaborCardBadge() {
            // 두 리스트의 li 모두 합산
            const $items = $('#resourceDiv .ul_list.lbr-admin li, #resourceDiv .ul_list.lbr-field li');

            let sumActual = 0;
            let sumAcmtl  = 0;

            $items.each(function () {
                const $li = $(this);

                const actual = N($li.attr('data-actual-qty'));  // 금일수량
                const ori    = N($li.attr('data-ori-qty'));     // 전일누계

                sumActual += actual;
                sumAcmtl  += ori;
            });

            // 숫자를 2자리까지 반올림하고, 불필요한 0 제거
            const format = (num) => {
                return parseFloat(num.toFixed(2)).toString();
            };

            const actualFormatted = format(sumActual);
            const acmtlFormatted  = format(sumAcmtl);

            // 배지 갱신 (ID로 직접)
            $('#laborBadge').text(`(${actualFormatted}/${acmtlFormatted})`);
        }

        // 자원 데이터 세팅
        function initResourceData() {
            const param = {
                cntrctNo: cntrctNo,
                dailyReportId: rId
            };
            gaiaCommon.post(
                BASEPATH + 'dailyreport/dailyreport-today-resource',
                param,
                function (response) {
                    const details = (response && response.details) || {};
                    let todayResourceData = details.todayDailyReportResourceList || [];

                    // 자원 분리하여 렌더러 함수에 전달
                    const lData = [];
                    const mData = [];
                    const eData = [];

                    todayResourceData.forEach(item => {
                        const type = (item.rsce_tp_cd || '').substring(0, 1);
                        if (type === 'L') lData.push(item);
                        else if (type === 'M') mData.push(item);
                        else if (type === 'E') eData.push(item);
                    });

                    //
                    splitResource({ lData, mData, eData });

                    // 자원 서버 저장용(원본)
                    resourceForm = [...lData, ...mData, ...eData];
                },
                function (error) {
                    gaiaCommon.customAlert("{{ message('msg.060') }}");
                }
            );
        }

        // 총수량, 금일수량, 금일누계, 잔여 0일 경우 공백으로 치환
        function replaceZeroOrNegativeWithBlank(data) {
            const targetFields = ["total_qty", "actual_qty", "acmtl_qty", "remndr_qty"];

            return (data || []).map(item => {
                const newItem = { ...item };
                targetFields.forEach(field => {
                    const val = newItem[field];
                    if (typeof val === "number") {
                        if (val <= 0) { // 0보다 작거나 같으면 공백처리
                            newItem[field] = "";
                        } else {
                            // 소수점 2자리까지만 표시 (불필요한 0 제거)
                            newItem[field] = parseFloat(val.toFixed(2));
                        }
                    }
                });
                return newItem;
            });
        }

        // 자원 모달에서 사용: 소수점이 0으로 끝날경우 0 제거 + 0 이하 값은 공백
        function formatNumber(num) {
            // 문자열 가능성/콤마 제거 후 숫자화
            const n = Number(String(num ?? "").replace(/,/g, '').trim());

            // 유효하지 않은 값만 공백 반환
            if (!Number.isFinite(n)) return "";

            // 0이하 공백처리
            if (n <= 0) return "";

            const fixed = n.toFixed(2);
            const trimmed = fixed.replace(/\.?0+$/, "");
            return trimmed.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }

        // 자원 모달에서 사용: 계산하기 위해 숫자만 필터링
        function cleanNumber(v) {     // 계산/저장용
            if (v == null) return 0;
            const s = String(v).replace(/,/g, '').trim();   // 콤마 제거
            const n = parseFloat(s);
            return Number.isFinite(n) ? n : 0;
        }

        // 자원 모달에서 사용: 그리드에서 수량 입력란 커스텀
        function CustomQtyTextEditor(props) {
            const el = document.createElement('input');
            el.type = 'text';
            el.value = props?.value ?? "";

            return {
                getElement() {
                return el;
                },
                getValue() {
                    let result = el.value.replace(/[^0-9.-]/g, "");
                    if (result === "") return "";
                    const num = Number(result);
                    if (Number.isNaN(num)) return "";
                    return parseFloat(num.toFixed(2));
                },
                mounted() {
                    el.select();
                }
            };
        }

        // 자원 모달에서 사용: 난수 생성
        function generateGnrlexpnsCd() {
            let num = Math.floor(Math.random() * 1e9).toString().padStart(9, "0");
            return "C" + num;
        }

        $('#todayActivity').on('click', function () {
            window.location.href = "/construction/dailyreport-today-detail?cntrctNo=" + cntrctNo + "&rId=" + rId+`&pjtNo=${pjtInfo.pjtNo}` + "&drDt=" + drDt;
        });
        $('#tomorrowActivity').on('click', function () {
            window.location.href = "/construction/dailyreport-tomorrow-detail?cntrctNo=" + cntrctNo + "&rId=" + rId+`&pjtNo=${pjtInfo.pjtNo}` + "&drDt=" + drDt;
        });

        // 자원 리스트 옆에 쓰레기통 클릭할경우 자원 삭제
        $(document).on("click", ".ic-delete", function () {
          $(this).closest("li").remove();
        });


        $(document).on('click', '.icon_btn.more', function (e) {
            e.preventDefault();

            const $ul = $(this).closest('.dl_item').find('ul.ul_list').first();
            const ulClass = $ul.attr('class') || '';
            const list = extractListFromUl($ul);

            // 모달에 전달할 플래그, 자재(관급/사급) 인력(사무/현장) 분리해야 해서 필요
            if (ulClass.includes('mtrl-govsply')) addFlag = 'mtrlGovsply';
            else if (ulClass.includes('mtrl'))    addFlag = 'mtrlPrivate';
            else if (ulClass.includes('lbr-admin')) addFlag = 'lbrAdmin';
            else if (ulClass.includes('lbr-field')) addFlag = 'lbrField';
            else if (ulClass.includes('expnss'))    addFlag = 'expnss';

            // 부모파일 기준 전역 리스트 세팅 (섹션별 필터 적용)
            if (ulClass.includes('mtrl')) {
                displayMaterialList = list.slice();

                // 모달 호출
                initMaterialModal();
                initMaterialList();
                document.getElementById('materialModal').style.display = 'block';
                return;
            }

            if (ulClass.includes('lbr')) {
                displayLaborList = list.slice();

                initLaborModal();
                initLaborList();

                // 사무관리는 자원코드 추가하지 않음
                if (addFlag === 'lbrAdmin') {
                    $('#btnAddNewLaborRow').hide(); // 추가 버튼 제거
                } else if (addFlag === 'lbrField') {
                    $('#btnAddNewLaborRow').show();
                }
                document.getElementById('laborModal').style.display = 'block';
                return;
            }

            if (ulClass.includes('expnss')) {
                displayExpensesList = list.slice();

                // 모달 호출
                initExpensesModal();
                initExpensesList();
                document.getElementById('expensesModal').style.display = 'block';
                return;
            }
        });

        // 자원 모달에서 입력란에 입력하다가 그리드 외부 클릭하면 입력란 포커스 아웃
        $(document).on('click', function (e) {
            if (e.detail > 1) return; // 더블클릭 무시

            const needClose =
                $('.tui-grid-layer-editing').length &&
                !$(e.target).closest('.tui-grid-layer-editing, .tui-grid tbody tr').length;

            if (!needClose) return;

            const candidates = [
                materialGrid,
                materialListGrid,
                laborGrid,
                laborListGrid,
                expensesGrid,
                expensesListGrid,
            ];

            candidates.forEach(g => {
                if (!g) return;
                const fn = g.finishEditing;
                if (typeof fn === 'function') {
                    try {
                        // this 바인딩을 확실히 g로 고정
                        fn.call(g);
                    } catch (err) {
                        // 파괴되었거나 내부 상태 이상 시 무시
                        // console.debug('finishEditing failed', err);
                    }
                }
            });
        });

        $(document).ready(()=>{
            gaia.create({
                $init: function ($params) {
                    gaiaPortal.navMenuInit('M0401', "{{ message('item.construction.901') }}" + " " + "{{ message('btn.003') }}");
                    $("#menuDepth").append('<li class=\"breadcrumb_item\" name=\"new_item\">{{ message("item.construction.901") }} {{ message("btn.003") }}</li>');
                }
            });

            init();

            // Slick slide
            $('.process_photo_list').not('.slick-initialized').slick({
                arrows: true,
                prevArrow: $('.process_photo .prev'),
                nextArrow: $('.process_photo .next'),
                dots: true,
                infinite: false,
                slidesToShow: 4,
                slidesToScroll: 4,
                autoplay: false,
                speed: 1000,
                draggable: true
            });
        })
    </script>
{% endblock footer_script %}