{% extends 'layout/base_content' %}
{% block content %}

<section class="contents_wrap">

    <article class="conts_area">
        <div class="conts">
            <div class="conts_breadcrumb" style="display: none;">
                <h3 class="conts_tit">{{ message("item.com.018") }}</h3>
                <span class="selectbox">
					<select id="cntrctNo" disabled style="line-height:1.1;"></select>
				</span>
            </div>
            <!-- 메인 내용 시작 -->
            <div class="conts_form">

                <!-- Button - head -->
                <div class="toolbar sort_toolbar" style="font-size: var(--font-s); padding-left: 0; gap: unset;">
                    <div class="btn_group _outline" style="margin-bottom: 10px; display: none;">
                        <button type="button" class="btn" onclick="exportToExcel();">Excel</button>
                    </div>
                    <div class="btn_group _fill" style="margin-bottom: 10px;">
                        <button id="goback" type="button" class="btn">{{ message("btn.007") }}</button>
                    </div>
                    <div class="searchbox_wrap" style="margin: 0 0 10px 10px;">
                        <input type="text" name="searchText" class="searchText" placeholder="{{ message('item.projectcost.002') }}, {{ message('item.projectcost.003') }}" />
                        <button type="submit" class="icon_btn search_btn" style="cursor: pointer;">
                            <i class="ic ic-search"></i>
                            <span class="blind">
                                    {{ message("item.com.014") }}
                            </span>
                        </button>
                    </div>
                </div>
                <!-- Button - end -->

                <div class="grid" id="dataGrid">
                </div>
            </div>
            <!-- 메인 내용 끝 -->
        </div>
    </article>
</section>
{% endblock content %}

{% block footer_script %}
<style> .tui-grid-cell-header{white-space:break-spaces; } </style>
<script src="/assets/js/construction/construction.js"></script>
<script>
    //콤보박스 렌더러, 에디터

    // 페이지 사용 글로벌 변수
    var cntrctNo = null;                    // 계약 번호
    var gbl_currentMonth = null;            // 선택된 날짜
    var gbl_monthlyResources = null;        //
    var isAdmin = () => gaiaCommon.me.isAdmin();

    var init = function(){
        // 계약번호 변경 Event
        $("#cntrctNo").change(function(e){
            cntrctNo = e.target.value;
        });

        var param = { pjtNo: pjtNo };

        $.ajax({
            url: '/api/projectcost/contract/contract-list',
            method: 'POST',
            dataType: 'json',
            contentType: 'application/json; charset-utf-8',
            data: JSON.stringify(param),
            async: false,
            success: function(data, status, xhr){
                var list = data.details.contractList;

                if(list.length > 0) {
                    for(var i = 0; i < list.length; i++) {
                        var option = $("<option value="+list[i].cntrct_no+">["+list[i].cntrct_no+"] "+list[i].cntrct_nm+"</option>");
                        $('#cntrctNo').append(option);
                    }
                }

                if(cntrctNo){ $('#cntrctNo').val(cntrctNo).prop("selected", true); }
                else{ cntrctNo = $('#cntrctNo').val(); }

            },
            error: function (xhr, status, error) {
                console.error(status, error);
                gaiaCommon.customAlert("{{ message('msg.060') }}");
            }
        }).done(function() {
            monthlyDetailResource.init();
        });

    }


    let monthlyDetailResource = {
        init: function (...args) {
            let _this = this;
            let urlParams = new URLSearchParams(window.location.search);
            let param = {
                cntrctNo: urlParams.get('cntrctNo'),
                rsceTpCd: urlParams.get('rsceTpCd'),
                currentMonth: urlParams.get('currentMonth'),
                searchText: args[0],
            };

            $.ajax({
                url: BASEPATH + 'resource/detail/resource-monthly-list',
                method: 'POST',
                dataType: 'json',
                contentType: 'application/json; charset-utf-8',
                data: JSON.stringify(param),
                async: false,
                success: function(response, status, xhr){
                    //data = response.details.resourceList;
                    const activityList = response.details.resourceList.activityList;
                    const data = response.details.resourceList.data;

                    dataGrid.init(data);
                },
                error: function (xhr, status, error) {
                    console.error(status, error);
                    gaiaCommon.customAlert("{{ message('msg.060') }}");
                }
            });
        }
    }

    class resourceStarBox {
        constructor(props) {
            const el = document.createElement("div");
            this.el = el;
            this.render(props);
        }

        getElement(props) {
            return this.el;
        }

        render(props) {
            let row = props.grid.getRow(props.rowKey);

            let star = row['MAIN_RSCE_DSPLY'] === 'Y' ? 'ic-star-fill' : 'ic-star';
            this.el.innerHTML
                    = `<div style="display: flex;align-items: center;justify-content: center;"><i class='ic ${star}'></i></div>`;
        }
    }

    // Grid Set
    let dataGrid = {
        init: function(data) {
            let _this = this;

            if(!this.dataGrid){
                this.dataGrid = new tui.Grid({
                    el: document.getElementById('dataGrid'),
                    scrollX: true,
                    scrollY: true,
                    contextMenu: null,
                    bodyHeight: 600,
                    rowHeaders: [{
                        type: 'rowNum',
                        header: '-',
                        width: 50,
                        renderer: {
                            type:window.IconRenderer,
                            options:[{
                                type:(rowData)=>{
                                    return rowData['MAIN_RSCE_DSPLY'] === 'Y' ? 'starFill' : 'starEmpty';
                                },
                                isNoValue:true
                            }]
                        }
                    }],
                    header: {
                        height: 40,
                    },
                    columns : [
                        {header: '{{ message("item.construction.040") }}', name: 'rsceCd', width: 150, align:'center'},
                        {header: '{{ message("item.projectcost.002") }}', name: 'rsceNm', align:'left'},
                        {header: '{{ message("item.projectcost.003") }}', name: 'specNm', width: 250, align:'center'},
                        {header: '{{ message("item.projectcost.004") }}', name: 'unit', width: 60, align:'center', formatter: numberFormat},
                        {header: '{{ message("item.construction.203") }}', name: 'rsceQty', width: 80, align:'right', formatter: numberFormat},
                        {header: '{{ message("item.construction.204") }}', name: 'acmtlQty', width: 80, align:'right', formatter: numberFormat},
                        {header: '{{ message("item.com.047") }}', name: 'currentQty', width: 80, align:'right', formatter: numberFormat},
                        {header: '{{ message("item.construction.205") }}', name: 'remndrQty', width: 80, align:'right', formatter: numberFormat},
                        {name: 'ori_qty', hidden: true}
                    ]
                });

            }

            if (data) {
                this.dataGrid.resetData(data);
                //setTimeout(() => this.dataGrid.refreshLayout(), 10);
                // 2024-12-24 그리드 리사이징 추가
                setTimeout(() => {
                    refreshGrid(this.dataGrid);
                }, 100)
            }
        }
    }

    // EXCEL DOWNLOAD
    let exportToExcel = function () {
        const exportName = "{{ message('item.construction.903') }}";

        const options = {
            includeHiddenColumns: false,
            onlySelected: true,
            fileName: exportName,
        };

        dataGrid.dataGrid.export("xlsx", options);
    }

    // 0. Page load
    $(document).ready(()=>{
        gaia.create({
            $init: function ($params) {
                function setContentsTitle() {

                    let urlSearchParams = new URLSearchParams(window.location.search);
                    const month = new Date(urlSearchParams.get('currentMonth'));
                    const rsceTpCd = urlSearchParams.get('rsceTpCd');
                    const lang = getCookie('lang').substring(0, 2);
                    let title = null;

                    if (lang === 'ko') title = DateUtils.getCurrentDateTime('month_kor', month);
                    else title = DateUtils.getCurrentDateTime('month', month);

                    if (rsceTpCd === 'M') title += ` {{ message("item.construction.201") }} {{ message("btn.030") }}`;        // 자재 상세보기
                    else if (rsceTpCd === 'L') title += ` {{ message("item.construction.044") }} {{ message("btn.030") }}`;   // 인력 상세보기
                    else if (rsceTpCd === 'E') title += ` {{ message("item.construction.046") }} {{ message("btn.030") }}`;   // 장비 상세보기
                    else title += ` {{ message("item.construction.903") }} {{ message("btn.030") }}`;                         // 자원 투입 현황 상세보기
                    $('.conts_tit').text(title)
                    $("#conts_tit").show();
                    $("#cntrct_no_select").show();
                }


                // AS-IS
                // if($("body").attr('class') == "gaia"){
                //     //setContentsTitle();
                // }else if($("body").attr('class') == "cmis"){
                // 	cntrctNo = cNo;
                // }

                // 20241220 TO-BE
                if (isAdmin) {  // GAIA & CMIS 관리자 계정일 때
                    $('.conts_breadcrumb').show();
                } else {
                    cntrctNo = JSON.parse(localStorage.getItem('pageCommonData')).cntrctNo;
                }


                // pageNav 구성
                gaiaPortal.navMenuInit('M0403', `{{ message("item.construction.903") }} {{ message("btn.030") }}`);
                $("#menuDepth").append('<li class=\"breadcrumb_item\" name=\"new_item\">{{ message("item.construction.903") }} {{ message("btn.030") }}</li>');

                // 사용 되는 값 및 변수 초기화
                gbl_currentMonth = DateUtils.getCurrentDateTime('month');

                /******************
                 * EVENT BINDING
                 ******************/
                // Monthly, Daily 변경 Event
                $('#goback').click(function(e) {
                    history.back();
                });

                // SearchEvent - 검색 아이콘 클릭
                $('.search_btn').click(event => {
                    let searchText = $('.searchText').val();
                    monthlyDetailResource.init(searchText);
                });

                // SearchEvent - 검색 Input Enter
                $('.searchText').keydown(event => {
                    if (event.key === 'Enter') {
                        let searchText = $('.searchText').val();
                        monthlyDetailResource.init(searchText);
                    }
                });

                init();

                gaia.loaded = true;
            }
        });
    })

</script>
<script src="/webjars/jstree/jstree.min.js"></script>
<script src="/assets/js/tree.js"></script>
{% endblock footer_script %}