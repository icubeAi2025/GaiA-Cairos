{% block content %}
<div class="modal open">
    <div class="pop_box _sm">
        <div class="pop_header">
            <h3 class="pop_tit" id="check_cu_tit"></h3>
            <button type="button" class="icon_btn pop_close" onclick="popupCheck.close()">
                <i class="ic ic-close"></i>
                <span class="blind">창닫기</span>
            </button>
        </div>

        <div class="pop_body">
            <div class="form_box">
                <form id="dept-form">
                    <!-- row -->
                    <div class="row">
                        <div class="col">
                            <div class="form_label required">{{ message('item.quality.030') }}</div>
                            <div class="form_data">
                                <textarea id="chklstDscrpt" name="chklstDscrpt" class="maxlength"
                                    maxlength="1000"></textarea>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col merge3">
                            <div class="form_label required">{{ message('item.quality.031') }}</div>
                            <div class="form_data" style="justify-content: space-between;">
                                <span class="selectbox w-md" id="selectBox">
                                </span>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="pop_footer">
            <div class="btn_area jc_e">
                <button type="button" class="btn _outline" onclick="popupCheck.close()">{{ message('btn.007')
                    }}</button>
                <button type="button" class="btn _fill" id="addButton" onclick="popupCheck.save()">{{ message('btn.006')
                    }}</button>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% block footer_script %}
<script src="/assets/js/validation.js"></script>
<script>
    var popupCheck = {
        mode: "",
        popupWindow: null,
        init: function () {
            this.mode = check.mode;
            if (this.mode === "update") {
                this.load();
            }
            makeSelectBox(
                "d1fa8620-8324-4c83-b73e-56b2f46b79c2", "selectBox", "chklstTypeSelect"
            );

            $("#check_cu_tit").text("{{ message('item.quality.053') }}");
        },
        close: function () {
            $("#popupCheck").find("input[type='text'], textarea").val("");
            $("#popupCheck").css("display", "none");
            if (this.popupWindow) {
                this.popupWindow.close();
                this.popupWindow = null;
            }
        },
        save: function () {
            if (this.mode == "create") {
                this.create();
            } else if (this.mode == "update") {
                this.update();
            }
        },
        // 검측 체크 리스트 추가
        create: function () {
            var chklstDscrpt = $("#chklstDscrpt").val();

            let cntrctNoToUse = $("input[name='useYnGrid']:checked").val() === "Y" ? "CMIS" : cntrctNo;

            if (!chklstDscrpt) {
                gaiaCommon.customAlert("{{ message('msg.quality.023') }}"); // 검사 항목을 입력해주세요.
                $("#chklstDscrpt").focus();
                return;
            }
            var chklstTypeSelect = $("#chklstTypeSelect").val();
            if (!chklstTypeSelect) {
                gaiaCommon.customAlert("{{ message('msg.quality.024') }}"); // 검사 기준을 선택해주세요.
                $("#chklstTypeSelect").focus();
                return;
            }

            let param = {
                cntrctNo: cntrctNoToUse,
                cnsttyCd: check.obj.id,
                cnsttyNm: check.obj.text,
                cnsttyLvl: check.obj.data.level,
                upCnsttyCd: check.obj.parent,
                chklstDscrpt: $("#chklstDscrpt").val(),
                chklstBssCd: $("#chklstTypeSelect").val(),
            };

            gaiaCommon.LoadingOverlay('body', true);
            $.ajax({
                url: "/api/construction/qualityinspection/create/check",
                method: "POST",
                data: JSON.stringify(param),
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    gaiaCommon.LoadingOverlay('body', false);
                    gaiaCommon.customAlert("{{ message('msg.005') }}", function () {
                        popupCheck.close();
                        check.getGridData()
                    });
                },
                error: function (xhr, status, error) {
                    gaiaCommon.LoadingOverlay('body', false);
                    gaiaCommon.customAlert('{{ message("msg.045") }}');	// 저장에 실패 했습니다.
                },
            });
        },
        // 검측 체크 리스트 조회
        load: function () {
            let param = {
                cntrctNo: check.obj.data.cntrctNo,
                chklstId: check.gridcheck,
            };
            $.ajax({
                url: "/api/construction/qualityinspection/get/check",
                method: "POST",
                data: JSON.stringify(param),
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    const checkData = result.details.check;
                    $("#chklstDscrpt").val(gaiaCommon.decodeSafeText(checkData.chklstDscrpt));
                    $("#chklstTypeSelect").val(checkData.chklstBssCd);
                },
                error: function (xhr, status, error) {
                    console.error("Error occurred: " + error);
                }
            });
        },
        // 검측 체크 리스트 수정
        update: function () {
            var chklstDscrpt = $("#chklstDscrpt").val();
            if (!chklstDscrpt) {
                gaiaCommon.customAlert("{{ message('msg.quality.023') }}"); // 검사 항목을 입력해주세요.
                $("#chklstDscrpt").focus();
                return;
            }
            var chklstTypeSelect = $("#chklstTypeSelect").val();
            if (!chklstTypeSelect) {
                gaiaCommon.customAlert("{{ message('msg.quality.024') }}"); // 검사 기준을 선택해주세요.
                $("#chklstTypeSelect").focus();
                return;
            }
            let param = {
                cntrctNo: check.obj.data.cntrctNo,
                chklstId: check.gridcheck,
                chklstDscrpt: $("#chklstDscrpt").val(),
                chklstBssCd: $("#chklstTypeSelect").val(),
            };

            gaiaCommon.LoadingOverlay('body', true);
            $.ajax({
                url: "/api/construction/qualityinspection/update/check",
                method: "POST",
                data: JSON.stringify(param),
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    gaiaCommon.LoadingOverlay('body', false);
                    gaiaCommon.customAlert("{{ message('msg.007') }}", function () {
                        popupCheck.close();
                        check.getGridData()
                    });
                },
                error: function (xhr, status, error) {
                    gaiaCommon.LoadingOverlay('body', false);
                    gaiaCommon.customAlert('{{ message("msg.045") }}');	// 저장에 실패 했습니다.
                },
            });
        }
    }
    function makeSelectBox(cmnGrpCd, elementId, selectBoxId) {
        let requestData = {
            cmnGrpCd: cmnGrpCd,
            selectBoxId: selectBoxId,
            selectBoxNmType: "KOR",
            ckeckedValue: "",
            orderByCol: "",
            orderByType: "",
            initText: "=선택=",
            paramNm: "selectBox",
            funName: "",
            funParam: "this.value",
            funtype: "onchange",
        };

        $.ajax({
            url: "/api/util/make-selectBox",
            method: "POST",
            dataType: "json",
            xhrFields: { withCredentials: true },
            contentType: "application/json; charset=UTF-8",
            traditional: true,
            data: JSON.stringify([requestData]),
            success: function (data) {
                let returnMap = data.details.returnMap;
                let selectBoxElement = document.getElementById(elementId);
                selectBoxElement.innerHTML = returnMap["selectBox"];
            },
            error: function (xhr, status, error) {
                console.error("Error making select box:", status, error);
            },
        });
    }

    window.popupCheck = popupCheck;
</script>
{% endblock %}