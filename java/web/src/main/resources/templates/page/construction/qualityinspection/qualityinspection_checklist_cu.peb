{% extends header ? 'layout/base_content' : 'layout/base_popup' %}
{% block content %}
<article class="conts g-row">
    <div class="group">
        <div class="group" id="container"></div>
        <div class="btn_area s_default _outline" style="margin-top: 20px;">
            <button type="button" class="btn" onclick="closePage()">{{ message('btn.007') }}</button>
            <!-- 닫기 -->
            <button class="icon_btn" id="window-btn" onclick="newWindow()">
                <i class="fa-solid fa-up-right-from-square"></i>
                <span class="tooltip" style="position: absolute; z-index: 1000;">{{
                    message('item.com.017') }}</span>
            </button>
            <!-- 새창으로 열기 -->
        </div>
    </div>
    <div class="group" style="margin-top: 0;">
        <div class="s_conts ty1 conts">
            <div class="g-group g-col2 ty1">
                <!-- 트리 -->
                <article class="treeview_area g-row2 ty1">
                    <div class="treeview_search">
                        <!-- searchbox -->
                        <div class="searchbox_wrap">
                            <input type="text" name="treeKeyword" placeholder="{{ message('msg.004') }}"
                                onkeypress="if(event.keyCode == 13){checkListTree.search();}">
                            <button type="button" class="icon_btn search" onclick="checkListTree.search()">
                                <i class="ic ic-search"></i>
                                <span class="blind">공종명</span>
                            </button>
                        </div>
                    </div>
                    <div class="treeview_area" style="width: 350px; padding-top: 15px;">
                        <div class="treeview ty_pd0" id="jstree"></div>
                    </div>
                </article>

                <div class="conts_area">
                    <div class="conts_grid">
                        <h3 class="conts_tit">{{ message('item.quality.052') }}</h3>
                        <div class="item_group" role="group" aria-label="Basic radio group" id="grid_radio"
                            style="margin-bottom: 20px; display: none;">
                            <label class="form_check">
                                <input type="radio" id="common" name="useYnGrid" class="check_mark" value="Y" checked />
                                <span class="check_label">{{ message('item.quality.056') }}</span>
                            </label>
                            <label class="form_check">
                                <input type="radio" id="contract" name="useYnGrid" class="check_mark" value="N" />
                                <span class="check_label">{{ message('item.com.038') }}</span>
                            </label>
                        </div>
                        <div class="btn_area s_default">
                            <button type="button" class="btn _outline" id="deleteButton" onclick="work.deleteWork()">{{
                                message('btn.002') }}</button> <!-- 삭제 -->
                            <button type="button" class="btn _outline" id="updateButton" onclick="work.updateWork()">{{
                                message('btn.003') }}</button> <!-- 수정 -->
                            <button type="button" class="btn _point" id="subWorkAddButton" onclick="work.addWork()">{{
                                message('btn.055') }}</button> <!-- 하위 공종 추가 -->
                        </div>
                        <div class="form_box" style="margin-bottom: 30px;">
                            <!-- row -->
                            <div class="row cols2">
                                <div class="col">
                                    <div class="form_label">{{ message('item.quality.054') }}</div>
                                    <div class="form_data">
                                        <input type="text" id="workcode" name="workcode" required readonly>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="form_label">{{ message('item.quality.055') }}</div>
                                    <div class="form_data">
                                        <input type="text" id="workname" name="workname" required readonly>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <h3 class="conts_tit">{{ message('item.quality.053') }}</h3>
                        <div class="search_wrap" style="margin: 5px;">
                            <div class="searchbox_wrap">
                                <input type="text" id="searchInput" placeholder="검사항목" />
                                <button type="button" class="icon_btn search">
                                    <i class="ic ic-search"></i>
                                    <span class="blind">
                                        {{ message("btn.014") }} <!-- 검색 -->
                                    </span>
                                </button>
                            </div>
                        </div>
                        <div class="conts_grid" style="margin-top: 15px; margin-bottom: 15px;">
                            <div class="btn_area s_default" id="listButton">
                                <button type="button" class="btn _outline" id="deleteCheckButton"
                                    onclick="check.deleteCheck()">{{
                                    message('btn.002') }}</button> <!-- 삭제 -->
                                <button type="button" class="btn _outline" id="updateCheckButton"
                                    onclick="check.updateCheck()">{{
                                    message('btn.003') }}</button> <!-- 수정 -->
                                <button type="button" class="btn _point" onclick="check.addCheck()">{{
                                    message('btn.056') }}</button> <!-- 추가 -->
                            </div>

                            <div class="grid" id="checkGrid"></div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="popupWork" class="popup_overlay modal_base" style="display: none;">
        <!-- 팝업 내용 -->
    </div>
    <div id="popupCheck" class="popup_overlay modal_base" style="display: none;">
        <!-- 팝업 내용 -->
    </div>
</article>
{% endblock content %}
{% block footer_script %}
<style>
    .s_conts.ty1 .g-col2>* {
        padding: 2em 2em;
    }

    .treeview_search {
        padding: 0 1.5em 1.5em 1.5em;
    }
</style>
<script src="/webjars/jstree/jstree.min.js"></script>
<script>
    const urlParams = new URLSearchParams(location.search);
    var pjtNo;
    var type = urlParams.get('type');
    var cntrctNo = urlParams.get('cntrctNo')
    var gridData = [];

    $(function () {
        gaia.create({
            $init: function ($params) {
                init();
            }
        });
    });

    var init = function () {
        $(function () {
            pjtNo = pjtInfo.pjtNo;
            cntrctNo = pjtInfo.cntrctNo;

            var title = "{{ message('item.quality.051') }}"
            gaiaPortal.navMenuInit('M0404', title);
            $("#menuDepth").append(`<li class=\"breadcrumb_item\" id=\"depth_txt\">${title}</li>`);

            if (isGAIA() || gaiaCommon.me.info.admin) {
                $("#grid_radio").show();
                cntrctNo = $('#cntrctNo').val();
                loadContractList();
            } else {
                cntrctNo = pjtInfo.cntrctNo;
                check.grid();
                checkListTree.init('/api/construction/qualityinspection/checkList/treeList/contract?cntrctNo=' + cntrctNo + `&pjtNo=${pjtInfo.pjtNo}`);
            }
            if (!gaiaCommon.me.info.admin) {
                $("input[name='useYnGrid'][value='N']").prop("checked", true); // 슈퍼관리자 아닐 경우 '계약'
            }

            gaiaCommon.checkAuth("QUA_CHKL_C_01", () => {
                $("#popupWork").load("/construction/qualityinspection/work/modal", function () {
                    // 모달 콘텐츠 로드 후 필요시 기본 초기화
                    popupWork.mode = "create"; // 초기 기본값
                    popupWork.parent = null;
                    popupWork.obj = null;
                });
            });

            gaiaCommon.checkAuth("QUA_CHKL_C_01", () => {
                $("#popupCheck").load("/construction/qualityinspection/checklist/modal", function () {
                    popupCheck.mode = "create"; // 초기 기본값
                });
            });
        });

        if (type === 'd') {
            pjtNo = pjtInfo.pjtNo;
        } else {
            pjtNo = urlParams.get('pjtNo');
        }
        if (type === 'p') {
            $("#window-btn").hide();  // 버튼 숨기기
        }
        $('#listButton').hide();

        $(document).on("change", ("#cntrctNo"), function () {
            cntrctNo = $(this).val();
            checkListTree.clear();
            checkListTree.init();
            check.resetGridData();
            $("#workcode").val("");
            $("#workname").val("");

            $("input[name='useYnGrid'][value='Y']").prop("checked", true);
        });

        function loadContractList() {
            var param = {
                pjtNo: pjtNo
            };
            $.ajax({
                url: "/api/portal/select-cntrctList",
                method: "POST",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(param),
                success: function (data) {
                    var list = data.details.contractList;
                    var title = "{{ message('item.com.018') }}";

                    $("#cntrctNo").remove();
                    $("#cntrctChgNo").remove();

                    // 계약 코드 드롭다운 생성
                    $("#container").prepend(
                        `<div class='group'><h3 class='conts_tit'>${title}</h3>` +
                        "<div class='conts_form'><span class='selectbox'>" +
                        "<select name='cntrctNo' id='cntrctNo'></select></span></div></div>"
                    );

                    // 기존 옵션 제거
                    $("#cntrctNo").empty();

                    if (list.length > 0) {
                        list.forEach((contract) => {
                            $("#cntrctNo").append(
                                $("<option>")
                                    .val(contract.cntrct_no)
                                    .text(`${contract.cntrct_nm}`)
                            );
                        });

                        if (cntrctNo) {
                            $("#cntrctNo").val(cntrctNo);
                        } else {
                            $("#cntrctNo").val(list[0].cntrct_no);
                            cntrctNo = $("#cntrctNo").val();
                        }
                    } else {
                        gaiaCommon.customConfirm("{{ message('item.com.084') }}", "{{ message('msg.092') }}", "{{ message('msg.114') }}",
                            () => { window.location.replace(`/project/contractstatus?pjtNo=${pjtInfo.pjtNo}&cntrctNo=${pjtInfo.cntrctNo}`); },
                            () => {
                                window.location.replace(`/dashboard?pjtNo=${pjtInfo.pjtNo}&cntrctNo=${pjtInfo.cntrctNo}`);
                            });
                    }

                    check.grid();
                    checkListTree.init();
                },
            });
        }
    }
    var work = {    // 세부 공종 정보
        obj: "",
        parent: "",
        mode: "",
        addWork: function () {
            if (!this.parent) {
                gaiaCommon.customAlert("{{ message('msg.quality.015') }}");    // 추가할 공종을 선택해주세요.
                return;
            }

            this.mode = "create";

            gaiaCommon.checkAuth("QUA_CHKL_C_01", () => {
                $("#popupWork").css({ display: "flex" });

                popupWork.mode = this.mode;
                popupWork.parent = this.parent;
                popupWork.obj = this.obj;
                popupWork.init();
            });
            // $("#popupWork").css({ display: "flex" });

            // popupWork.mode = this.mode;
            // popupWork.parent = this.parent;
            // popupWork.obj = this.obj;
            // popupWork.init();
        },
        updateWork: function () {
            if (!this.obj || !this.parent) {
                gaiaCommon.customAlert("{{ message('msg.quality.016') }}"); // 수정할 공종을 선택해주세요.
                return;
            }

            this.mode = "update";
            gaiaCommon.checkAuth("QUA_CHKL_C_01", () => {
                $("#popupWork").css({ display: "flex" });

                popupWork.mode = this.mode;
                popupWork.parent = this.parent;
                popupWork.obj = this.obj;
                popupWork.init();
            });
            // $("#popupWork").css({ display: "flex" });

            // popupWork.mode = this.mode;
            // popupWork.parent = this.parent;
            // popupWork.obj = this.obj;
            // popupWork.init();
        },
        deleteWork: function () {
            console.log("obj:", work.obj)
            if (!this.obj || !this.parent) {
                gaiaCommon.customAlert("{{ message('msg.quality.017') }}"); // 삭제할 공종을 선택해주세요.
                return;
            }
            let param = {
                cntrctNo: work.obj.data.cntrctNo,
                chklstId: work.obj.data.chklstid
            };
            gaiaCommon.customConfirm("{{ message('item.quality.064') }}", "{{ message('item.quality.064') }}", "{{ message('msg.009') }}", () => {
                $.ajax({
                    url: "/api/construction/qualityinspection/delete/work",
                    method: "POST",
                    data: JSON.stringify(param),
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {
                        gaiaCommon.customAlert("{{ message('msg.006') }}"); // 삭제되었습니다.

                        const tree = $("#jstree").jstree(true);
                        const deletedNode = work.obj;
                        let parentId = deletedNode.parent;

                        // 트리에서 삭제된 노드 제거
                        if (tree && tree.get_node(deletedNode.id)) {
                            tree.delete_node(deletedNode.id);

                            // 부모 노드가 있을 경우 포커싱
                            while (parentId && !tree.get_node(parentId)) {
                                parentId = tree.get_parent(parentId); // 한 단계 위로
                            }

                            if (parentId) {
                                tree.deselect_all();
                                tree.select_node(parentId);
                            }
                        }

                        // 입력 필드 초기화
                        $("#workcode").val("");
                        $("#workname").val("");
                    },
                });
            });
        }
    }
    var check = {    // 검측 체크 리스트
        obj: "",
        parent: "",
        mode: "",
        gridcheck: "",
        grid: function () {
            const gridEl = document.getElementById('checkGrid');

            let _this = this;

            if (!this.checkGrid) {
                this.checkGrid = new tui.Grid({
                    el: document.getElementById('checkGrid'),
                    bodyHeight: 300,
                    scrollX: false,
                    scrollY: true,
                    contextMenu: null,
                    rowHeight: 'auto',
                    data: gridData,
                    rowHeaders: [
                        {
                            type: "checkbox",
                            header: `<input type="checkbox" id="checkAll" class="hidden-input" name="_checked"/>`,
                            width: 100,
                            renderer: {
                                type: window.IconRenderer,
                                options: [
                                    {
                                        type:"checkbox"
                                    },
                                    {
                                        type:"trash",
                                        url: `/api/construction/qualityinspection/delete/check/${cntrctNo}`,
                                        idField: "chklstId",
                                        keyName: "chklstIds",
                                        msgList: {
                                            confirmTit: "{{ message('item.quality.062') }}",  // 체크리스트 삭제
                                            confirmMsg: "{{ message('msg.009') }}",
                                            completeMsg: "{{ message('msg.006') }}"
                                        },
                                        condition:(rowData)=>{
                                            if (rowData.cntrctNo === 'CMIS' && !gaiaCommon.me.info.admin) {
                                                gaiaCommon.customAlert("공통 항목은 삭제할 수 없습니다.");
                                                return false;
                                            }
                                            return true;
                                        },
                                        success: function () {
                                            _this.getGridData();
                                            $('#searchInput').val("");
                                        }
                                    }
                                ],
                            },
                        },
                    ],
                    columns: [
                        {
                            header: "{{ message('item.app.035') }}",
                            name: "chklstSno",
                            align: 'center',
                            width: 80
                        },
                        {
                            header: "{{ message('item.quality.030') }}",
                            name: "chklstDscrpt",
                            formatter: function (item) {
                                return `<div style="white-space: pre-line; word-break: break-word;">${item.value}</div>`;
                            }
                        },
                        {
                            header: "{{ message('item.quality.031') }}",
                            name: "chklstBss",
                            width: 100
                        },
                        { header: "chklstId", name: "chklstId", hidden: true }
                    ],
                });
                this.checkGrid.on('check', function () {
                    const checkedRows = _this.checkGrid.getCheckedRows();
                });
            }
            // 검색
            $('.icon_btn.search').on('click', function () {
                const searchValue = $('#searchInput').val();
                let list = _this.getGridData(searchValue);
                if (list) {
                    _this.checkGrid.resetData(list);
                }
            });
            // 엔터키 검색
            $(document).ready(function () {
                $('#searchInput').on('keypress', function (event) {
                    if (event.which === 13) {
                        const searchValue = $('#searchInput').val();
                        let list = _this.getGridData(searchValue);
                        if (list) {
                            _this.checkGrid.resetData(list);
                        }
                    }
                });
            });
            this.checkGrid.on("errorResponse", function (ev) {
                const statusCode = ev.xhr.status;

                if (statusCode === 403) {
                    gaiaCommon.customAlert(SESSION_EXPIRED_MSG, () => { location.reload(); });
                } else {
                    console.error("데이터 요청 중 오류 발생:", ev.xhr.status, ev.xhr.statusText);
                }
            });
        },
        resetGridData: function () { // 데이터 초기화
            if (this.checkGrid) {
                this.checkGrid.resetData([]);
            }
        },
        getGridData: function (searchValue = '') {
            if (!this.checkGrid) {
                return;
            }
            let _this = this;
            const selectedUseYn = $("input[name='useYnGrid']:checked").val();

            const selectedCntrctNo = selectedUseYn === "Y"
                ? check.obj?.data?.cntrctNo // 공통용
                : cntrctNo;                 // 전역 변수 (계약별)

            let param = {
                cntrctNo: selectedCntrctNo,
                cnsttyCd: check.obj.id
            };

            // "common"일 경우에만 useType 설정
            if (selectedUseYn === "Y") {
                param.useType = "common";
            }

            if (searchValue) {
                param.searchValue = searchValue;
            }

            $.ajax({
                url: '/api/construction/qualityinspection/checkList/gridList',
                method: 'POST',
                dataType: 'json',
                contentType: 'application/json; charset-utf-8',
                data: JSON.stringify(param),
                async: false,
                success: function (response) {
                    let formattedData;
                    const data = response.details.gridList;
                    formattedData = data.map((item, index) => ({
                        chklstSno: index + 1,
                        chklstId: item.chklst_id,
                        chklstDscrpt: item.chklst_dscrpt,
                        chklstBss: item.cmn_cd_nm_krn,
                        cntrctNo: item.cntrct_no
                    }));
                    if (formattedData.length > 0) {
                        _this.checkGrid.resetData(formattedData);
                    } else {
                        _this.checkGrid.resetData([]);
                    }
                    gridData = formattedData;
                },
            });
        },
        addCheck: function () {
            if (!this.obj) {
                gaiaCommon.customAlert("{{ message('msg.quality.015') }}");    // 추가할 공종을 선택해주세요.
                return;
            }
            this.mode = "create";
            gaiaCommon.checkAuth("QUA_CHKL_C_01", () => {
                $("#popupCheck").css({ "display": "flex" });

                popupCheck.mode = this.mode;
                popupCheck.parent = this.parent;
                popupCheck.obj = this.obj;
                popupCheck.init();
            });
            // $("#popupCheck").css({ "display": "flex" });

            // popupCheck.mode = this.mode;
            // popupCheck.parent = this.parent;
            // popupCheck.obj = this.obj;
            // popupCheck.init();
        },
        updateCheck: function () {
            let checkListIds = [];
            let cmisCheck = '';
            $('#checkGrid input:checkbox[name=delete-item-check]:checked').each(function () {
                const rowKey = $(this).data('rowKey');
                const rowData = check.checkGrid.getRow(rowKey);

                const checkId = rowData.chklstId;
                cmisCheck = rowData.cntrctNo;
                checkListIds.push(checkId);
            });

            if (checkListIds.length === 0) {
                gaiaCommon.customAlert("{{ message('msg.contract.022') }}");    // 수정할 항목을 선택해주세요.
                return;
            }
            if (cmisCheck === 'CMIS' && !gaiaCommon.me.info.admin) {
                gaiaCommon.customAlert("공통 항목은 수정할 수 없습니다.");
                return;
            }
            if (checkListIds.length === 1) {
                check.gridcheck = checkListIds[0];
                check.mode = "update";

                gaiaCommon.checkAuth("QUA_CHKL_C_01", () => {
                    popupCheck.mode = this.mode;
                    popupCheck.parent = this.parent;
                    popupCheck.obj = this.obj;
                    popupCheck.init();

                    $("#popupCheck").css({ "display": "flex" });
                });

                // popupCheck.mode = this.mode;
                // popupCheck.parent = this.parent;
                // popupCheck.obj = this.obj;
                // popupCheck.init();

                // $("#popupCheck").css({ "display": "flex" });
            } else {
                gaiaCommon.customAlert("{{ message('msg.020') }}"); // 수정할 항목을 하나만 선택해주세요.
            }
        },
        deleteCheck: function () {
            let checkListIds = [];
            let cmisCheck = '';
            $('#checkGrid input:checkbox[name=delete-item-check]:checked').each(function () {
                const rowKey = $(this).data('rowKey');
                const rowData = check.checkGrid.getRow(rowKey);

                const checkId = rowData.chklstId;
                cmisCheck = rowData.cntrctNo;
                checkListIds.push(checkId);
            });
            if (checkListIds.length === 0) {
                gaiaCommon.customAlert("{{ message('msg.055') }}");    // 삭제할 항목을 선택해주세요.
                return;
            } else if (cmisCheck === 'CMIS' && !gaiaCommon.me.info.admin) {
                gaiaCommon.customAlert("공통 항목은 삭제할 수 없습니다.");
                return;
            } else {
                gaiaCommon.customConfirm("{{ message('item.quality.062') }}", "{{ message('item.quality.062') }}", "{{ message('msg.009') }}", () => {
                    $.ajax({
                        url: `/api/construction/qualityinspection/delete/check/${cmisCheck}`,
                        method: "POST",
                        data: JSON.stringify({ chklstIds: checkListIds }),
                        contentType: "application/json; charset=utf-8",
                        success: function (response) {
                            if (response.ok) {
                                gaiaCommon.customAlert("{{ message('msg.006') }}");
                                check.getGridData();
                            }
                        },
                    });
                });
            }
        }
    }
    var checkListTree = {
        obj: null,
        clear: function () {
            if (this.obj) {
                $("#jstree").jstree(true).destroy();
            }
            this.init();
        },
        search() {
            const keyword = $('input[name="treeKeyword"]').val();
            $("#jstree").jstree("search", keyword);

            $("#jstree").off("search.jstree").on("search.jstree", function (e, data) {
                if (data.nodes && data.nodes.length > 0) {
                    data.nodes.forEach(node => {
                        $("#jstree").jstree("open_node", node);
                    });
                }
            });
        },
        init: function (apiUrl) {
            // 기본 URL 설정
            let defaultUrl = '/api/construction/qualityinspection/checkList/treeList?cntrctNo=' + cntrctNo;
            let url = apiUrl || defaultUrl;

            this.obj = $("#jstree").jstree({
                core: {
                    data: function (obj, cb) {
                        gaiaCommon.get(url, {}, function (result) {
                            var data = [];
                            if (result.details?.treeList) { // treeList 데이터가 있을 때
                                result.details.treeList.forEach((item) => {
                                    console.log("treeData: ", item)
                                    data.push({
                                        id: item.id,
                                        parent: item.parent || "#",  // 부모가 없으면 루트로 설정
                                        text: item.text,
                                        data: { level: item.level, chklstid: item.chklstid, cntrctNo: item.cntrct_no },
                                        icon: 'fa-solid fa-caret-right'  // 아이콘 설정
                                    });
                                });
                                cb.call(obj, data);
                            }
                        });
                    },
                    check_callback: true,
                    themes: {
                        theme: "default",
                        dots: false,
                        responsive: false,
                        icons: false
                    }
                },
                plugins: ["search"],
                search: {
                    show_only_matches: false,
                    fuzzy: false,
                }
            });

            this.obj.on("select_node.jstree", function (e, data) {
                const nodeData = data.node.data;
                const isLevel1 = nodeData.level === 1;
                const isLevel3 = nodeData.level === 3;
                const isCMIS = nodeData.cntrctNo === "CMIS";
                const isNotAdmin = !gaiaCommon.me.info.admin;

                $("#workcode").val(gaiaCommon.decodeSafeText(data.node.id));
                $("#workname").val(gaiaCommon.decodeSafeText(data.node.text));

                // 기본 버튼 처리
                if (isLevel1) {
                    $('#deleteButton').hide();
                    $('#updateButton').hide();
                } else {
                    $('#deleteButton').show();
                    $('#updateButton').show();
                }

                $('#subWorkAddButton').toggle(!isLevel3);
                $('#listButton').toggle(isLevel3);

                // '공통' + 관리자아니면 버튼 숨김
                if (isCMIS && isNotAdmin) {
                    $('#deleteButton').hide();
                    $('#updateButton').hide();
                }

                console.log("공종정보: ", nodeData);

                $('.jstree-anchor').siblings('nav.item_opt').css('display', 'none');
                $('.jstree-anchor.jstree-clicked.current').siblings('nav.item_opt').css('display', 'contents');

                work.obj = data.node;
                work.parent = data.node.parent;

                check.obj = data.node;
                check.parent = data.node.parent;

                check.grid();
                check.getGridData();
            });
        }
    };

    function closePage() {
        if (type == "p") {
            window.open('', '_self').close();
        } else {
            window.location.href = "/construction/qualityinspection?" + `pjtNo=${pjtInfo.pjtNo}&cntrctNo=${cntrctNo}`;
        }
    };
    function newWindow() {
        const width = 1300;
        const height = 800;
        let left = Math.ceil((window.screen.width - width) / 2);
        left += window.screenLeft; // 듀얼 모니터일 때
        const top = Math.ceil((window.screen.height - height) / 2);

        window.open(`/construction/qualityinspection/checklist?type=p&pjtNo=${pjtNo}&cntrctNo=${cntrctNo}`, '_blank', `scrollbars=yes,resizable=yes,width=${width},height=${height},,left=${left},top=${top}`);
        window.history.back();
    }
    $(document).ready(function () {
        // 공통/계약
        $('input[name="useYnGrid"]').change(function () {
            let selectedValue = $('input[name="useYnGrid"]:checked').val();
            let newUrl = selectedValue === 'Y'
                ? '/api/construction/qualityinspection/checkList/treeList?cntrctNo=' + cntrctNo + `&pjtNo=${pjtInfo.pjtNo}`
                : '/api/construction/qualityinspection/checkList/treeList/contract?cntrctNo=' + cntrctNo + `&pjtNo=${pjtInfo.pjtNo}`;

            // 기존 트리 삭제 후 새로운 URL로 다시 로드
            $("#jstree").jstree(true).destroy();
            checkListTree.init(newUrl);
            // 체크리스트 초기화
            check.resetGridData();
        });
    });
</script>
{% endblock footer_script %}