{% extends 'layout/base_content' %}
{% block head %}
<style>
	.ic-sent-to-onoff:before,
	.ic-delete:before {
		cursor: pointer;
	}
</style>
{% endblock head %}
{% block content %}

<section class="contents_wrap">
	<article class="conts_area">
		<div class="conts">

			<div class="conts_form">
				<span class="selectbox" id="cntrct_no_select" hidden>
				</span>
				<div class="btn_area s_default _outline">
					{{ btnHtml | raw }}
					<button type="button" class="btn" style="display:none;">Excel</button>
				</div>
				<div class="grid" id="depositDataGrid">
				</div>
			</div>
		</div>
	</article>
</section>
{% endblock content %}

{% block footer_script %}
<style>
	.tui-grid-cell-header {
		white-space: break-spaces;
	}
</style>
<script src="/assets/js/projectcost/projectcost.js"></script>
<script>
	//콤보박스 렌더러, 에디터
	const isDelAuth = `{{ isDelAuth | raw }}` == 'true' ? true : false;
	var cntrctNo = null;
	tui.Grid.setLanguage('ko', {
		display: {
			noData: '데이터가 없습니다'
		}
	});

	var init = function () {
		gaiaCommon.LoadingOverlay('body', true);
		gaiaCommon.makeCntrctSelectBox(
			"#cntrct_no_select",
			() => {
				$(".btn_area").hide();
				deposit.init();
			},
			function initCb(selectedCntrctNo) { // 초기 콜백
				cntrctNo = selectedCntrctNo;
				setTimeout(() => deposit.init(), 100);
			},
			function chgCb(newCntrctNo) { // 변경 콜백
				cntrctNo = newCntrctNo;
				setTimeout(() => deposit.init(), 100);
			}
		);

		//$(document).on('click','#checkAll',function(){
		//$('.checkGroup').prop('checked', this.checked);
		//});


	}


	let deposit = {
		init: function (type) {
			let _this = this;

			let bodyHeight;

			if (gaiaCommon.me.isAdmin() || isGAIA()) {
				bodyHeight = window.innerHeight - 500;
			} else if (isCAIROS()) {
				bodyHeight = window.innerHeight - 420;
			}

			if (!_this.depositGrid) {
				_this.depositGrid = new tui.Grid({
					el: document.getElementById('depositDataGrid'),
					bodyHeight: bodyHeight,
					//minBodyHeight: 550,
					scrollX: true,
					scrollY: true,
					contextMenu: null,
					rowHeaders: [
						{
							type: 'checkbox',
							width: 100,
							renderer: {
								type: window.IconRenderer,
								options: [
									{
										type:'checkbox',
									},
									{
										type: 'trash',
										auth:isDelAuth,
										success:(rowData) => {
											delDeposit("r", rowData.ppaymny_sno, rowData.apprvl_stats, rowData.apprvl_stats_txt);
										}
									}
								]
							}
						},

					],
					header: {
						height: 120,
						complexColumns: [
							{
								header: '{{ message("item.projectcost.036") }}',
								name: 'cntrctMtrlTotal',
								childNames: ['ppaymny_amt', 'acmtl_ppaymny_amt', 'ppaymny_caclt_amt', 'ppaymny_remndr_amt']
							}
						],
					},
					columns: [
						{
							header: '{{ message("item.projectcost.033") }}', name: 'payprce_tmnum', allowMerging: true, align: 'center', resizable: true, width: 80,
							renderer: {
								type:window.IconRenderer,
								options:[{
									type:'newWindow',
									isHover:true,
									align:"right",
									absolute:true,
									success:(rowData) => {
										goLink("detail", rowData.ppaymny_sno);
									}
								}]
							}
						},
						{ header: '{{ message("item.app.040") }}', name: 'pay_type_txt', resizable: true, align: 'center', width: 80 },
						{
							header: '{{ message("item.projectcost.066") }}', name: 'ppaymny_amt', resizable: true, align: 'right', width: 150,
							formatter: numberFormat
						},
						{
							header: '{{ message("item.projectcost.067") }}', name: 'acmtl_ppaymny_amt', width: 150, align: 'right',
							formatter: numberFormat
						},
						{
							header: '{{ message("item.projectcost.036") }}\r\n{{ message("item.projectcost.068") }}', name: 'ppaymny_caclt_amt', width: 150, align: 'right',
							class: "multi-line-css",
							formatter: numberFormat
						},
						{
							header: '{{ message("item.projectcost.036") }}\r\n{{ message("item.projectcost.069") }}', name: 'ppaymny_remndr_amt', width: 150, align: 'right',
							class: "multi-line-css",
							formatter: numberFormat
						},
						{
							header: '{{ message("item.projectcost.070") }}', name: 'dfrcmpnst_amt', width: 150, align: 'right',
							formatter: numberFormat
						},
						{
							header: '{{ message("item.projectcost.071") }}', name: 'ocrnce_date', width: 100, align: 'center',
							formatter: dateFormat
						},
						{ header: '{{ message("item.projectcost.047") }}', name: 'apprvl_stats_txt', width: 80, align: 'center' },
						{ header: '{{ message("item.com.022") }}', name: 'rmrk', minWidth: 120, align: 'left' },
						{ name: 'payprce_sno', hidden: true },
						{ name: 'ppaymny_sno', hidden: true }

					]
				});
			}


			let list = this.read();

			if (list) {
				this.depositGrid.resetData(list);
				refreshGrid(this.depositGrid);
			}

			this.depositGrid.on("errorResponse", function (ev) {
				const statusCode = ev.xhr.status;

				if (statusCode === 403) {
					gaiaCommon.customAlert(SESSION_EXPIRED_MSG, () => { location.reload(); });
				} else {
					console.error("데이터 요청 중 오류 발생:", ev.xhr.status, ev.xhr.statusText);
				}
			});
		},
		read: function () {
			let _this = this;
			let data;
			let root;

			var param = {
				cntrctNo: cntrctNo
			};

			$.ajax({
				url: BASEPATH + 'deposit/deposit-list',
				method: 'POST',
				dataType: 'json',
				contentType: 'application/json; charset-utf-8',
				data: JSON.stringify(param),
				async: false,
				success: function (response, status, xhr) {
					data = response.details.depositList;
					if (data.length > 0) {

					} else {
						_this.depositGrid.resetData([]);
					}
					_this.depositGrid.findRows(gd => gd.rowtype === "ori").forEach(row => _this.depositGrid.addRowClassName(row.rowKey, "cell-BizON"));
				}
			});
			gaiaCommon.LoadingOverlay('body', false);
			return data;
		},

	}

	function goLink(type, sno) {
		const checkedRows = deposit.depositGrid.getCheckedRows();
		if (type == "del") {
			if (checkedRows.length < 1) {
				gaiaCommon.customAlert("{{ message('msg.035') }}".replace('{0}', "{{ message('btn.002') }}"));
				return false;
			}

			delDeposit("b");
		}

		if (type == "edit") {
			if (checkedRows.length < 1) {
				gaiaCommon.customAlert("{{ message('msg.035') }}".replace('{0}', "{{ message('btn.003') }}"));
				return false;
			}
			if (checkedRows.length > 1) {
				gaiaCommon.customAlert("{{ message('msg.036') }}".replace('{0}', "{{ message('btn.003') }}"));
				return false;
			}

			if (checkedRows[0].apprvl_stats == "A" || checkedRows[0].apprvl_stats == "E") {
				// 승인요청, 승인 상태 수정 불가
				gaiaCommon.customAlert("{{ message('msg.construction.001') }}".replace('{0}', checkedRows[0].apprvl_stats_txt).replace('{1}', "{{ message('btn.003') }}"));
				return false;
			} else {
				window.location.href = "/projectcost/deposit/detail?type=d&sType=e&cntrctNo=" + $("#cntrctNo").val() + "&sNo=" + checkedRows[0].ppaymny_sno + `&pjtNo=${pjtInfo.pjtNo}`;
			}
		}

		if (type == "add") {
			window.location.href = "/projectcost/deposit/detail?type=d&sType=a&cntrctNo=" + $("#cntrctNo").val() + `&pjtNo=${pjtInfo.pjtNo}`;
		}
		if (type == "detail") {
			window.location.href = "/projectcost/deposit/detail?type=d&sType=d&cntrctNo=" + $("#cntrctNo").val() + "&sNo=" + sno + `&pjtNo=${pjtInfo.pjtNo}`;
		}
		if (type == "history") {
			window.location.href = "/projectcost/deposit/history?cntrctNo=" + $("#cntrctNo").val() + "&sNo=" + sno + "&id=" + id + "&dt=" + dt + `&pjtNo=${pjtInfo.pjtNo}`;
		}
	}

	function delDeposit(type, sno, stats, stats_txt) {
		gaiaCommon.customConfirm("{{ message('item.com.005') }}", "{{ message('msg.009') }}", "{{ message('msg.009') }}", function () {
			let formData = []; // 체크된 행의 id 정보 가져오기
			if (type == "r") {
				if (stats == "A" || stats == "E") {
					// 승인요청, 승인 상태 삭제 불가
					gaiaCommon.customAlert("{{ message('msg.construction.001') }}".replace('{0}', stats_txt).replace('{1}', "{{ message('btn.002') }}"));
					return false;
				} else {
					formData.push({ cntrctNo: $("#cntrctNo").val(), ppaymnySno: sno });
				}
			} else if (type == "b") {
				const checkedRows = deposit.depositGrid.getCheckedRows();

				if (checkedRows.length === 0) {
					gaiaCommon.customAlert("{{ message('msg.035') }}".replace('{0}', "{{ message('btn.002') }}"));
					return false;
				}

				// 하나라도 A/E 상태가 있으면 전체 삭제 불가
				const invalidRow = checkedRows.find(row => row.apprvl_stats === "A" || row.apprvl_stats === "E");
				if (invalidRow) {
					gaiaCommon.customAlert(
						"{{ message('msg.construction.001') }}"
							.replace('{0}', invalidRow.apprvl_stats_txt)
							.replace('{1}', "{{ message('btn.002') }}")
					);
					return false;
				}

				// 전부 삭제 가능한 상태일 때만 formData 생성
				checkedRows.forEach(row => {
					formData.push({ cntrctNo: $("#cntrctNo").val(), ppaymnySno: row.ppaymny_sno });
				});
			}

			if (formData.length < 1) {
				return false;
			}

			const data = {};
			data['depositList'] = formData;

			$.ajax({
				url: BASEPATH + 'deposit/del-deposit',
				method: 'POST',
				contentType: 'application/json',
				data: JSON.stringify(data),
				success(result) {
					gaiaCommon.customAlert("{{ message('msg.006') }}", function () {
						location.reload();
					});
				}
			});
		});
	}

	function chkStatus(stats_type, txt) {
		if (deposit.depositGrid.findRows(r => r._attributes.checked === true).length < 1) {
			gaiaCommon.customAlert("{{ message('msg.035') }}".replace('{0}', txt));
			return false;
		}

		gaiaCommon.customConfirm("{{ message('item.app.010') }}", "{{ message('msg.037') }}".replace('{0}', txt), "", function () {
			setStatus(stats_type, txt);
		});

	}
	function setStatus(stats_type, txt) {
		let formData = []; // 체크된 행의 id 정보 가져오기
		let chk = 0;
		let onChk = [];

		$("input:checkbox[name=chk]:checked").each(function (t) {
			onChk.push($(this).attr("sno"));
		});

		deposit.depositGrid.getData().forEach(function (v) {

			//승인요청
			if (onChk.includes(v.ppaymny_sno + "")) {
				if (stats_type == "E") {
					if (v.apprvl_stats == "E" || v.apprvl_stats == "A" || v.apprvl_stats == "R") {
						let temp_txt = "";
						if (v.apprvl_stats == "E") {
							temp_txt = "{{ message('btn.027') }}";
						} else if (v.apprvl_stats == "A") {
							temp_txt = "{{ message('btn.025') }}";
						} else if (v.apprvl_stats == "R") {
							temp_txt = "{{ message('btn.026') }}";
						}
						gaiaCommon.customAlert("{{ message('msg.projectcost.003') }} ".replace('{0}', temp_txt));
						chk += 1;
						return false;
					}
				}

				//승인, 반려
				if (stats_type == "A" || stats_type == "R") {
					if (v.apprvl_stats == 'null') {
						``
						gaiaCommon.customAlert("{{ message('msg.projectcost.004') }} ".replace('{0}', txt));
						chk += 1;
						return false;
					}
				}

				if (chk == 0) {
					formData.push({ cntrctNo: $("#cntrctNo").val(), ppaymnySno: v.ppaymny_sno, apprvlStats: stats_type });
				}
			}
		});

		if (chk < 1) {
			const data = {};
			data['depositList'] = formData;
			$.ajax({
				url: BASEPATH + 'deposit/update-status-deposit',
				method: 'POST',
				contentType: 'application/json',
				data: JSON.stringify(data),
				success(result) {
					if (result.ok) {
						gaiaCommon.customAlert("{{ message('msg.034') }}", function () {
							location.reload();
						});
					} else if (result.errorCode === '1000') {
						gaiaCommon.customAlert("{{ message('msg.monthlyreport.010') }}");
					}
				}
			});
		}

	}


	$(function () {
		gaia.create({
			$init: function ($params) {
				if (gaiaCommon.me.isAdmin() || isGAIA()) {
					$("#conts_tit").show();
					$("#cntrct_no_select").show();
				}

				gaiaPortal.navMenuInit('M0303', '{{ message("item.projectcost.904") }}');

				cntrctNo = sessionStorage.getItem('dCntrctNo');
				init();

				gaia.loaded = true;
			}
		});
	})

</script>
<script src="/webjars/jstree/jstree.min.js"></script>
<script src="/assets/js/tree.js"></script>
{% endblock footer_script %}