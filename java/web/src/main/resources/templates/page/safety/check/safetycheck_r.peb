{% extends header ? 'layout/base_content' : 'layout/base_popup' %}
{% block content %}
<section class="contents_wrap g-row">
	<article class="conts g-row">
		<div class="group">
			<div class="conts_form">
				<div class="btn_area s_default _outline">
					{{ btnHtml | raw }}
					<button type="button" class="btn" id="deleteButton" onclick="page.closePage()">{{
						message('btn.007')}}</button> <!-- 닫기 -->
					<button class="icon_btn" onclick="newWindow()" id="newWindow">
						<i class="fa-solid fa-up-right-from-square"></i>
						<span class="tooltip" style="position: absolute; z-index: 1000;">{{ message('item.com.017') }}
						</span>
					</button> <!-- 새창으로 열기 -->
				</div>
				<div class="s_conts" id="formBox">
					<span class="tree_route">{{ message('item.construction.012') }}</span>
					<div class="form_box">
						<!-- row -->
						<div class="row cols">
							<div class="col">
								<div class="form_label">{{ message('item.safety.009') }}</div>
								<div class="form_data">
									<input type="text" name="ispDocNo" class="maxlength" maxlength="100">
								</div>
							</div>
							<div class="col">
								<div class="form_label">{{ message('item.safety.002') }}</div>
								<div class="form_data">
									<span id="ispDt"></span>
								</div>
							</div>
						</div>

						<!-- row -->
						<div class="row cols">
							<div class="col">
								<div class="form_label">{{ message('item.com.060') }}</div>
								<div class="form_data">
									<input type="text" name="title" class="maxlength" maxlength="200">
								</div>
							</div>
							<div class="col">
								<div class="form_label">공종</div>
								<div class="form_data" style="justify-content: space-between;">
									<span id="cnsttyNm">
									</span>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="group">
			<div class="s_conts">
				<span class="tree_route">{{ message('item.safety.011') }}</span>
				<table class="table ta_c" id="inspectionListTable">
					<colgroup>
						<col width="100px">
						<col>
						<col>
						<col>
						<col>
						<col>
					</colgroup>
					<thead id="inspectionListHead">
					</thead>
					<tbody id="inspectionListBody">
					</tbody>
				</table>
			</div>
		</div>
		<div class="group">
			<div class="s_conts">
				<span class="tree_route">{{ message("item.quality.024") }}</span>


				<!-- S: Slick Slider -->
				<div class="process_photo">
					<div class="quality_photo_list" id="qualityPhotoList">
					</div>

					<div class="slick_nav">
						<div class="btn_area">
							<div class="btn_group _outline slick_indigator">
								<button type="button" class="btn icon_btn prev">
									<span class="blind">이전</span>
								</button>
								<button type="button" class="btn icon_btn next">
									<span class="blind">다음</span>
								</button>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div id="popup" class="popup_overlay modal_base" style="display: none;">
			<!-- 팝업 내용 -->
		</div>
	</article>
</section>
{% endblock content %}
{% block footer_script %}
<style>
	#formBox {
		margin-top: 1em;
	}

	textarea {
		width: 100%;
		height: 40px;
		overflow-y: auto;
		padding: 5px;
		box-sizing: border-box;
		min-height: 20px;
	}

	textarea:focus {
		overflow-y: auto;
	}
</style>
<script>
	var pjtNo;
	var urlParams = new URLSearchParams(location.search);
	var cntrctNo = urlParams.get('cntrctNo')
	var inspectionNo = urlParams.get('inspectionNo');
	const type = urlParams.get('type')

	var workType = urlParams.get('workType')

	$(function () {
		gaia.create({
			$init: function ($params) {
				page.init();
			}
		});
	});

	var page = {
		init: function () {
			if (type === 'p') {
				$("#newWindow").hide();
			}

			pjtNo = pjtInfo.pjtNo;

			$(function () {
				var title = '{{ message("item.safety.020") }}'
				gaiaPortal.navMenuInit('M1001', title);
				$("#menuDepth").append(`<li class=\"breadcrumb_item\" id=\"depth_txt\">${title}</li>`);

				page.getSafety();
			});

			// Slick slide
			$('.quality_photo_list').not('.slick-initialized').slick({
				arrows: true,
				prevArrow: $('.process_photo .prev'),
				nextArrow: $('.process_photo .next'),
				dots: true,
				infinite: false,
				slidesToShow: 4,
				slidesToScroll: 4,
				autoplay: false,
				speed: 1000,
				draggable: true
			});

			$("#formBox").addClass("readonly");
		},
		getSafety: function () {
			gaiaCommon.get("/api/safetymgmt/check/get/safety/" + cntrctNo + "/" + inspectionNo, {}, function (result) {
				console.log(result);

				let safetyData = result.details.safety;
				let safetyListData = result.details.safetyList;
				let photoList = result.details.photoList;
				let photoAttachments = result.details.photoAttachments;

				$('input[name="ispDocNo"]').val(gaiaCommon.decodeSafeText(safetyData.ispDocNo));  // 점검번호
				if (safetyData.ispDt) {	// 점검일
					const dt = safetyData.ispDt.split(' ')[0];
					$('#ispDt').text(dt);
				} else {
					$('#ispDt').text('');
				}
				$('input[name="title"]').val(gaiaCommon.decodeSafeText(safetyData.title));  // 제목

				$('#cnsttyNm').text(gaiaCommon.decodeSafeText(safetyData.cnsttyNm + " / " + safetyData.cnsttyNm1 + " / " + safetyData.upCnsttyNm2 + " / " + safetyData.cnsttyNm2));	// 공종

				// 안전점검 항목
				inspectionList.inspectionListData = safetyListData.map(item => ({
					ispLstId: item.ispLstId,
					ispLstNo: item.ispLstNo,
					ispSno: item.ispSno,
					cnsttyNm: item.cnsttyNm,
					ispLstDscrpt: gaiaCommon.decodeSafeText(item.ispDscrpt),
					gdFltyYn: item.gdFltyYn,
					imprvReq: gaiaCommon.decodeSafeText(item.imprvReq),
				}));

				// 사진 데이터 처리
				if (photoList && photoList.length > 0) {
					photoList.forEach(function (photoData) {
						let attachedFile = photoAttachments.find(function (file) {
							return file.fileNo === photoData.atchFileNo && file.sno === photoData.phtSno;
						});

						if (attachedFile) {
							photoData.fileDiskPath = attachedFile.fileDiskPath;
							photoData.fileDiskNm = attachedFile.fileDiskNm;
							photoData.sno = attachedFile.sno;
						}
					});
					photo.init(photoList);
				}

				// inspectionListData를 화면에 렌더링
				inspectionList.addInspectionList();
			})
		},
		updateSafety: function () {
			// 점검결과작성문서가 존재하고 반려 상태가 아닐 경우 수정 불가
			// if (repApDocId && apprvlStats !== "반려") {
			// 	gaiaCommon.customAlert("처리중인 항목은 수정할 수 없습니다");
			// 	return;
			// }

			// 수정 페이지로 이동  
			if (type === 'p') { // 창화면인 상태
				window.location.href = `/safetymgmt/check/add?type=p&mode=update&cntrctNo=${cntrctNo}&inspectionNo=${inspectionNo}&workType=${workType}&pjtNo=${pjtInfo.pjtNo}`;
			} else {
				window.location.href = `/safetymgmt/check/add?type=d&mode=update&cntrctNo=${cntrctNo}&inspectionNo=${inspectionNo}&workType=${workType}&pjtNo=${pjtInfo.pjtNo}`;
			}
		},
		closePage: function () {
			if (type === 'p') {
				window.close();
			} else {
				if (type) {
					window.location.href = `/safetymgmt/check?cntrctNo=${pjtInfo.cntrctNo}&pjtNo=${pjtInfo.pjtNo}&returnCntrctNo=${cntrctNo}&_condition=init`;
				} else {
					window.history.back();
				}
			}
		},
	}

	let inspectionList = {
		inspectionListData: [],
		addInspectionList: function () {
			const thead = document.getElementById('inspectionListHead');
			const tbody = document.getElementById('inspectionListBody');

			thead.innerHTML = `
				<tr>
					<th style="width: 5%;">{{ message('item.app.035') }}</th>
					<th style="width: 15%;">{{ message('item.progressstatus.010') }}</th>
					<th style="width: 45%;">{{ message('item.safety.017') }}</th>
					<th style="width: 10%;">{{ message('item.safety.012') }}</th>
					<th style="width: 25%;">{{ message('item.safety.013') }}</th>
				</tr>
			`;
			tbody.innerHTML = '';

			if (this.inspectionListData.length === 0) {
				$('#inspectionListBody').hide();
			} else {
				$('#inspectionListBody').show();
			}

			this.inspectionListData.sort((a, b) => a.ispLstNo - b.ispLstNo).forEach((item, index) => {
				const row = document.createElement('tr');

				// 번호
				const numCell = document.createElement('td');
				numCell.textContent = index + 1;
				row.appendChild(numCell);

				// 공종
				const cnsttyCell = document.createElement('td');
				cnsttyCell.classList.add('cnstty-nm');
				cnsttyCell.textContent = item.cnsttyNm;
				cnsttyCell.style.textAlign = 'center';
				row.appendChild(cnsttyCell);

				// 점검내용
				const itemCell = document.createElement('td');
				itemCell.classList.add('lst-dscrpt');
				itemCell.textContent = item.ispLstDscrpt;
				itemCell.style.textAlign = 'left';
				itemCell.style.whiteSpace = 'pre-line'; // 줄바꿈 반영
				row.appendChild(itemCell);

				// 양호/불량
				const checkCell = document.createElement('td');
				checkCell.classList.add('chklst-dscrpt');
				checkCell.style.textAlign = 'center';
				if (item.gdFltyYn === 0) {
					checkCell.textContent = "{{ message('item.safety.026') }}";
				} else if (item.gdFltyYn === 1) {
					checkCell.textContent = "{{ message('item.safety.027') }}";
				} else {
					checkCell.textContent = "";
				}
				row.appendChild(checkCell);

				// 개선요망사항
				const improveCell = document.createElement('td');
				improveCell.classList.add('chklst-dscrpt');
				improveCell.textContent = item.imprvReq;
				improveCell.style.textAlign = 'left';
				improveCell.style.whiteSpace = 'pre-line';
				row.appendChild(improveCell);

				tbody.appendChild(row);
			});
		},
	}

	// 사진관련
	let photo = {
		photoArr: [],
		deleteSno: [],
		deletePhtSno: [],
		init: function (data) {
			// 사진순번으로 정렬
			data.sort((a, b) => a.phtSno - b.phtSno);

			data.forEach((row) => {
				let formattedDate = '';
				if (Array.isArray(row.shotDate)) {
					const [year, month, day] = row.shotDate;
					formattedDate = `${year}-${String(month).padStart(2, '0')}-${String(day).padStart(2, '0')}`;
				} else if (typeof row.shotDate === 'string') {
					formattedDate = row.shotDate.split('T')[0]; // ISO 형식일 경우
				}

				let webPath = row.fileDiskPath;

				// 백슬래시 경로 처리 (윈도우)
				if (webPath.includes('\\')) {
					webPath = webPath.replace(/^.*\\upload/, '/upload').replace(/\\/g, '/');
				} else {
					// 슬래시 경로 처리 (리눅스)
					webPath = webPath.replace(/^.*\/upload/, '/upload');
				}

				const imgSrc = `${webPath}/${row.fileDiskNm}`;

				$(".quality_photo_list").slick('slickAdd',
					`<div>` +
					`<dl class="dl_box p_photo">` +
					`<dt class="item_dt">` +
					`<label class="form_check">` +
					`<span class="check_label">` + row.titlNm + `</span>` +
					`</label>` +
					`</dt>` +
					`<dd class="item_dd">` +
					`<figure class="p_photo_info">` +
					`<img src="${imgSrc}" alt="${row.fileNm}" style="height:200px;">` +
					`<figcaption>` +
					`<p class="tit">` + row.titlNm + `</p>` +
					`<p class="desc">` + row.dscrpt + `</p>` +
					`<p class="date">` + formattedDate + `</p>` +
					`<input type="hidden" id="phtSno" value="` + row.phtSno + `">` +
					`<input type="hidden" id="sno" value="` + row.sno + `">` +
					`</figcaption>` +
					`</figure>` +
					`</dd>` +
					`</dl>` +
					`</div>`
				);
				this.photoArr.push(row);
			});
		},
	}
	function newWindow() {
		const width = 1300;
		const height = 800;
		let left = Math.ceil((window.screen.width - width) / 2);
		left += window.screenLeft; // 듀얼 모니터일 때
		const top = Math.ceil((window.screen.height - height) / 2);

		window.open(`/safetymgmt/check/inspection?type=p&cntrctNo=${cntrctNo}&inspectionNo=${inspectionNo}`, '_blank', `scrollbars=yes,resizable=yes,width=${width},height=${height},left=${left},top=${top}`);
		window.history.back();
	}
</script>
{% endblock footer_script %}