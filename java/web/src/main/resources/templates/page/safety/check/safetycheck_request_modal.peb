<div class="modal open">
    <div class="pop_box _lg">
        <div class="pop_header">
            <h5 class="pop_tit" id="code_cu_tit">사용자 선택</h5>
            <button type="button" class="icon_btn pop_close" onclick="popup.close()">
                <i class="ic ic-close"></i>
                <span class="blind">{{ message('item.com.038') }}</span>
            </button>
        </div>
        <div class="pop_body">
            <div class="group">
                <div class="conts_grid">
                    <!-- S: search wrap ---------------------------------------------- -->
                    <div class="toolbar">
                        <div class="search_wrap">
                            <div class="searchbox_wrap">
                                <input type="text" id="searchValue" placeholder='이름 및 공종' />
                                <button type="button" class="icon_btn search">
                                    <i class="ic ic-search"></i>
                                    <span class="blind">
                                        {{ message("item.com.014") }}
                                    </span>
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="grid" id="construction-grid">
                    </div>
                </div>
            </div>


        </div>
        <input type="hidden" id="codeCheck" value="true">
        <div class="pop_footer">
            <div class="btn_area jc_e">
                <button type="button" class="btn _outline" onclick="popup.close()">{{ message('btn.007') }}</button>
                <!-- 닫기 -->
                <button type="button" class="btn _fill" id="action-button" onclick="popup.save()">
                    점검결과작성 요청
                </button>
            </div>
        </div>
    </div>
</div>
<style>
    .pop_box._lg {
        width: 40rem;
    }
</style>
<script>
    var selectedCnsttyCdNm = null;
    var selectedInspectionNo = null;

    var popup = {
        init: function (cnsttyCdNm, inspectionNo) {
            selectedCnsttyCdNm = cnsttyCdNm;
            selectedInspectionNo = inspectionNo;

            $("#searchValue").val(""); // 검색창 초기화
            constructionGrid.init();
            constructionGrid.getData(); // 초기 데이터 로드
        },
        close: function () {
            this.reset(); // 닫을 때 초기화
            $("#popup").css("display", "none");
            selectedCnsttyCdNm = null;
            selectedInspectionNo = null;   // 전역 변수 초기화
        },
        save: function () {
            const rows = constructionGrid.constructionGrid.getData();
            let selectedRow = null;

            $('#construction-grid input[type="checkbox"].check_mark').each(function (index) {
                if ($(this).prop('checked')) {
                    selectedRow = rows[index];
                    return false; // 반복 중단
                }
            });

            if (!selectedRow) {
                gaiaCommon.customAlert("요청을 보낼 사용자를 선택해주세요.");
                return;
            }

            if (selectedInspectionNo) {
                selectedRow.inspectionNo = selectedInspectionNo;
            }

            gaiaCommon.LoadingOverlay('body', true);
            $.ajax({
                url: '/api/safetymgmt/check/report/safety',
                method: 'POST',
                processData: false,
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(selectedRow),
                success: function (response) {
                    if (response.ok) {
                        gaiaCommon.LoadingOverlay('body', false);
                        gaiaCommon.customAlert("요청이 완료되었습니다.");
                        popup.reset(); // 저장 시 초기화
                        $("#popup").css("display", "none");
                        selectedCnsttyCdNm = null;
                        selectedInspectionNo = null;   // 전역 변수 초기화
                        $('#searchInput').val(""); // 검색 초기화
                        safetyGrid.getData('');


                    }
                },
                error: function (xhr, status, error) {
                    gaiaCommon.LoadingOverlay('body', false);
                    gaiaCommon.customAlert('요청이 실패했습니다.');
                },
            })
        },
        reset: function () {
            $("#searchValue").val("");
            if (constructionGrid.constructionGrid) {
                constructionGrid.constructionGrid.clear();
            }
        },
    }
    var constructionGrid = {
        init: function () {
            let _this = this;

            if (_this.constructionGrid) {
                _this.constructionGrid.destroy();
                _this.constructionGrid = null;
            }

            if (!this.constructionGrid) {
                this.constructionGrid = new tui.Grid({
                    el: document.getElementById('construction-grid'),
                    bodyHeight: 200,
                    rowHeight: 40,
                    headerHeight: 40,
                    scrollX: false,
                    scrollY: true,
                    columns: [
                        {
                            header: '', // 이름
                            name: '', // 사용자명
                            formatter: function ({ row }) {
                                const isChecked = row.workNm?.trim() === selectedCnsttyCdNm?.trim();
                                return createCheckbox(isChecked);
                            },
                            width: 50,
                            align: 'center',
                        },
                        {
                            header: '이름', // 이름
                            name: 'usrNm', // 사용자명
                            width: 200,
                            align: 'center',
                        },
                        {
                            header: '직책', // 직책
                            name: 'deptNm', // 직책명
                            align: 'center',
                        },
                        {
                            header: '공종', // 공종
                            name: 'workNm', // 공종명
                            align: 'center',
                        },
                    ],
                });
            }
            // 검색
            $('.icon_btn.search').on('click', function () {
                const searchValue = $('#searchInput').val();
                let list = _this.getData(searchValue);

                const searchData = {
                    searchText: searchValue,
                }

                gaia.setSearchData(searchData);

                if (list) {
                    _this.constructionGrid.resetData(list);
                }
            });
            // 엔터키 검색
            $(document).ready(function () {
                $('#searchValue').on('keypress', function (event) {
                    if (event.which === 13) {
                        const searchValue = $('#searchValue').val();

                        const searchData = {
                            searchText: searchValue,
                        };

                        gaia.setSearchData(searchData);

                        constructionGrid.getData(searchValue);
                    }
                });
            });
        },
        getData: function (searchValue = '') {
            if (!this.constructionGrid) {
                return;
            }
            let _this = this;
            const param = {
                cntrctNo: cntrctNo
            };
            if (searchValue && searchValue.trim() !== '') {
                param.searchValue = searchValue.trim();
            }

            $.ajax({
                url: '/api/construction/qualityinspection/get/supervisionList',
                method: 'POST',
                dataType: 'json',
                contentType: 'application/json; charset-utf-8',
                data: JSON.stringify(param),
                async: false,
                success: function (response) {
                    const list = response?.details?.supervisionList ?? [];

                    const gridData = list.map((row, idx) => ({
                        deptNo: row.dept_no,
                        deptNm: row.dept_nm,
                        pstnCd: row.pstn_cd,
                        workNm: row.work_nm,
                        usrId: row.usr_id,
                        usrNm: row.usr_nm,
                        emailAdrs: row.email_adrs,
                        cntrctNo: row.cntrct_no,
                        deptId: row.dept_id,
                        orgNo: row.org_no,
                        ratngCd: row.ratng_cd,
                    }));

                    _this.constructionGrid.resetData(gridData);
                },
                error: function (response) {
                    console.log(response);
                }
            });
        }
    }
    function createCheckbox(isChecked) {
        return `
                <div class="item_group" role="group" aria-label="Basic radio group" style="display: flex; justify-content: center; align-items: center; height: 100%;">
                    <label class="form_check">
                        <input type="checkbox" name="useYn"
                        class="check_mark" ${isChecked ? "checked" : ""} />
                    </label>
                </div>`;
    }
    $(document).off('change', '.check_mark').on('change', '.check_mark', function () {
        if ($(this).prop('checked')) {
            $('.check_mark').prop('checked', false);

            $(this).prop('checked', true);
        }
    });
</script>