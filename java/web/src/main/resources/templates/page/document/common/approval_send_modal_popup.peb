<!-- 결재 요청 팝업 -->
<div class="modal" id="approvalSendModal">
    <div class="pop_box _lg">
        <div class="pop_header">
            <h5 class="pop_tit" id="property_cu_tit">결재요청</h5>
            <div class="btn_area">
                <button type="button" class="icon_btn pop_close" onclick="approvalSendModal.close()">
                    <i class="ic ic-close"></i>
                    <span class="blind">{{ message('item.com.037') }}</span>
                </button>
            </div>
        </div>
        <div class="pop_body">
            <div class="form_box" style="display: flex; gap: 24px;">
                <!-- 입력 영역 -->
                <div style="flex:1">
                    <div class="row">
                        <div class="col">
                            <div class="form_label required">서식</div>
                            <div class="form_data" style="flex-wrap: initial; gap:1rem;">
                                <select name="apFormType" id="formGroup">
                                    <option value="">구분</option>
                                </select>
                                <select name="apFormType" id="frmNm" disabled>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <div class="form_label">첨부파일</div>
                            <div class="form_data">
                                <div class="attach-component" id="approval-fileAttach"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form_box" style="display: flex; gap: 24px;">
                <div class="sendApprovalForm" style="flex:1">
                </div>
            </div>
        </div>
        <div class="pop_footer">
            <div class="btn_area jc_e">
                <button type="button" class="btn _outline" onclick="approvalSendModal.close()">{{ message('btn.007') }}</button>
                <button type="button" class="btn _fill" id="addButton" onclick="approvalSendModal.send()">확인</button>
            </div>
        </div>
    </div>

    <div id="files" style="display: none">
    </div>
</div>
<script>
    $(document).ready(function(){
        approvalSendModal.init();
    })
    var approvalSendModal = {
        data:{},
        fileAttachComponent:null,
        init:() => {
            const getApFormListParam = {
                pjtNo:pjtInfo.pjtNo,
                cntrctNo:pjtInfo.cntrctNo,
                lang:getCookie("lang")
            }
            gaiaCommon.get(`/api/eapproval/select-apFormList`,getApFormListParam,(response)=>{
                if(response.ok){
                    const apFormList=response.details.apFormList;
                    approvalSendModal.data.apFormList = apFormList;
                    const columns = [
                        // {
                        //     label:"제목",
                        //     name:"title",
                        //     maxLength:20,
                        //     type:"text",
                        // },
                        // {
                        //     label:"내용",
                        //     name:"content",
                        //     maxLength:2000,
                        //     type:"textarea",
                        // }
                    ]
                    approvalSendModal.data.columns = columns;

                    const sendApprovalForm = document.querySelector('.sendApprovalForm');
                    const parsedData = {};
                    for(const apForm of apFormList){
                        if(!Object.keys(parsedData).includes(apForm.frmGroup)){
                            parsedData[apForm.frmGroup] = []
                            parsedData[apForm.frmGroup].push(apForm)
                        }
                        else{
                            parsedData[apForm.frmGroup].push(apForm);
                        }
                    }

                    const frmGroupList = Object.keys(parsedData);
                    approvalSendModal.data.frmGroupList = frmGroupList;
                    if(!frmGroupList.includes("공문")){
                        gaiaCommon.customAlert("공문 양식이 존재하지 않습니다.",()=>{
                        },{timeout:2500});

                    }

                    const frmGroupSelectTag = document.querySelector("#formGroup")
                    const frmNmSelectTag = document.querySelector("#frmNm");

                    for(const formGroup of frmGroupList){
                        if(formGroup == "공문"){
                            const optionTag = document.createElement("option");
                            optionTag.textContent = formGroup;
                            optionTag.value = formGroup;
                            frmGroupSelectTag.appendChild(optionTag);
                        }
                    }

                    //파일을 추가하기
                    if(page.data.selectedRows.length > 0){
                        // let rowHtml = `<div class="row">
                        //     <div class="col">
                        //         <div class="form_label">첨부파일</div>
                        //         <div class="form_data">
                        //             <div class="attach-component" id="approval-fileAttach"></div>
                        //         </div>
                        //     </div>
                        // </div>`
                        // sendApprovalForm.insertAdjacentHTML("beforeend", rowHtml);
                        const orgFiles = [];
                        for(const row of page.data.selectedRows){
                            orgFiles.push({
                                fileNm:row.doc_nm,
                                success:true,
                                docId:row.doc_id
                            })
                        }
                        approvalSendModal.fileAttachComponent = FileAttachComponent.init({
                            id:"approval-fileAttach",
                            failCount:false,
                            maxUploadFileSize:0,
                            orgFiles:orgFiles,
                            mode:'r'
                        });
                        approvalSendModal.fileAttachComponent.render();
                    }

                    frmGroupSelectTag.addEventListener('change', (e)=>{
                        frmNmSelectTag.innerHTML = "";

                        const selectedValue = e.target.value;
                        if(selectedValue !== ""){
                            frmNmSelectTag.disabled = false;

                            let optionTag = document.createElement("option");
                            optionTag.textContent = '서식명';
                            optionTag.value = '';
                            frmNmSelectTag.append(optionTag)

                            const apFormListOfGroup = parsedData[selectedValue];
                            for(const apForm of apFormListOfGroup){
                                optionTag = document.createElement("option");
                                optionTag.textContent = apForm.frmNm;
                                optionTag.value = apForm.frmId;
                                frmNmSelectTag.appendChild(optionTag);
                            }

                            frmNmSelectTag.addEventListener('change', (e)=> {
                                sendApprovalForm.innerHTML = "";
                                const selectedValue = e.target.value;
                                if(selectedValue !== ""){
                                    approvalSendModal.data.apForm = apFormListOfGroup.find(apForm => apForm.frmId == selectedValue);;
                                    // let rowHtml = "";
                                    // for(const column of columns){
                                    //     rowHtml += `<div class="row">
                                    //         <div class="col">
                                    //             <div class="form_label required">${column.label}</div>
                                    //             <div class="form_data">
                                    //     `
                                    //     switch(column.type){
                                    //         case 'textarea':
                                    //             rowHtml += `<textarea id="req-${column.name}" class="maxlength" maxLength="${column.maxLength}" name="${column.name}"></textarea>`
                                    //             break;
                                    //         case 'text':
                                    //         case 'radio':
                                    //         case 'checkbox':
                                    //             rowHtml += `<input type="${column.type}" id="req-${column.name}" class="maxlength" maxLength="${column.maxLength}" name="${column.name}"></input>`
                                    //             break;
                                    //     }
                                    //     rowHtml += `
                                    //             </div>
                                    //         </div>
                                    //     </div>`
                                    // }
                                    // sendApprovalForm.insertAdjacentHTML("beforeend", rowHtml);
                                }
                            })
                        }
                        else{
                            frmNmSelectTag.disabled = true;
                        }
                    })
                }
            },()=>{

            })




        },
        close:() => {
            document.querySelector("#approvalSendModal").classList.remove("open");
            document.querySelector("#approvalPopupWrap").innerHTML = "";
        },
        send:() => {
            if(!approvalSendModal.data.frmGroupList.includes("공문")){
                gaiaCommon.customAlert("공문 양식이 존재하지 않습니다.",null,{timeout:2500});
                return;
            }
            const params = {};
            params.apForm = approvalSendModal.data.apForm;
            params.files = approvalSendModal.fileAttachComponent.state.uploadedFiles
            params.shareType = "2";

            const columns = approvalSendModal.data.columns;
            const data = {};
            for(const column of columns){
                data[column.name] = document.querySelector(`#req-${column.name}`).value;
            }

            params.data = data;

            gaiaCommon.post('/api/document/shared-history/create',params,(response)=>{
                if(response.ok){
                    const details = response.details
                    const requestParams = {};
                    requestParams.frmId = params.apForm.frmId;
                    requestParams.frmNo = params.apForm.frmNo;
                    requestParams.sharedDcStorageMainList = details.sharedDcStorageMainList;
                    requestParams.uuid = details.uuid;
                    requestParams.cntrctNo = page.selectedPjtData.cntrctNo;

                    const form = document.createElement('form');
                    form.method = 'POST';
                    form.action = `/eapproval/draft/render-draft?pjtNo=${pjtInfo.pjtNo}&cntrctNo=${page.selectedPjtData.cntrctNo}`;

                    const input = document.createElement("input");
                    input.type = "hidden";
                    input.name = "requestParams";
                    input.value = JSON.stringify(requestParams);
                    form.appendChild(input);

                    document.body.appendChild(form);
                    form.submit();
                }
            })
        }
    }
</script>
