{% extends header ? 'layout/base_content' : 'layout/base_popup' %}
{% block content %}
{% include 'sub/grid' %}

<style>
    .align_center {
        display: flex;
        justify-content: center;
    }
    .date {
        text-align: center;
    }
</style>
<section class="contents_wrap g-row">
    <article class="conts g-row">
        <div class="group">
            <div class="conts_form">
                <div class="btn_area s_default _outline">
                    {{ btnHtml | raw }}
                    <!-- <button type="button" class="btn" id="updateBtn" onclick="detail.modify()">{{ message('btn.003') }}</button> -->
                    <button type="button" class="btn" onclick="detail.close()">{{ message('btn.007') }}</button>
                </div>
            </div>
        </div>
        <div class="form_box">
            <div class="row cols">
                <div class="col">
                    <div class="form_label" style="width: 160px;">{{ message('item.dfccy.047') }}</div>
                    <div class="form_data">
                        <input type="text" id="phaseNm" readonly>
                    </div>
                </div>
            </div>
        </div>
        <div class="grid">
            <table class="table ta_c">
                <colgroup>
                    <col width="15%">
                    <col width="30%">
                    <col width="30%">
                    <col width="25%">
                </colgroup>
                <thead>
                    <tr>
                        <th></th>
                        <th>{{ message('item.sub.013') }}</th>
                        <th>{{ message('item.sub.014') }}</th>
                        <th>{{ message('item.app.018') }}</th>
                    </tr>
                </thead>
                <tbody id="phaseTbody">
                    <tr id="0101">
                        <td>{{ message('item.dfccy.005') }}</td>                            
                        <td><div class="align_center"><input type="date" class="date" name="bgn" readonly></div></td>
                        <td><div class="align_center"><input type="date" class="date" name="end" readonly></div></td>
                        <td class="status"></td>
                    </tr>
                    <tr id="0102">
                        <td>{{ message('item.dfccy.008') }}</td>                            
                        <td><div class="align_center"><input type="date" class="date" name="bgn" readonly></div></td>
                        <td><div class="align_center"><input type="date" class="date" name="end" readonly></div></td>
                        <td class="status"></td>
                    </tr>
                    <tr id="0103">
                        <td>{{ message('btn.010') }}</td>                            
                        <td><div class="align_center"><input type="date" class="date" name="bgn" readonly></div></td>
                        <td><div class="align_center"><input type="date" class="date" name="end" readonly></div></td>
                        <td class="status"></td>
                    </tr>
                    <tr id="0104">
                        <td>{{ message('item.dfccy.015') }}</td>                            
                        <td><div class="align_center"><input type="date" class="date" name="bgn" readonly></div></td>
                        <td><div class="align_center"><input type="date" class="date" name="end" readonly></div></td>
                        <td class="status"></td>
                    </tr>
                </tbody>
            </table>
        </div>
    </article>

</section>

{% endblock content %}

{% block footer_script %}
<script>
    // 새창 모드일때, 부모창이 있는지 감지.
	if(opener){
		opener.document.onkeydown = fkey;
		opener.document.onkeypress = fkey;
		opener.document.onkeyup = fkey;

		// 부모창의 f5 새로고침 누를때 열려있는 팝업 창 닫기
		function fkey(e){
			if (window.event.keyCode == 116) {
				window.close();
			}
		};

		window.opener.onbeforeunload = function () {
			// 부모창이 새로고침되거나 페이지 이동할 때 실행
			if (window) {
				// 자식 창 닫기
				window.close();
			}
		};
	}

    var urlParams = new URLSearchParams(location.search);
    var urlCntrctNo = urlParams.get('cntrctNo');
    var phaseNo = urlParams.get('pNo');

    // 상세 페이지
    var detail = {
        init() {
            pjtNo = pjtInfo.pjtNo;
    	    cntrctNo = pjtInfo.cntrctNo;

            let params = {
                cntrctNo: urlCntrctNo,
                dfccyPhaseNo: phaseNo
            }

            gaiaCommon.LoadingOverlay('body', true);

            gaiaCommon.post(`/api/defecttracking/setting/detail`, params, function(result) {
                let phase = result.details.phase[0];
                $('#phaseNm').val(gaiaCommon.decodeSafeText(phase.dfccy_phase_nm));
                detail.mapping(phase);
                gaiaCommon.LoadingOverlay('body', false);
            }, function (xhr, status, error) {
                console.error(status, error);
                gaiaCommon.customAlert("{{ message('msg.060') }}");
                gaiaCommon.LoadingOverlay('body', false);
            });

            gaia.loaded = true;
        },
        mapping(phase){
            if(phase) {
                const mappingData = {
                    "0101" : {bgn: phase.deficiency_bgn_date,   end: phase.deficiency_end_date, status: phase.deficiency_status},
                    "0102" : {bgn: phase.response_bgn_date,     end: phase.response_end_date,   status: phase.response_status},
                    "0103" : {bgn: phase.confirm_bgn_date,      end: phase.confirm_end_date,    status: phase.confirm_status},
                    "0104" : {bgn: phase.finish_bgn_date,       end: phase.finish_end_date,     status: phase.finish_status},
                }

                $('#phaseTbody tr').each(function(){
                    let trId = $(this).attr('id'); 
                    let status;
                    if(mappingData[trId].status === 'ing') {
                        status = "{{ message('item.com.041') }}";
                    } else if(mappingData[trId].status === 'finish') {
                        status = "{{ message('item.dfccy.004') }}";
                    } else {
                        status = "{{ message('item.dfccy.002') }}";
                    }
                    if (mappingData[trId]) {
                        $(this).find('input[name="bgn"]').val(mappingData[trId].bgn);
                        $(this).find('input[name="end"]').val(mappingData[trId].end);
                        $(this).find('.status').text(status);
                    }
                })
            }
        },
        modify(){
            window.location.href = `/defectTracking/setting/edit?pjtNo=${pjtNo}&cntrctNo=${urlCntrctNo}&page=p&pNo=${phaseNo}`;
        },
        close(){
            window.close();
        }
    }
    
    $(function(){  
        gaia.create({
            $init: function ($params) {

                gaiaPortal.navMenuInit("M090106", `{{ message('item.dfccy.046') }} {{ message('item.dfccy.048') }}`);
                $('#menuDepth').append(`<li class="breadcrumb_item">{{ message('item.dfccy.016') }} {{ message('item.dfccy.048') }}</li>`);
                detail.init();
            }
        });
    })
</script>
{% endblock footer_script %}