{% extends header ? 'layout/base_content' : 'layout/base_popup' %} {% block
content %} {% include 'sub/grid' %}
<article class="conts_area">
	<div class="conts g-row">
		<div class="conts_form">
			<div class="btn_area s_default">
				<button type="button" class="btn _outline" id="close-popup" onclick="grid.close()">
					{{ message("btn.007") }}
				</button>
			</div>

			<div class="group">
				<div class="conts_grid">
					<div class="grid" id="activity-grid">
					</div>
				</div>
			</div>
		</div>
	</div>
</article>
{% endblock content %} {% block footer_script %}
<script>
	const params = new URLSearchParams(window.location.search);
	const pjtNo = commonJs.getSessionStorage("pageCommonData").pjtNo;
	const cntrctNo = params.get("cntrctNo");
	const dfccyNo = params.get("dfccyNo");

	var grid = {
		init: function () {
			this.makeActivityGrid();
			gaiaPortal.navMenuInit("", "Activity 상세 정보");
		},

		close: function () {
			window.close();
		},

		makeActivityGrid: function () {
			const Grid = tui.Grid;
			let _this = this;

			if (this.activityGrid) {
				this.activityGrid.destroy();
				this.activityGrid = null;
			}

			const dataSource = {
				api: {
					readData: {
						url: "/api/progress/wbs/activity/deffecttrackingActivity",
						method: "GET",
						initParams: {
							pjtNo: pjtNo,
							cntrctNo: cntrctNo,
							dfccyNo: dfccyNo
						},
					},
				},
				contentType: "application/json",
			};

			if (!this.activityGrid) {
				this.activityGrid = new Grid({
					el: document.getElementById("activity-grid"),
					data: dataSource,
					scrollX: true,
					scrollY: true,
					draggable: false,
					contextMenu: null,
					header: {
						height: 72,
						complexColumns: [
							{
								header: '일정',
								name: 'mergeColumn1',
								childNames: ['planStart', 'planFinish', 'actualStart', 'actualFinish',]
							},
						]
					},
					columns: [
						{
							header: "WBS",
							name: "wbsNm",
							align: "left",
							ellipsis: true,
							resizable: true,
						},
						{
							header: "Activity명",
							name: "activityNm",
							align: "left",
							ellipsis: true,
							resizable: true,
						},
						{
							header: "계획 시작일",
							name: "planStart",
							align: "center",
							ellipsis: true,
							resizable: true,
						},
						{
							header: "계획 완료일",
							name: "planFinish",
							align: "center",
							ellipsis: true,
							resizable: true,
						},
						{
							header: "실행 시작일",
							name: "actualStart",
							align: "center",
							ellipsis: true,
							resizable: true,
						},
						{
							header: "실행 종료일",
							name: "actualFinish",
							align: "center",
							ellipsis: true,
							resizable: true,
						},
						{
							header: "상태",
							name: "state",
							align: "center",
							ellipsis: true,
							resizable: true,
						},
					],
				});
			}
		},
	};



	if (opener) {
		opener.document.onkeydown = fkey;
		opener.document.onkeypress = fkey;
		opener.document.onkeyup = fkey;

		function fkey(e) {
			if (window.event.keyCode == 116) {
				window.close();
			}
		};

		window.opener.onbeforeunload = function () {
			if (window) {
				window.close();
			}
		};

	}

    $(function(){
        gaia.create({
            $init: function ($params) {
				grid.init();      
                gaia.loaded = true;
            }
        });
    })

</script>
{% endblock footer_script %}