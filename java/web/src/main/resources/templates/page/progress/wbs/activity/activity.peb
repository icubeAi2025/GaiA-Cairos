{% extends 'layout/base_content' %} {% block head %}
<style>
    .detailSearch {
        box-sizing: content-box !important;
    }

    .s_conts {
        height: calc(100dvh - 445px);
    }

    .treeview_area {
        height: calc(100dvh - 445px);
    }

    .treeview_area .treeview {
        height: calc(100dvh - 500px);
        overflow: auto;
    }
</style>
{% endblock %} {% block content %}
<article class="conts g-row" id="container">
    <div class="group">
        <div class="conts_form">
            <h3 class="conts_tit">{{ message("item.sub.040") }}</h3>
            <span class="selectbox">
                <select id="cntrctChgId" style="line-height:1.1"></select>
            </span>
        </div>
    </div>
    <div class="group">
        <h3 class="conts_tit">{{ message('item.wbs.001') }}</h3>
        <div class="s_conts ty1 conts">
            <div class="g-group g-col2 ty1">
                <!-- 트리 -->
                <div class="treeview_area">
                    <div class="treeview ty_pd0" id="jstree"></div>
                </div>

                <div class="group">

                    <h3 class="conts_tit">Activity</h3>
                    <div class="conts_grid">
                        <div class="search_wrap">
                            <span class="selectbox">
                                <select id="searchType" name="searchType">
                                    <option selected value="">{{ message('item.com.040') }}</option>
                                    <option value="0">{{ message('item.com.041') }}</option>
                                    <option value="1">{{ message('item.com.042') }}</option>
                                    <option value="2">{{ message('item.com.043') }}</option>
                                </select>
                            </span>
                            <div class="searchbox_wrap">
                                <input type="text" id="searchText" name="searchText"
                                    onkeypress="if( event.keyCode == 13 ){activityGrid.search();}"
                                    placeholder="{{ message('item.activity.002') }}, {{ message('item.activity.003') }}" />

                                <button type="button" class="btn icon_btn filter"
                                    onclick="activityGrid.detailSearchOpen()">
                                    <i class="ic ic-setting-config"></i>
                                    <span class="blind">{{ message('item.com.044') }}</span>
                                </button>
                                <button type="submit" class="icon_btn search" onclick="activityGrid.search()">
                                    <i class="ic ic-search"></i>
                                    <span class="blind">{{ message('item.com.014') }}</span>
                                </button>
                                <div class="lay_pop" data-name="search_detail">
                                    <div class="form_box ">
                                        <div class="row">
                                            <div class="col">
                                                <div class="form_label">{{ message('item.com.040') }}</div>
                                                <div class="form_data">
                                                    <span class="selectbox">
                                                        <select id="detailSearchType">
                                                            <option selected value="">{{ message('item.com.040') }}
                                                            </option>
                                                            <option value="0">{{ message('item.com.041') }}</option>
                                                            <option value="1">{{ message('item.com.042') }}</option>
                                                            <option value="2">{{ message('item.com.043') }}</option>
                                                        </select>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col">
                                                <div class="form_label">{{ message('item.wbs.003') }}</div>
                                                <div class="form_data">
                                                    <input type="text" name="wbsNm" id="wbsNm">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col">
                                                <div class="form_label">{{ message('item.activity.002') }}</div>
                                                <div class="form_data">
                                                    <input type="text" name="activityId" id="activityId">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col">
                                                <div class="form_label">{{ message('item.activity.003') }}</div>
                                                <div class="form_data">
                                                    <input type="text" name="activityNm" id="activityNm">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col">
                                                <div class="form_label">{{ message('item.activity.001') }}</div>
                                                <div class="form_data detailSearch">
                                                    <div class="item_group" role="group" aria-label="Basic radio group"
                                                        id="searchTerm">
                                                        <label class="form_check">
                                                            <input class="check_mark" type="radio" name="radio"
                                                                value="today">
                                                            <span class="check_label">
                                                                {{ message('item.com.045')}}
                                                            </span>
                                                        </label>
                                                        <label class="form_check">
                                                            <input class="check_mark" type="radio" name="radio"
                                                                value="week">
                                                            <span class="check_label">
                                                                {{ message('item.com.046')}}
                                                            </span>
                                                        </label>
                                                        <label class="form_check">
                                                            <input class="check_mark" type="radio" name="radio"
                                                                value="month">
                                                            <span class="check_label">
                                                                {{ message('item.com.047')}}

                                                            </span>
                                                        </label>
                                                        <label class="form_check">
                                                            <input class="check_mark" type="radio" name="radio"
                                                                value="custom">
                                                            <span class="check_label">
                                                                {{ message('item.com.048') }}
                                                            </span>
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col">
                                                <div class="form_label">{{ message('item.com.049') }}</div>
                                                <div class="form_data disabled" id="customDays">
                                                    <div class="item_group">
                                                        <input type="date" name="startDate" id="startDate" class="date"
                                                            data-date-format="DD/MM/YYYY">
                                                        ~
                                                        <input type="date" name="endDate" id="endDate" class="date"
                                                            data-date-format="DD/MM/YYYY">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                    </div>

                                    <div class="btn_group _fill s_small jc_e">
                                        <button type="button" class="btn" onclick="activityGrid.detailSearch()">
                                            {{message('btn.014') }}
                                        </button>
                                        <button type="button" class="btn" onclick="activityGrid.detailSearchReset()">
                                            {{message('btn.024')}}
                                        </button>
                                    </div>
                                    <button type="button" class="lay_pop_close icon_btn"
                                        style="position: absolute !important;"
                                        onclick="activityGrid.detailSearchClose()">
                                        <i class="ic ic-close"></i>
                                        <span class="blind">{{ message('item.com.037') }}</span>
                                    </button>

                                </div>
                            </div>
                        </div>

                        <!-- S: 상세검색에서 선택된 항목 표시 -->
                        <p class="selected_list">

                        </p>

                        <div class="btn_area s_default">
                            {{ btnHtml | raw }}
                        </div>

                        <!-- 그리드 -->
                        <div class="grid" id="activity-grid"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</article>
{% endblock content %}
{% block footer_script %}
<script>
    var pjtNo = pjtNo;
    var cntrctNo;
    var wbsCd;

    //일반검색
    var searchType;
    var searchText;

    //상세검색
    var activityId;
    var activityNm;
    var wbsNm;
    var searchTerm;
    var startDate;
    var endDate;


    var init = function () {
        cntrcNoSelectBox.init()
        // activityGrid.init();
    }

    // 계약 selectBox
    var cntrcNoSelectBox = {
        init: function () {
            pjtNo = pjtInfo.pjtNo;

            if(gaiaCommon.me.isAdmin() || isGAIA()){
                activityGrid.data.gridHeight = window.innerHeight - 670;
            }else if(isCAIROS()){
                activityGrid.data.gridHeight = window.innerHeight - 590;
                document.querySelector('.s_conts').style.height = 'calc(100dvh - 365px)';
                document.querySelector('.treeview_area').style.height = 'calc(100dvh - 365px)';
                document.querySelector('.treeview_area .treeview').style.height = 'calc(100dvh - 420px)';
            }

            gaiaCommon.makeCntrctAndChgIdSelectBox(
                    "#container",
                    "#cntrctChgId",
                    () => {
                        activityGrid.init();
                    },
                    (cntrctChgId) => {
                        wbsCd = ''
                        wbsTree.clear(cntrctChgId);
                        activityGrid.init(cntrctChgId);
                    },
                    (cntrctChgId) => {
                        wbsCd = ''
                        wbsTree.clear(cntrctChgId);
                        activityGrid.init(cntrctChgId);
                    }
            );
        }
    }

    // WBS 트리
    var wbsTree = {
        obj: null,
        clear: function (cntrctChgId) {
            if (this.obj) {
                $("#jstree").jstree(true).destroy();
            }
            this.init(cntrctChgId);
            $("#searchText").val("")
        },
        init: function (cntrctChgId) {

            this.obj = $("#jstree").jstree({

                core: {
                    data: function (obj, cb) {
                        gaiaCommon.get(`/api/progress/wbs/wbs/treeList?cntrctChgId=${cntrctChgId}`, {}, function (result) {
                            var data = [];
                            if (result.details?.wbsList) {
                                result.details?.wbsList.forEach((item, index) => {
                                    data.push({
                                        id: item.wbsCd,
                                        parent: (!item.upWbsCd || item.upWbsCd === "") ? "#" : item.upWbsCd,
                                        text: item.wbsNm,
                                        state: { opened: true },
                                        data: item,
                                        icons: 'fa-solid fa-caret-right',
                                    });
                                });
                                cb.call(obj, data);
                            }
                        });
                    },
                    check_callback: true,
                    themes: {
                        "theme": "default",
                        "dots": false,
                        "responsive": false,
                        "icons": false
                    }
                },
            });

            if (this.obj && $.isFunction(this.obj.on))
                this.obj.on("select_node.jstree", function (e, data) {
                    $('.jstree-anchor').siblings('nav.item_opt').css('display', 'none');
                    $('.jstree-anchor.jstree-clicked.current').siblings('nav.item_opt').css('display', 'contents');
                    wbsCd = data.node?.data.wbsCd;
                    activityGrid.init($('#cntrctChgId').val());

                });
        }
    }



    // activity 그리드
    var activityGrid = {
        data:{gridHeight:null},
        init: function (cntrctChgId) {
            const Grid = tui.Grid;
            let _this = this;

            if (this.activityGrid) {
                this.activityGrid.destroy(); // 기존 인스턴스 제거
                this.activityGrid = null;
            }
            const dataSource = createDataSource({
                readData: {
                    url: "/api/progress/wbs/activity/gridList",
                    method: "Get",
                    initParams: {
                        cntrctChgId: $('#cntrctChgId').val(),
                        wbsCd: wbsCd,
                        searchType: searchType,
                        searchText: searchText,
                        activityId: activityId,
                        activityNm: activityNm,
                        searchTerm: searchTerm,
                        startDate: startDate,
                        endDate: endDate,
                        wbsNm: wbsNm
                    },
                }
            });

            if (!this.activityGrid) {

                let bodyHeight;

                this.activityGrid = new Grid({
                    el: document.getElementById("activity-grid"),
                    data: dataSource,
                    scrollX: true,
                    scrollY: true,
                    draggable: false,
                    contextMenu: null,
                    bodyHeight: activityGrid.data.gridHeight,
                    rowHeaders: [{ type: 'rowNum' }],
                    header: {
                        height: 100,
                        complexColumns: [
                            {
                                header: "{{ message('item.com.049') }}",
                                name: "days",
                                childNames: ["intlDuration", "remndrDuration"],
                            },
                            {
                                header: "{{ message('item.com.050') }}",
                                name: "cost",
                                childNames: [
                                    "exptCost",
                                    "remndrCost",
                                ],
                            },
                            {
                                header: "{{ message('item.com.051') }}",
                                name: "date",
                                childNames: [
                                    "planStart",
                                    "planFinish",
                                    "actualStart",
                                    "actualFinish",
                                ],
                            },
                        ],
                    },
                    columns: [
                        {
                            header: "{{ message('item.wbs.001') }}",
                            name: "wbsNm",
                            resizable: true,
                            ellipsis: true,
                            width: 150,
                        },
                        {
                            header: "{{ message('item.activity.002') }}",
                            name: "activityId",
                            sortable: true,
                            width: 150,
                            resizable: true,
                            ellipsis: true,
                        },
                        {
                            header: "{{ message('item.activity.003') }}",
                            name: "activityNm",
                            width: 150,
                            ellipsis: true,
                            resizable: true,
                        },
                        {
                            header: "{{ message('item.com.052') }}",
                            name: "activityKindKrn",
                            align: "center",
                            minWidth: 100,
                        },
                        {
                            header: "{{ message('item.com.053') }}",
                            name: "intlDuration",
                            minWidth: 80,
                            align: "center",
                            formatter: function (e) {
                                return e.value ? e.value.toLocaleString('ko-KR', { maximumFractionDigits: 0 }) : "0";
                            }
                        },
                        {
                            header: "{{ message('item.com.054') }}",
                            name: "remndrDuration",
                            minWidth: 80,
                            align: "center",
                            formatter: function (e) {
                                return e.value ? e.value.toLocaleString('ko-KR', { maximumFractionDigits: 0 }) : "0";
                            }
                        },
                        {
                            header: "{{ message('item.com.055') }}",
                            name: "exptCost",
                            formatter: function (e) {
                                return e.value ? e.value.toLocaleString('ko-KR', { maximumFractionDigits: 0 }) : "0";
                            },
                            minWidth: 100,
                            align: "right",
                        },
                        {
                            header: "{{ message('item.com.056') }}",
                            name: "remndrCost",
                            formatter: function (e) {
                                return e.value ? e.value.toLocaleString('ko-KR', { maximumFractionDigits: 0 }) : "0";
                            },
                            minWidth: 100,
                            align: "right",
                        },
                        {
                            header: "{{ message('item.activity.004') }}",
                            name: "planStart",
                            minWidth: 100,
                            align: "center",
                        },
                        {
                            header: "{{ message('item.activity.005') }}",
                            name: "planFinish",
                            minWidth: 100,
                            align: "center",
                        },
                        {
                            header: "{{ message('item.activity.006') }}",
                            name: "actualStart",
                            sortable: true,
                            minWidth: 100,
                            align: "center",
                        },
                        {
                            header: "{{ message('item.activity.007') }}",
                            name: "actualFinish",
                            sortable: true,
                            minWidth: 100,
                            align: "center",
                        },


                    ],
                });
                this.activityGrid.on('onGridUpdated', ev => {
                    let cnt = this.activityGrid.getRowCount();
                    let minLevel = Number.MAX_SAFE_INTEGER;

                    for (let i = 0; i < cnt; i++) {
                        let level = this.activityGrid.getValue(i, "wbsLevel");
                        if (level !== null && !isNaN(level)) {
                            this.activityGrid.addRowClassName(i, `bg-lv${level}`);
                        }
                    }
                });
                this.activityGrid.on("errorResponse", function (ev) {
                    // ev.xhr: XMLHttpRequest 객체를 참조
                    const statusCode = ev.xhr.status;
                    if (statusCode === 403) {
                        gaiaCommon.customAlert(SESSION_EXPIRED_MSG, () => { location.reload(); });
                    } else {
                        console.error("데이터 요청 중 오류 발생:", ev.xhr.status, ev.xhr.statusText);
                    }
                });
            }
            refreshGrid(activityGrid.activityGrid);
        },
        search() {
            searchText = $("#searchText").val();
            searchType = $("#searchType").val();
            searchTerm = '';
            startDate = '';
            endDate = '';
            activityId = '';
            activityNm = '';

            $(".selected_list").removeClass("on");
            activityGrid.init();
        },
        detailSearch() {
            $('.selected_list').addClass('on');
            $('.selected_list').children().remove();

            searchText = ''
            $('#searchText').val('')
            $('#searchType').val('')

            searchType = $('#detailSearchType').val();
            activityId = $('#activityId').val();
            activityNm = $('#activityNm').val();
            wbsNm = $('#wbsNm').val();
            if ($('#startDate').val() != '' || $('#startDate').val() != null) {
                startDate = $('#startDate').val();
            }
            if ($('#endDate').val() != '' || $('#endDate').val() != null) {
                endDate = $('#endDate').val();
                console.log(endDate)
            }
            searchTerm = $("input[name='radio']:checked").val();

            // 작업 상태
            if (searchType) {
                let searchTypeText = $("#detailSearchType option:selected").text();
                let keywordHtml = `
                <span class="selected_item detailType">
                    <span class="item status">${searchTypeText}</span>
                    <input type="hidden" name="detailSearchType" value="${searchType}">
                    <button type="button" class="icon_btn" onclick="activityGrid.detailSearchListClose('detailType')">
                        <i class="ic ic-close"></i>
                        <span class="blind">{{ message('btn.002') }}</span>
                    </button>
                </span>
            `;
                $('.selected_list').append(keywordHtml);
            }

            // Activity ID
            if (activityId) {
                let keywordHtml = `
                <span class="selected_item detailId">
                    <span class="item acId">${activityId}</span>
                    <input type="hidden" name="activityId" value="${activityId}">
                    <button type="button" class="icon_btn" onclick="activityGrid.detailSearchListClose('detailId')">
                        <i class="ic ic-close"></i>
                        <span class="blind">{{ message('btn.002') }}</span>
                    </button>
                </span>
            `;
                $('.selected_list').append(keywordHtml);
            }

            // wbsNm
            if (wbsNm) {
                let keywordHtml = `
                <span class="selected_item wbsNm">
                    <span class="item wbsNm">${wbsNm}</span>
                    <input type="hidden" name="wbsNm" value="${wbsNm}">
                    <button type="button" class="icon_btn" onclick="activityGrid.detailSearchListClose('wbsNm')">
                        <i class="ic ic-close"></i>
                        <span class="blind">{{ message('btn.002') }}</span>
                    </button>
                </span>
            `;
                $('.selected_list').append(keywordHtml);
            }

            // Activity 이름
            if (activityNm) {
                let keywordHtml = `
                <span class="selected_item detailNm">
                    <span class="item acNm">${activityNm}</span>
                    <input type="hidden" name="activityNm" value="${activityNm}">
                    <button type="button" class="icon_btn" onclick="activityGrid.detailSearchListClose('detailNm')">
                        <i class="ic ic-close"></i>
                        <span class="blind">{{ message('btn.002') }}</span>
                    </button>
                </span>
            `;
                $('.selected_list').append(keywordHtml);
            }

            // 날짜 범위
            if (searchTerm === 'custom' && startDate && endDate) {
                let combinedValue = `${startDate} ~ ${endDate}`;
                let keywordHtml = `
                <span class="selected_item detailDays">
                    <span class="item days">${combinedValue}</span>
                    <input type="hidden" name="startDate" value="${startDate}">
                    <input type="hidden" name="endDate" value="${endDate}">
                    <button type="button" class="icon_btn" onclick="activityGrid.detailSearchListClose('detailDays')">
                        <i class="ic ic-close"></i>
                        <span class="blind">{{ message('btn.002') }}</span>
                    </button>
                </span>
            `;
                $('.selected_list').append(keywordHtml);
            } else if (searchTerm && searchTerm !== 'custom') {
                let searchTermText = '';
                if (searchTerm === 'today') {
                    searchTermText = '{{ message("item.com.045") }}';
                } else if (searchTerm === 'week') {
                    searchTermText = '{{ message("item.com.046") }}';
                } else if (searchTerm === 'month') {
                    searchTermText = '{{ message("item.com.047") }}';
                }

                let keywordHtml = `
                <span class="selected_item detailDays">
                    <span class="item days">${searchTermText}</span>
                    <input type="hidden" name="searchTerm" value="${searchTerm}">
                    <button type="button" class="icon_btn" onclick="activityGrid.detailSearchListClose('detailDays')">
                        <i class="ic ic-close"></i>
                        <span class="blind">{{ message('btn.002') }}</span>
                    </button>
                </span>
            `;
                $('.selected_list').append(keywordHtml);
            }

            // 선택된 검색 필터가 없으면 selected_list를 비활성화
            if ($('.selected_list').children().length === 0) {
                if (gaiaCommon.me.isAdmin() || isGAIA()) {
                    activityGrid.data.gridHeight = window.innerHeight - 670;
                } else if (isCAIROS()) {
                    activityGrid.data.gridHeight = window.innerHeight - 590;
                }
                $('.selected_list').removeClass('on');
            }else{
                if (gaiaCommon.me.isAdmin() || isGAIA()) {
                    activityGrid.data.gridHeight = window.innerHeight - 723;
                } else if (isCAIROS()) {
                    activityGrid.data.gridHeight = window.innerHeight - 643;
                }
            }

            $("[data-name='search_detail']").removeClass("on");
            activityGrid.init()
        }
        ,
        detailSearchReset() {
            $("#detailSearchType").val('')
            $("#activityId").val('');
            $("#activityId").val('');
            $("#activityNm").val('');
            $("#wbsNm").val('');
            $("#startDate").val('')
            $("#endDate").val('')

            $("input[name='radio']").prop('checked', false);
            $("#customDays").addClass('disabled')

        },
        detailSearchOpen() {
            $("[data-name='search_detail']").addClass("on");
        },
        detailSearchClose() {
            $("[data-name='search_detail']").removeClass("on");
        },
        detailSearchListClose(keyword) {
            let selectedItem = $(`.${keyword}`).closest('.selected_item');
            let hiddenInputs = selectedItem.find('input[type="hidden"]');
            let key = hiddenInputs.attr('name');

            $(`#${key}`).val('');

            if (key == 'searchTerm') {
                $("input[name='radio']").prop('checked', false);
            }

            selectedItem.remove();

            if ($('.selected_list').children().length === 0) {
                $('.selected_list').removeClass('on');
                if (gaiaCommon.me.isAdmin() || isGAIA()) {
                    activityGrid.data.gridHeight = window.innerHeight - 670;
                } else if (isCAIROS()) {
                    activityGrid.data.gridHeight = window.innerHeight - 590;
                }
            }

            activityGrid.detailSearch();
        },
        exportToExcel: function () {
            const options = {
                includeHiddenColumns: false,
                onlySelected: true,
                fileName: "[{{ message('item.wbs.001') }}]{{ message('item.activity.009') }}",
            };

            this.activityGrid.export("xlsx", options);
        },
    }


    $("input[name='radio']").change(function (e) {
        if ($("input[name='radio']:checked").val() == 'custom') {
            $("#customDays").removeClass('disabled')
        } else {
            $("#customDays").addClass('disabled')
            $("#startDate").val('')
            $("#endDate").val('')
        }
    });

    $(function () {
        $('.lay_pop').mousedown(function (e) {
            e.stopPropagation();
        });
        $(document).mousedown(function (e) {
            activityGrid.detailSearchClose()
        });

        gaia.create({
            $init: function ($params) {
                gaiaPortal.navMenuInit("M020203", "{{ message('item.activity.008') }}");
                init();

                gaia.loaded = true
            }
        });
    })
</script>
<script src="/webjars/jstree/jstree.min.js"></script>
{% endblock footer_script %}