
<div class="modal" id="photoModal">
	<div class="pop_box _md">
		<div class="pop_header">
			<h5 class="pop_tit">사진대지</h5>
			<div class="btn_area">
				<button type="button" class="icon_btn pop_close" onclick="photoModal.toggleModal()">
					<i class="ic ic-close"></i>
					<span class="blind">창닫기</span>
				</button>
			</div>

		</div>
		<div class="pop_body" id="modal-content">
			<form id='inputForm'>

				<div class="conts_form">
					<div class="form_box">
						<!-- row -->
						<div class="row">
							<div class="col">
								<div class="form_label required">{{ message("item.app.001") }}</div>
								<div class="form_data">
									<input type="text" id="titl_nm" name="titl_nm" maxlength="100">
								</div>
							</div>
						</div>
						<!-- row -->
						<div class="row">
							<div class="col">
								<div class="form_label">{{ message("item.commonCode.005") }}</div>
								<div class="form_data">
									<input type="text" id="dscrpt" name="dscrpt" maxlength="2000">
								</div>
							</div>
						</div>
						<!-- row -->
						<div class="row">
							<div class="col">
								<div class="form_label">{{ message("item.construction.053") }}</div>
								<div class="form_data">
									<input type="date" class="date w-md" id="shot_date" name="shot_date">
								</div>
							</div>
						</div>
						<!-- row -->
						<div class="row">
							<div class="col">
								<div class="form_label required">{{ message("item.construction.054") }}</div>
								<div class="form_data" style="position: relative;height: 340px;">
									<div style="top: 0;position: absolute;" id="photoDiv">
										<button type="button" class="btn icon_btn" id="addPhoto">
											<i class="ic ic-picture-one"></i>
											<span class="blind">추가</span>
										</button>
									</div>
									<div style="position: absolute;bottom: 8px; height:300px; width: 530px;">
										<div name="uploadImg" id="uploadImg" style="height:290px; width: 530px; display:flex; flex-wrap:nowrap; overflow-x: auto"></div>
									</div>
								</div>
								<input type="file" accept="image/*" id="fileNm" name="fileNm" style="display: none;" multiple />
							</div>
                            <div class="form_help" style="margin-top: 8px; color: #eb6565; font-size: 12px; position:absolute; bottom:4px; right: 12px">
                                <i class="ic ic-info" style="margin-right: 4px;"></i>1MB 이상의 파일은 업로드 시 자동으로 크기가 조정됩니다
                            </div>
						</div>
					</div>
				</div>


			</form>
		</div>

		<div class="pop_footer">
			<div class="btn_area s_default jc_e">
				<button type="button" class="btn _outline" onclick="photoModal.toggleModal()">취소</button>
				<button type="button" class="btn _fill" onclick="photoModal.save()">저장</button>
			</div>
		</div>
	</div>
</div>


{% block footer_script %}
<style>
	.cell-BizON { background-color: #FFF000 !important }
	.pop_box._sm { width: 62rem;}
</style>
<script>

	var urlParams = new URLSearchParams(location.search);
	var id = "";
	var code = "";
	var type = "";

	var photoModal = {
		selectedFile: [],
		init(){

		},
		toggleModal(){
			photoModal.selectedFile = [];
			$("#shot_date").val(new Date().toISOString().slice(0, 10));
			$('#titl_nm').val('');
			$('#dscrpt').val('');
			$('#uploadImg').empty();
			$('#photoModal').toggleClass("open");
		},
		addphoto: function () {
            const fileInput = document.createElement('input');
			const uploadImg = document.getElementById('uploadImg');
            fileInput.type = 'file';
            fileInput.accept = 'image/*';
            fileInput.style.display = 'none';

            // 파일 선택 이벤트 처리
            fileInput.addEventListener('change', function (event) {
                const file = event.target.files[0];
                if (file) {
                    tware.utils.resizeImage(uploadImg, file, (response) => {
                        photoModal.selectedFile = response.file;
                    });
                }
            });

            document.body.appendChild(fileInput);
            fileInput.click();
        },
		save(){
			const titlNm = $("#titl_nm").val();

			// 파일 미존재할 경우
			if(!photoModal.selectedFile.length){
				gaiaCommon.customAlert("{{ message('msg.038') }}".replace('{0}', "{{ message('item.construction.054') }}"));
				return false;
			}

			if(!titlNm) {
				gaiaCommon.customAlert("제목을 입력해주세요.");
                return;
			}

			const formData = new FormData();

			photoModal.selectedFile.forEach(item => {
				const photoData = {
					titlNm: titlNm,
					dscrpt: $("#dscrpt").val(),
					shotDate: $("#shot_date").val(),
					base: item.base,
					file: item.file
				}

				formData.append('files', item.file);
			})

			gaiaCommon.LoadingOverlay('body', true);

			gaiaCommon.postForm('/resource/upload', formData, function (response) {
                if (response.details.result) {
                    gaiaCommon.customAlert('{{ message("msg.044") }}', function () { // 저장되었습니다
                        gaiaCommon.LoadingOverlay('body', false);
						let metas = response.details.metas;
						photoModal.selectedFile = photoModal.selectedFile.map((item, idx) => {
							const meta = metas[idx]; // 업로드 순서대로 매칭
							return {
								titlNm: titlNm,
								dscrpt: $("#dscrpt").val(),
								shotDate: $("#shot_date").val(),
								base: item.base,
								file: item.file,
								meta: meta
							};
						});
                        monthlyPhoto.setPhoto(photoModal.selectedFile); // 부모 창의 메서드 호출
                        photoModal.toggleModal();
                    });
                } else{
                    gaiaCommon.LoadingOverlay('body', false);
                    gaiaCommon.customAlert('{{ message("msg.045") }}');	// 저장에 실패 했습니다.
                }
            },function (error) {
                console.log('error', error);
                gaiaCommon.LoadingOverlay('body', false);
                gaiaCommon.customAlert('{{ message("msg.045") }}');	// 저장에 실패 했습니다.
            })
		}
	}

	// 이미지 드로그앤 드롭
    const dropZone = document.getElementById('uploadImg');

    dropZone.addEventListener('dragover', function (e) {
      e.preventDefault();   // 기본 브라우저 동작 막기
      dropZone.style.backgroundColor = '#f0f0f0';
    });

    dropZone.addEventListener('dragleave', function (e) {
      e.preventDefault();
      dropZone.style.backgroundColor = '';
    });

	// 드래그앤드롭 영역 drop 이벤트
	dropZone.addEventListener('drop', function (e) {
		e.preventDefault();
		dropZone.style.backgroundColor = '';

		const file = e.dataTransfer.files;
		if (!file.length) return;

		photoModal.selectedFile = [];

		for (let i = 0; i < files.length; i++) {
			const file = files[i];

            if (!file.type.startsWith('image/')) {
                dropZone.innerHTML = "이미지 파일만 가능합니다.";
                continue;
            }

			const reader = new FileReader();
			reader.onload = function (evt) {
                // 미리보기 이미지 추가
                const img = document.createElement("img");
                img.src = evt.target.result;
                img.style.maxWidth = "100px";
                img.style.marginRight = "8px";
                img.style.borderRadius = "4px";
                dropZone.appendChild(img);

                photoModal.selectedFile.push({
                    titl_nm: gaiaCommon.decodeSafeText($("#titl_nm").val()),
                    dscrpt: gaiaCommon.decodeSafeText($("#dscrpt").val()),
                    shot_date: $("#shot_date").val() || '',
                    base: evt.target.result, // base64
                    file: file
                });
            };

			reader.readAsDataURL(file);
		}
		tware.utils.resizeImage(dropZone, file, (response) => {
			photoModal.selectedFile.push(response.file);  // 리사이즈 된 파일 저장
		});

	});

	// 파일 탐색기 오픈
    $("#addPhoto").on("click", function () {
        $("#fileNm").click(); // 숨겨진 input 클릭
    });

	// 파일 선택할 경우 미리보기 & photoArr 데이터 준비
	$("#fileNm").on("change", function (e) {
        const files = e.target.files;
        if (!files.length) return;

        const totalFiles = files.length;

        $("#uploadImg").empty(); // 모달 내 미리보기 초기화
        photoModal.selectedFile = [];

        gaiaCommon.LoadingOverlay('body', true);
        let processed = 0; // 처리된 파일 수
        for (let i = 0; i < totalFiles; i++) {
            const file = files[i];
            if (!(file instanceof File)) continue;

            // 미리보기 표시
            const previewImg = $("<img>").css({marginRight: "8px", borderRadius: "4px", "object-fit": "contain", border: "1px solid #e0e0e0" });
            console.log('*** previewImg= ',previewImg);
            tware.utils.resizeImage(previewImg[0], file, (resData) => {
                $("#uploadImg").append(previewImg);

                photoModal.selectedFile.push({
                    titl_nm: gaiaCommon.decodeSafeText($("#titl_nm").val()),
                    dscrpt: gaiaCommon.decodeSafeText($("#dscrpt").val()),
                    shot_date: $("#shot_date").val() || '',
                    base: resData.data,
                    file: resData.file
                });

                processed++;
                console.log('*** resData',resData);
                // 모든 파일 처리 끝났을 때 로딩 닫기
                if (processed === totalFiles) {
                    gaiaCommon.LoadingOverlay('body', false);
                }
            });

        }

        $(this).val('');
    });
</script>
{% endblock footer_script %}