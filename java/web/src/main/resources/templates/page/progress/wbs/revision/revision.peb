{% extends 'layout/base_content' %}
{% block content %}

<section class="contents_wrap">
	<article class="conts g-row">
		<div class="group">
			<div class="conts_grid">
				<div class="search_wrap">
					<div class="searchbox_wrap">
						<input type="text" id="searchText" placeholder="EPS {{ message('item.com.024') }}" onkeyup="if(window.event.keyCode == 13) revision.search();">
						<button type="submit" class="icon_btn search" onclick="revision.search();">
							<i class="ic ic-search"></i>
							<span class="blind">검색</span>
						</button>
					</div>
				</div>

				<div class="toolbar">
					<div class="btn_area s_default">
						{{ btnHtml | raw }}
					</div>
				</div>

				<div class="grid" id="revision_grid"></div>
			</div>
		</div>
	</article>
</section>

{% endblock content %}

{% block footer_script %}
<script>
    const bodyHeight = window.innerHeight - 460;
	var selectedCntrctNo;
    var BASEPATH = '/api/progress/wbs/revision';

	var isDelAuth = "{{ isDelAuth }}"; 	// 삭제 권한 여부

	let gridColumns = [
		{name: 'cntrctChgId', 		header: "계약변경ID", 	 hidden: 'true'},
		{name: 'cntrctPhase', 		header: "{{ message('item.revision.001') }}", 	 	align: 'center', width: 100, visible: 'false' },
		{name: 'cntrctChgNo', 		header: "{{ message('item.revision.013') }}", 	 	align: 'center', width: 100},
		{name: 'revisionId', 		header: "Revision", 	 							align: 'center', width: 100},
		{name: 'epsId', 			header: "EPS ID", 		 							align: 'center', resizable: true, ellipsis: true},
		{name: 'epsNm', 			header: "EPS {{ message('item.com.024') }}", 	 	align: 'center', resizable: true, ellipsis: true},
		{name: 'p6ProjectId', 		header: "P6 {{ message('item.revision.002') }} ID", align: 'center', resizable: true, ellipsis: true},
		{name: 'p6ProjectNm', 		header: "P6 {{ message('item.revision.003') }}", 	align: 'center', resizable: true, ellipsis: true},
		{name: 'rmrk', 				header: "{{ message('item.info.028') }}", 		 	align: 'center', ellipsis: true},
		{name: 'lastRevisionYn',  	header: "{{ message('item.revision.004') }}", 	 	align: 'center',
			formatter: function(e){
				if (e.value === 'Y') {
					return `<input class="check_mark" type="checkbox" checked disabled />`;
				} else {
					return `<input class="check_mark" type="checkbox" disabled />`;
				}
			}
		},
		{name: 'rgstDt', 			header: "{{ message('item.revision.005') }}", 	 	align: 'center'},
		{name: 'chgDt', 			header: "{{ message('item.revision.006') }}",  		align: 'center'},
	];

    var revision = {
        init(){
			pjtNo = pjtInfo.pjtNo;
    		cntrctNo = pjtInfo.cntrctNo;

            gaiaCommon.makeCntrctSelectBox(
                    ".contents_wrap .conts",
                    () => {
                        $(".btn_area").hide();
                        revision.changeCntrctList(cntrctNo);
                    },
                    (cntrctNo) => {
                        revision.changeCntrctList(cntrctNo);
                    },
                    (cntrctNo) => {
                        revision.changeCntrctList(cntrctNo);
                    }
            );
        },

		// 계약차수 별 rivision 조회
		changeCntrctList(selectCntrctNo){
            let params = {
                pjtNo: pjtNo,
                cntrctNo: selectCntrctNo,
                searchText: ''
            }
            selectedCntrctNo = selectCntrctNo;
            cntrctNo = selectCntrctNo;

            const searchData = gaia.getSearchData(params);
            if (searchData && Object.keys(searchData).length !== 0) {
                revision.read(searchData);

                Object.entries(searchData).forEach(([key, value]) => {
                    $(`#${key}`).val(value);
                });
            }else{
                revision.read(params);
            }
		},
		// 그리드 데이터 
        read(params){
            const Grid = tui.Grid;
            let _this = this;

            if (this.revisionGrid) {
                this.revisionGrid.destroy(); // 기존 인스턴스 제거
                this.revisionGrid = null;
            }

            const dataSource = createDataSource({
                readData: {
                    url: BASEPATH+'/list',
                    method: "POST",
                    initParams: params
                }
            });

            if (!this.revisionGrid) {
                this.revisionGrid = new Grid({
                    el: document.getElementById('revision_grid'),
                    data: dataSource,
                    scrollX: true,
                    scrollY: true,
                    width: 'auto',
                    bodyHeight: bodyHeight,
                    rowHeaders: [
                        {
                            type: 'checkbox',
                            header: `<input type="checkbox" id="checkAll" class="hidden-input" name="_checked" />`,
                            width: 100,
                            renderer: {
                                type: window.IconRenderer,
                                options:[
									{
										type:"checkbox"
									},
									{
										type:"trash",
										//휴지통 클릭 삭제 시 필요한 값 설정
										url: BASEPATH + '/delete',
										idFields: "cntrctChgId,revisionId", // 선택 고유 값
										auth: isDelAuth == "true",
										keyName: "delRevisionList", // 배열 이름
										msgList: {
											confirmTit: "{{ message('item.revision.012') }}",
											confirmMsg: "{{ message('msg.009') }}",
											completeMsg: "{{ message('msg.006') }}"
										},
										condition:function(rowData){
											if (rowData.lastRevisionYn === "Y") {
												gaiaCommon.customAlert("최종 버전은 삭제할 수 없습니다.");
												return false;
											}
											return true;
										},
										success: function(rowData) {
											let params = {
												pjtNo: pjtNo,
												cntrctNo: $('#cntrctNo').val(),
												searchText: ''
											}
											revision.read(params);
										}
									}
								]
                            }
                        }
                    ],
                    columns: gridColumns,
                    contextMenu: null,
                });
                this.revisionGrid.on('onGridUpdated', () => {
                    const copyGridColumns = JSON.parse(JSON.stringify(gridColumns));
                    const data = this.revisionGrid.getData(); // 현재 데이터 가져오기
                    if (data.length === 0 || data[0].cntrctPhase === '0') {
                        this.revisionGrid.setColumns(copyGridColumns.filter(elem => elem.name !== 'cntrctPhase'));
                    } else {
                        this.revisionGrid.setColumns(copyGridColumns);
                    }
                });
            }
            refreshGrid(this.revisionGrid);
        },

		// Revision 삭제
		delete(){
            const listName = "delRevisionList";
			let selectedRow = [];
			let lastVersion = false;

            const allRows = this.revisionGrid.getCheckedRows();
            console.log(allRows)

            allRows.forEach(row => {
				const revisionRowKey = row.rowKey;
				let revisionRowData = this.revisionGrid.getRow(revisionRowKey); // 그리드에서 해당 행 데이터 가져오기

				let cntrctChgId = revisionRowData.cntrctChgId;
				let revisionId = revisionRowData.revisionId;
				let lastYn = revisionRowData.lastRevisionYn;

				if (lastYn === 'Y') {
					lastVersion = true;
				} else {
					selectedRow.push({
						cntrctChgId: cntrctChgId,
						revisionId: revisionId,
					});
				}
            })

			if(lastVersion) {
				gaiaCommon.customAlert("{{ message('msg.revision.001') }}");
				return;
			}

			if(selectedRow.length === 0 ) {
				gaiaCommon.customAlert("{{ message('msg.021') }}");
				return;
			}

			gaiaCommon.customConfirm("{{ message('item.revision.012') }}", "{{ message('item.revision.012') }}", "{{ message('msg.009') }}", function(){
				let data = { [listName] : selectedRow};
				$.ajax({
					url: BASEPATH+'/delete',
					method: 'POST',
					dataType: 'json',
					contentType: 'application/json; charset=utf-8',
					data: JSON.stringify(data),
					success: function(result){
						gaiaCommon.customAlert("{{ message('msg.006') }}");

                        //revision.read(params);
                        location.reload();
					}
				})
			})
		},
		// 검색버튼 클릭
		search(){
			let text = $('#searchText').val();
			let searchParams = {
				pjtNo: pjtNo,
				cntrctNo: selectedCntrctNo,
				searchText: text
			}
			revision.read(searchParams);

            gaia.setSearchData(searchParams);
		},
		// 가져오기 버튼 클릭
		loadP6Data(){
            if (isCAIROS()) {
                let url = `/progress/wbs/revision/create?type=d&cntrctNo=${cntrctNo}`+`&pjtNo=${pjtInfo.pjtNo}`;
                window.location.href = url;
            } else {
                cntrctNo = $('#cntrctNo').val();
                let url = `/progress/wbs/revision/create?type=d&cntrctNo=${cntrctNo}`+`&pjtNo=${pjtInfo.pjtNo}`;

                window.location.href = url;
            }
		},
	}

    $(function () {
        gaia.create({
            $init: function ($params) {
		        gaiaPortal.navMenuInit("M020201", "{{ message('item.revision.011') }}");
		        revision.init();              
               
                gaia.loaded = true;
            }
        });
    });

</script>
{% endblock footer_script %}