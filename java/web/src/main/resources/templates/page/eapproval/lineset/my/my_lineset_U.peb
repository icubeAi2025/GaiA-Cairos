<div class="modal open" id="update_modal">
    <div class="pop_box _md">
        <div class="pop_header">
            <h5 class="pop_tit">{{ message('item.app.062') }}</h5>
            <div class="btn_area">
                <button type="button" class="icon_btn pop_close" onclick="updateModal.close()">
                    <i class="ic ic-close"></i>
                    <span class="tooltip">{{ message('item.com.037') }}</span>
                </button>
            </div>

        </div>
        <div class="pop_body">
            <div class="form_box" style="margin-bottom: 25px;">
                <div class="row">
                    <div class="col">
                        <div class="form_label required">{{ message('item.app.058') }}</div>
                        <div class="form_data">
                            <input type="text" id="apLineNm" maxlength="30">
                        </div>
                    </div>
                </div>
            </div>
            <div class="box default">
                <div class="btn_area s_small">
                    <button type="button" class="btn _fill" id="addBtn" onclick="updateModal.addLine()">
                        <i class="ic ic-people-plus-one"></i>
                        {{ message('btn.022') }}
                    </button>
                </div>
                <p class="data_info" id="info_msg">{{ message('msg.app.005') }} "{{ message('btn.001') }}" {{ message('msg.app.006') }}</p>
                <ol id="modal_apLine" class="sortable_list ol_colorsquare"></ol>
                <script>
                    $(function () {
                        $(".sortable_list").sortable();
                    });
                </script>
            </div>
        </div>

        <div class="pop_footer">
            <div class="btn_area s_default jc_e">
                <button type="button" class="btn _outline" onclick="updateModal.close()">{{ message('btn.005') }}</button>
                <button type="button" class="btn _fill" id="ckeckAppLine" onclick="updateModal.save()">{{ message('btn.006') }}</button>
            </div>
        </div>
    </div>
</div>

{% include "page/eapproval/lineset/lineset_dept" %}

<script>

    var updateModal = {
        apLineNo: '{{apLineNo}}',
        open(){
            $('#update_modal').addClass('open');
        },
        close(){
            $('#update_modal').removeClass('open');
            $('#popup').empty();
        },
        getApLine(){
            gaiaCommon.get(`/api/eapproval/lineset/detail/${updateModal.apLineNo}/${pjtInfo.cntrctNo}`, "", function(result) {
                gaiaCommon.LoadingOverlay('body', false);
                let list = result.details.detailList;
                if(list && list.length > 0) {
                    $('#apLineNm').val(list[0].ap_line_nm);
                    $('#info_msg').hide();
                    list.map(obj => {
                        lineCnt++;
                        lineIndex++;
                        $('#modal_apLine').append(updateModal.makeHtml(obj));
                        selectUsers.push({userId: obj.ap_usr_id, apDivType:obj.ap_div});
                    })
                }
            }, function (error) {
                gaiaCommon.customAlert("[서버오류] 다시 시도해주세요.", function () {
                    updateModal.close();
                });
            });
        },
        addLine(){
            lineCnt++;
            if(lineCnt > 0) {
                $('#info_msg').hide();
            }
            lineIndex++;
            $('#modal_apLine').append(this.makeHtml());
        },
        makeHtml(obj = {}){
            const data = {
                apDiv: $.isEmptyObject(obj) ? "A" : obj.ap_div,
                usrId: $.isEmptyObject(obj) ? "" : obj.ap_usr_id,
                loginId: $.isEmptyObject(obj) ? "" : obj.ap_login_id,
                viewNm: !$.isEmptyObject(obj) ? (obj.dept_nm ? `${obj.usr_nm} / ${obj.dept_nm}` : obj.usr_nm) : "",
                usrNm: $.isEmptyObject(obj) ? "" : obj.usr_nm,
                choiceStatus: $.isEmptyObject(obj) ? "false" : "true",
            }

            const textA = data.apDiv === 'A' ? "selected" : "";
            const textB = data.apDiv !== 'A' ? "selected" : "";

            return `<li class="sortable_item appLine" data-index="${lineIndex}">
                        <div class="item_group">
                            <div class="search_wrap w-full">
                                <span class="selectbox">
                                    <select name="" id="apDivType" onchange="updateModal.changeApDiv(this)">
                                        <option value="A" ${textA}>{{ message('item.app.008') }}</option>
                                        <option value="R" ${textB}>{{ message('item.app.009') }}</option>
                                    </select>
                                </span>
                                <div class="searchbox_wrap">
                                    <input type="text" class="search_event" id="addAppLineName"
                                        placeholder="{{ message('msg.app.022') }}"
                                        oninput="page.search(event)"
                                        onkeyup="if(window.event.keyCode == 13 ) page.search(event)"
                                        value="${data.viewNm}">
                                    <button type="button" class="icon_btn search_event" onclick="page.search(event)">
                                        <i class="ic ic-search"></i>
                                        <span class="blind">검색</span>
                                    </button>
                                    <button type="button" class="icon_btn" onclick="deptModal.open(${lineIndex}, 'my')">
                                        <i class="ic ic-broadcast-one"></i>
                                        <span class="blind">조직도보기</span>
                                    </button>
                                    <div class="lay_pop filter_list" id="autoMaker"><div>
                                </div>
                            </div>
                            <button type="button" class="icon_btn" id="delAppLine" onclick="page.delLine(event);">
                                <i class="ic ic-close"></i>
                                <span class="blind">삭제</span>
                            </button>
                        </div>
                        <input type="hidden" id="choiceStatus" value="${data.choiceStatus}">
                        <input type="hidden" id="add_usr_id" value="${data.usrId}">
                        <input type="hidden" id="add_login_id" value="${data.loginId}">
                        <input type="hidden" id="usr_nm" value="${data.usrNm}">
                    </li>`;
        },
        save(){
            let lineSet = [];
            var appLine = $(".sortable_item.appLine:visible");

            if(!$('#apLineNm').val()) {
                gaiaCommon.customAlert("{{ message('msg.app.047') }}");
                $('#apLineNm').focus();
                return
            }

            if(selectUsers.length < 1) {
                gaiaCommon.customAlert("{{ message('msg.app.049') }}");
                return
            }

            $(appLine).each(function(index, obj) {
                let apDiv = $(obj).find('#apDivType').val()
                let usrId =  $(obj).find('#add_usr_id').val();
                let loginId =  $(obj).find('#add_login_id').val();

                if(apDiv && usrId && loginId) {
                    lineSet.push({
                        apOrder: index+1,
                        apDiv: apDiv,
                        apUsrId: usrId,
                        apLoginId: loginId,
                        apLineNo: updateModal.apLineNo
                    })
                }
            })

            let data = {
                apLinesetMng: {
                    indvdlYn: 'Y',
                    apType: '01',
                    apLineNm: $('#apLineNm').val(),
                    apLineNo: updateModal.apLineNo
                },
                apLineSet: lineSet,
            }

            gaiaCommon.LoadingOverlay('body', true);
            gaiaCommon.post("/api/eapproval/lineset/update-my-lineset", data, function(result) {
                gaiaCommon.customAlert("{{ message('msg.007') }}", function () {
                    location.reload();
                });
            }, function (error) {
                gaiaCommon.customAlert("{{ message('msg.060') }}", function () {
                    location.reload();
                });
            });
        },
        changeApDiv(target){
            let usrId = $(target).closest('li').find('#add_usr_id').val();
            let apDiv = $(target).val();
            let prevDiv = apDiv === 'A' ? 'R' : 'A';

            if(usrId === '') {
                return
            }

            let isDuplicate = updateModal.duplicate(usrId, apDiv);

            if (isDuplicate) {
                gaiaCommon.customAlert("{{ message('msg.app.023') }}");
                selectUsers = selectUsers.filter(item => !(item.userId === usrId && item.apDivType === prevDiv));
                $(target).closest('li').find('#add_usr_id').val('');
                $(target).closest('li').find('#add_login_id').val('');
                $(target).closest('li').find('#usr_nm').val('');
                $(target).closest('li').find('#addAppLineName').val('');
                return;
            }

        },
    }

    $(document).on('click', function(event) {
        var $target = $(event.target);

        // 결재선
        if (!$target.closest('.lay_pop.filter_list').length) {
            $('#modal_apLine .lay_pop.filter_list').removeClass('on');
        }

    });


    // 검색결과 focus이벤트
    $(document).on('click focus blur', '.search_event', function(event) {
        let focusYn = event.type === 'focus' || event.type === 'click';
        page.setFocus(event, focusYn);
    });


    $(function(){
        lineCnt = 0;
        lineIndex = 0;
        selectUsers = [];

        updateModal.getApLine();

        gaia.loaded = true;
    })

</script>