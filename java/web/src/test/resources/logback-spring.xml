<?xml version="1.0" encoding="UTF-8" ?>
<!-- 60초마다 설정 파일의 변경을 확인하여 변경시 갱신 -->
<configuration scan="true" scanPeriod="60 seconds">
<!--    <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator"/>-->
<!--    <statusListener class="ch.qos.logback.core.status.OnConsoleStatusListener" />-->
    <contextListener class="kr.co.ideait.platform.gaiacairos.core.config.logback.LoggerStartupListener"/>
<!--    <statusListener class="kr.co.ideait.core.config.logback.LoggerStatusListener"/>-->

    <!-- 로그 패턴에 색상 적용 %clr(pattern){color} https://logback.qos.ch/manual/layouts.html#coloring -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />

    <!-- springProfile 태그를 사용하여 profile 별 property 값 설정 -->
    <springProfile name="local">
        <!-- 로컬서버 log file path -->
<!--        <if condition='p("platform").equals("gaia")'>-->
<!--            <then><property name="LOG_PATH" value="D:\logs\gaia"/></then>-->
<!--        </if>-->
        <property name="LOG_PATH" value="D:\logs\${platform}"/>
        <property name="LOG_LEVEL" value="DEBUG"/>

        <logger name="org.springframework.boot.autoconfigure" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="org.springframework.beans" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="org.springframework.context" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="org.springframework.orm" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="org.springframework.jmx" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="org.springframework.security" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="org.springframework.data" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="org.springframework.web.servlet.DispatcherServlet" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="org.mybatis.spring" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="com.zaxxer.hikari.pool" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="org.hibernate" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
    </springProfile>
    <springProfile name="dev">
        <!-- 개발서버 log file path -->
        <property name="LOG_PATH" value="/home/ubuntu/GAIA/logs/${platform}"/>
        <property name="LOG_LEVEL" value="DEBUG"/>

        <logger name="org.springframework.boot.autoconfigure" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="org.springframework.beans" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="org.springframework.context" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="org.springframework.orm" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="org.springframework.jmx" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="org.springframework.security" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="org.springframework.data" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="org.springframework.web.servlet.DispatcherServlet" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="org.mybatis.spring" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="com.zaxxer.hikari.pool" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
        <logger name="org.hibernate" level="ERROR" additive="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </logger>
    </springProfile>
    <springProfile name="prod">
        <!-- 운용서버 log file path -->
        <property name="LOG_PATH" value="/home/ubuntu/logs/${platform}"/>
        <property name="LOG_LEVEL" value="DEBUG"/>
    </springProfile>

    <property name="CONSOLE_PATTERN_TYPE1" value="%d{yyyy-MM-dd HH:mm:ss.SSS, ${logback.timezone:-Asia/Seoul}} %magenta([[%thread]]) [%X{request_id}] %yellow([%-3level]) %logger{5} - %msg %n" />
    <property name="CONSOLE_PATTERN_TYPE2" value="%green([%d{yyyy-MM-dd HH:mm:ss, ${logback.timezone:-Asia/Seoul}}:%-3relative]) %magenta([%thread]) [%X{request_id}] %yellow(%-5level) %red(${PID:-}) %blue(---) %cyan(%-40.40logger{36}) %clr(:){faint} %msg%n"/>
    <property name="FILE_LOG_PATTERN_TYPE1" value="%d{yyyy-MM-dd HH:mm:ss.SSS, ${logback.timezone:-Asia/Seoul}} [%X{request_id}] %logger{5} - %msg %n" />
    <property name="FILE_LOG_PATTERN_TYPE2" value="%green([%d{yyyy-MM-dd HH:mm:ss, ${logback.timezone:-Asia/Seoul}}:%-3relative]) %magenta([%thread]) [%X{request_id}] %-5level %red(${PID:-}) %blue(---) %logger{36} : %msg%n"/>
    <property name="FILE_NAME" value="application" />
    <property name="MAX_FILE_SIZE" value="10MB" />
    <property name="TOTAL_SIZE" value="500MB" />
    <property name="MAX_HISTORY" value="30" />

    <!-- Console Appender -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${CONSOLE_PATTERN_TYPE2}</pattern>
        </encoder>
    </appender>

     <!-- File Appender -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 파일경로 설정 -->
        <file>${LOG_PATH}/${FILE_NAME}.log</file>
        <!-- Rolling 정책 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- .gz .zip 등을 넣으면 자동 일자별 로그 파일 압축 -->
            <fileNamePattern>${LOG_PATH}/${FILE_NAME}_%d{yyyy-MM-dd, ${logback.timezone:-Asia/Seoul}}.%i.log</fileNamePattern>
             <!-- 하루 단위로 로그 파일 생성 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- 일자별 로그 파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거 -->
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <!-- 전체 파일 크기를 제어하며, 전체 크기 제한을 조과하면 가장 오래된 파일을 삭제 -->
            <totalSizeCap>${TOTAL_SIZE}</totalSizeCap>
        </rollingPolicy>

        <!-- 출력패턴 설정 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${FILE_LOG_PATTERN_TYPE2}</pattern>
        </encoder>
    </appender>

    <root level="${LOG_LEVEL}">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
    </root>
</configuration>