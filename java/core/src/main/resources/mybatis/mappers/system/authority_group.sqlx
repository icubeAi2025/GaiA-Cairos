<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.authority_group">


    <select id="selectAuthorityGroupList_old" parameterType="input" resultType="output">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.authority_group.selectCommonCodeList][hsjang]  */
        select
            rght_grp_no,
            rght_grp_cd,
            pjt_no,
            cntrct_no,
            pjt_type,
            rght_grp_nm_eng,
            rght_grp_nm_krn,
            rght_grp_dscrpt,
            rght_grp_ty,
            rght_grp_role,
            use_yn,
            dlt_yn,
            rgstr_id,
            rgst_dt,
            chg_id,
            chg_dt,
            dlt_id,
            dlt_dt
        from
            gaia_cmis.sm_authority_group
        where 
            dlt_yn = 'N'
            <if test="user.cntrctNo != null and user.cntrctNo != ''">
                and cntrct_no = #{user.cntrctNo}
            </if>
            <if test="wildcardText != null and wildcardText != ''">
                and (
                        rght_grp_cd ilike #{wildcardText} 
                    or rght_grp_nm_eng ilike #{wildcardText}
                    or rght_grp_nm_krn ilike #{wildcardText}
                    or rght_grp_dscrpt ilike #{wildcardText}
                )
            </if>
        <!-- <include refid="sqlx.commonPageable"></include> -->
    </select>

    <select id="selectAuthorityGroupList" parameterType="input" resultType="output">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.authority_group.selectAuthorityGroupList][hsjang]  */
        SELECT  A.RGHT_GRP_CD       AS RGHT_GRP_CD,
                CASE 
                    WHEN #{lang} = 'ko' THEN A.RGHT_GRP_NM_KRN
                    WHEN #{lang} = 'en' THEN A.RGHT_GRP_NM_ENG
                    ELSE A.RGHT_GRP_NM_KRN
                END                 AS RGHT_GRP_NM,
                A.RGHT_GRP_DSCRPT   AS RGHT_GRP_DSCRPT,
                A.RGHT_GRP_TY       AS RGHT_GRP_TY,
                A.RGHT_GRP_NO		AS RGHT_GRP_NO,
                A.CNTRCT_NO		AS CNTRCT_NO,
                A.PJT_NO		AS PJT_NO,
                A.PJT_TYPE      AS PJT_TYPE,
                CASE 
                    WHEN #{lang} = 'ko' THEN B.CMN_CD_NM_KRN
                    WHEN #{lang} = 'en' THEN B.CMN_CD_NM_ENG
                    ELSE B.CMN_CD_NM_KRN
                END                 AS RGHT_GRP_TY_NM,
                CASE 
                    WHEN #{lang} = 'ko' THEN C.CMN_CD_NM_KRN
                    WHEN #{lang} = 'en' THEN C.CMN_CD_NM_ENG
                    ELSE C.CMN_CD_NM_KRN
                END                 AS RGHT_GRP_ROLE_NM,
                CASE    WHEN A.USE_YN = 'Y' THEN '사용'
                                            ELSE '미사용'
                END  AS USE_YN,
                TO_CHAR(A.CHG_DT, 'FMYYYY-MM-DD') AS CHG_DT
        FROM    SM_AUTHORITY_GROUP A
        LEFT JOIN SM_COM_CODE B
                ON	A.RGHT_GRP_TY = B.CMN_CD
                AND B.CMN_GRP_CD = #{grpTyCd}
        LEFT JOIN SM_COM_CODE C
                ON	A.RGHT_GRP_ROLE = C.CMN_CD
                AND C.CMN_GRP_CD = #{grpRoleCd}
        <where>
                A.DLT_YN = 'N'
        AND     CNTRCT_NO = #{cntrctNo}
            <choose>
                <when test="columnNm != null and columnNm == 'rght_grp_nm' and lang == 'ko'">
                    AND A.RGHT_GRP_NM_KRN ILIKE CONCAT('%', #{text}, '%')
                </when>
                <when test="columnNm != null and columnNm == 'rght_grp_nm' and lang == 'en'">
                    AND A.RGHT_GRP_NM_ENG ILIKE CONCAT('%', #{text}, '%')
                </when>
                <when test="columnNm != null and columnNm == 'rght_grp_ty_nm'">
                    AND (
                        CASE 
                            WHEN #{lang} = 'ko' THEN B.CMN_CD_NM_KRN
                            WHEN #{lang} = 'en' THEN B.CMN_CD_NM_ENG
                            ELSE B.CMN_CD_NM_KRN
                        END LIKE '%' || #{text} || '%'
                    )
                </when>
                <when test="columnNm != null and columnNm == 'rght_grp_role_nm'">
                    AND (
                        CASE 
                            WHEN #{lang} = 'ko' THEN C.CMN_CD_NM_KRN
                            WHEN #{lang} = 'en' THEN C.CMN_CD_NM_ENG
                            ELSE C.CMN_CD_NM_KRN
                        END LIKE '%' || #{text} || '%'
                    )
                </when>
                <when test="columnNm != null and columnNm == 'rght_grp_dscrpt'">
                    AND A.RGHT_GRP_DSCRPT ILIKE CONCAT('%', #{text}, '%')
                </when>
            </choose>
        </where>
    </select>

    <select id="selectAuthorityGroupUserList_old" parameterType="input" resultType="output">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.authority_group.selectAuthorityGroupUserList][hsjang]  */
        select
            a.rght_grp_usr_no,
            a.rght_grp_no,
            a.rght_grp_cd,
            a.rght_grp_usr_ty,
            a.auth_no,
            c.comp_nm,
            d.dept_nm,
            '' as login_id,
            '' as usr_nm,
            '' as ratng_cd,
            '' as pstn_cd,
            '' as use_yn,
            now() as chg_dt
        from
            gaia_cmis.sm_authority_group_users a
        inner join gaia_cmis.sm_department d
            on a.rght_grp_usr_ty = 'D'
            and a.auth_no = d.dept_no
            and a.rght_grp_no = #{rghtGrpNo}
        left outer join gaia_cmis.sm_company c
            on d.corp_no = c.corp_no
        <if test="wildcardText != null and wildcardText != ''">
        where  d.dept_nm ilike #{wildcardText}
        </if>

        union all

        select
            a.rght_grp_usr_no,
            a.rght_grp_no,
            a.rght_grp_cd,
            a.rght_grp_usr_ty,
            a.auth_no,
            c.comp_nm,
            d.dept_nm,
            u.login_id,
            u.usr_nm,
            u.ratng_cd,
            u.pstn_cd,
            u.use_yn,
            u.chg_dt
        from
            gaia_cmis.sm_authority_group_users a
        inner join gaia_cmis.sm_organization o
            on a.rght_grp_usr_ty in ('U','R')
            and a.auth_no = o.org_no
            and a.rght_grp_no = #{rghtGrpNo}
        inner join gaia_cmis.sm_user_info u
            on o.usr_id = u.usr_id
        inner join gaia_cmis.sm_department d
            on o.dept_no = d.dept_no
        left outer join gaia_cmis.sm_company c
            on d.corp_no = c.corp_no
        <if test="wildcardText != null and wildcardText != ''">
        where  (
                    d.dept_nm ilike #{wildcardText}
                or u.usr_nm ilike #{wildcardText}
        )
        </if>
    </select>

    <select id="selectAuthorityGroupUserList" parameterType="authorityGroupUserInput" resultType="authorityGroupUsersOutput">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.authority_group.selectAuthorityGroupUserList][thkim]  */
        	SELECT 
                <if test='rghtGrpTy != null and rghtGrpTy != "D"'>
                    -- 그룹 구분이 사용자, 역할인 경우 
                    D.LOGIN_ID  AS LOGIN_ID,
                    D.PSTN_CD   AS PSTN_CD,
                    D.RATNG_CD  AS RATNG_CD,
                    D.FLAG  AS FLAG,
                    E.USR_NM,
                    CASE 
                        WHEN #{lang} = 'ko' THEN F.CMN_CD_NM_KRN
                        WHEN #{lang} = 'en' THEN F.CMN_CD_NM_ENG
                        ELSE F.CMN_CD_NM_KRN
                    END AS PSTN_NM,
                    CASE 
                        WHEN #{lang} = 'ko' THEN G.CMN_CD_NM_KRN
                        WHEN #{lang} = 'en' THEN G.CMN_CD_NM_ENG
                        ELSE G.CMN_CD_NM_KRN
                    END AS RATNG_NM,
                    CASE 
                        WHEN #{lang} = 'ko' THEN H.CMN_CD_NM_KRN
                        WHEN #{lang} = 'en' THEN H.CMN_CD_NM_ENG
                        ELSE H.CMN_CD_NM_KRN
                    END AS FLAG_NM,
                </if>
                    A.RGHT_GRP_USR_NO   AS RGHT_GRP_USR_NO,
                    A.AUTH_NO   AS AUTH_NO,
                    C.DEPT_ID   AS DEPT_ID,
                    c.DEPT_NO   AS DEPT_NO,
                    C.DEPT_NM   AS DEPT_NM
                <if test='rghtGrpTy != null and rghtGrpTy == "D"'>
                    , (
                        SELECT STRING_AGG(usr_nm, ',')
                        FROM (
                            SELECT b.usr_nm
                            FROM sm_organization a
                            INNER JOIN sm_user_info b
                            ON a.usr_id = b.usr_id
                            WHERE a.dept_no = c.dept_no
                            AND a.dlt_yn = 'N'
                            AND b.dlt_yn = 'N'
                            AND c.dlt_yn = 'N'
                            ORDER BY b.usr_nm ASC
                        ) s
                    ) dept_users
                </if>
            FROM    SM_AUTHORITY_GROUP_USERS A
                LEFT JOIN SM_AUTHORITY_GROUP B
                        ON A.RGHT_GRP_NO = B.RGHT_GRP_NO
                        AND B.DLT_YN = 'N'
                <choose>
                    <when test='rghtGrpTy != null and rghtGrpTy != "D"'>
                        --그룹 구분이 사용자, 역할인 경우
                        LEFT JOIN SM_ORGANIZATION D
                                ON D.ORG_NO = A.AUTH_NO
                                AND D.DLT_YN = 'N'
                        LEFT JOIN SM_DEPARTMENT C
                                ON D.DEPT_NO = C.DEPT_NO
                                AND C.DLT_YN = 'N'
                        LEFT JOIN SM_USER_INFO E
                                ON E.LOGIN_ID = D.LOGIN_ID
                                AND E.DLT_YN = 'N'
                        LEFT JOIN SM_COM_CODE F
                                ON	D.PSTN_CD = F.CMN_CD
                                AND F.CMN_GRP_CD = #{pstnCd}
                        LEFT JOIN SM_COM_CODE G
                                ON	D.RATNG_CD = G.CMN_CD
                                AND G.CMN_GRP_CD = #{ratngCd}
                        LEFT JOIN SM_COM_CODE H
                                ON	D.FLAG = H.CMN_CD
                                AND H.CMN_GRP_CD = #{flagCd}
                    </when> 
                    <otherwise>
                        LEFT JOIN SM_DEPARTMENT C
                            ON A.AUTH_NO = C.DEPT_NO
                            AND C.DLT_YN = 'N'
                    </otherwise>
                </choose>
            <where>
                    B.CNTRCT_NO = #{cntrctNo}
                AND B.RGHT_GRP_NO = #{rghtGrpNo}
                <choose>
                    <when test="columnNm != null and columnNm == 'dept_nm'">
                        AND C.DEPT_NM ILIKE CONCAT('%', #{text}, '%')
                    </when>
                    <when test="columnNm != null and columnNm == 'dept_id'">
                        AND C.DEPT_ID ILIKE CONCAT('%', #{text}, '%')
                    </when>
                    <when test="columnNm != null and columnNm == 'usr_nm'">
                        AND E.USR_NM ILIKE CONCAT('%', #{text}, '%')
                    </when>
                    <when test="columnNm != null and columnNm == 'login_id'">
                        AND E.LOGIN_ID ILIKE CONCAT('%', #{text}, '%')
                    </when>
                    <when test="columnNm != null and columnNm == 'pstn_nm'">
                        AND (
                            CASE 
                                WHEN #{lang} = 'ko' THEN F.CMN_CD_NM_KRN
                                WHEN #{lang} = 'en' THEN F.CMN_CD_NM_ENG
                                ELSE F.CMN_CD_NM_KRN
                            END LIKE '%' || #{text} || '%'
                        )
                    </when>
                    <when test="columnNm != null and columnNm == 'ratng_nm'">
                        AND (
                            CASE 
                                WHEN #{lang} = 'ko' THEN G.CMN_CD_NM_KRN
                                WHEN #{lang} = 'en' THEN G.CMN_CD_NM_ENG
                                ELSE G.CMN_CD_NM_KRN
                            END LIKE '%' || #{text} || '%'
                        )
                    </when>
                    <when test="columnNm != null and columnNm == 'flag_nm'">
                        AND (
                            CASE 
                                WHEN #{lang} = 'ko' THEN H.CMN_CD_NM_KRN
                                WHEN #{lang} = 'en' THEN H.CMN_CD_NM_ENG
                                ELSE H.CMN_CD_NM_KRN
                            END LIKE '%' || #{text} || '%'
                        )
                    </when>
                </choose>
            </where>
            <include refid="sqlx.commonPageable"></include>
    </select>

    <select id="selectAuthorityGroupUserListCount" parameterType="authorityGroupUserInput" resultType="long">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.authority_group.selectAuthorityGroupUserListCount][thkim]  */
        SELECT 
                COUNT(A.*)
        FROM    SM_AUTHORITY_GROUP_USERS A
        INNER JOIN SM_AUTHORITY_GROUP B
            ON A.RGHT_GRP_NO = B.RGHT_GRP_NO
            AND B.DLT_YN = 'N'
            <choose>
                <when test='rghtGrpTy != null and rghtGrpTy != "D"'>
                    --그룹 구분이 사용자, 역할인 경우
                    LEFT JOIN SM_ORGANIZATION D
                            ON D.ORG_NO = A.AUTH_NO
                            AND D.DLT_YN = 'N'
                    LEFT JOIN SM_DEPARTMENT C
                            ON D.DEPT_NO = C.DEPT_NO
                            AND C.DLT_YN = 'N'
                    LEFT JOIN SM_USER_INFO E
                            ON E.LOGIN_ID = D.LOGIN_ID
                            AND E.DLT_YN = 'N'
                    LEFT JOIN SM_COM_CODE F
                            ON	D.PSTN_CD = F.CMN_CD
                            AND F.CMN_GRP_CD = #{pstnCd}
                    LEFT JOIN SM_COM_CODE G
                            ON	D.RATNG_CD = G.CMN_CD
                            AND G.CMN_GRP_CD = #{ratngCd}
                    LEFT JOIN SM_COM_CODE H
                            ON	D.FLAG = H.CMN_CD
                            AND H.CMN_GRP_CD = #{flagCd}
                </when> 
                <otherwise>
                    LEFT JOIN SM_DEPARTMENT C
                        ON A.AUTH_NO = C.DEPT_NO
                        AND C.DLT_YN = 'N'
                </otherwise>
            </choose>
            <where>
                    B.CNTRCT_NO = #{cntrctNo}
                AND B.RGHT_GRP_NO = #{rghtGrpNo}
                <choose>
                    <when test="columnNm != null and columnNm == 'dept_nm'">
                        AND C.DEPT_NM ILIKE CONCAT('%', #{text}, '%')
                    </when>
                    <when test="columnNm != null and columnNm == 'usr_nm'">
                        AND E.USR_NM ILIKE CONCAT('%', #{text}, '%')
                    </when>
                    <when test="columnNm != null and columnNm == 'login_id'">
                        AND E.LOGIN_ID ILIKE CONCAT('%', #{text}, '%')
                    </when>
                    <when test="columnNm != null and columnNm == 'pstn_nm'">
                        AND (
                            CASE 
                                WHEN #{lang} = 'ko' THEN F.CMN_CD_NM_KRN
                                WHEN #{lang} = 'en' THEN F.CMN_CD_NM_ENG
                                ELSE F.CMN_CD_NM_KRN
                            END LIKE '%' || #{text} || '%'
                        )
                    </when>
                    <when test="columnNm != null and columnNm == 'ratng_nm'">
                        AND (
                            CASE 
                                WHEN #{lang} = 'ko' THEN G.CMN_CD_NM_KRN
                                WHEN #{lang} = 'en' THEN G.CMN_CD_NM_ENG
                                ELSE G.CMN_CD_NM_KRN
                            END LIKE '%' || #{text} || '%'
                        )
                    </when>
                </choose>
            </where>
    </select>
    <select id="selectAuthorityGroupUserListByRghtGrpCd" resultType="smAuthorityGroupUsers">
        select * from sm_authority_group_users
        where rght_grp_cd = #{rghtGrpCd}
    </select>

    <select id="selectAuthorityGroupListByUsrIdAndCntrctNo" resultType="smAuthorityGroup">
        select sag.* from (
            select * from sm_authority_group
            where cntrct_no = #{cntrctNo}
            and dlt_yn = 'N'
        ) sag
            join sm_authority_group_users sagu
            on sag.rght_grp_cd = sagu.rght_grp_cd
            join (
                select * from sm_organization
                where usr_id = #{usrId} and dlt_yn = 'N'
            ) so
            on so.org_no = sagu.auth_no
                or so.dept_no = sagu.auth_no
    </select>




	<!--권한 설정 로직 추가로 인한 신규 쿼리들 추가 Start-->

	<!--권한 그룹 추가시 전체 메뉴의 권한 설정 정보 가져오기-->
	<select id="selectAllMenuAuthorityInfo" parameterType="input" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.authority_group.selectAllMenuAuthorityInfo][gwLee]  */
        SELECT 	A.MENU_CD AS MENU_CD,
				A.MENU_NM AS MENU_NM,
				C.RGHT_KIND AS RGHT_KIND,
				C.RGHT_KIND_NM AS RGHT_KIND_NM,
				A.MENU_URL AS MENU_URL,
				A.LEVEL AS LEVEL,
				ARRAY_TO_STRING (	ARRAY_REMOVE 	(	B.NAME_DEPTH, '메뉴 ROOT'
													), ' <![CDATA[>]]> '
								) AS NAME_PATH
		FROM 	( 	WITH RECURSIVE SM_MENU_LIST ( 	MENU_CD,
													MENU_NM,
													MENU_URL,
													DEPTH,
													PATH,
													CYCLE 
												) 
                    AS 	( 	SELECT 	A.MENU_CD,
									A.MENU_NM,
									A.MENU_URL,
									1,
									ARRAY[A.MENU_CD::TEXT],
									FALSE
							FROM 	SM_MENU A
							WHERE 	A.MENU_CD = 'M'
							UNION ALL
							SELECT 	A.MENU_CD,
									A.MENU_NM,
									A.MENU_URL,
									B.DEPTH + 1,
									ARRAY_APPEND(B.PATH, CAST(A.MENU_DSPLY_ORDR AS TEXT)::TEXT),
									A.MENU_CD = ANY(B.PATH)
							FROM 	SM_MENU A,
									SM_MENU_LIST B
							WHERE 	A.UP_MENU_CD = B.MENU_CD
							AND 	A.MENU_USE_YN = 'Y'
							AND 	A.DLT_YN = 'N'
							AND 	A.MENU_DIV IN ('A', #{systemType})
							AND 	NOT CYCLE
                        )
					SELECT 	MENU_CD,
							MENU_NM,
							MENU_URL,
							DEPTH AS LEVEL,
							PATH
					FROM 	SM_MENU_LIST
				) AS A,
				(	WITH RECURSIVE SM_MENU_LIST ( 	MENU_CD,
													DEPTH,
													PATH,
													CYCLE 
												) 
                    AS 	( 	SELECT 	A.MENU_CD,
									1,
									ARRAY[A.MENU_NM::TEXT],
									FALSE
							FROM 	SM_MENU A
							WHERE 	A.MENU_CD = 'M'
							UNION ALL
							SELECT 	A.MENU_CD,
									B.DEPTH + 1,
									ARRAY_APPEND(B.PATH, CAST(A.MENU_NM AS TEXT)::TEXT),
									A.MENU_CD = ANY(B.PATH)
							FROM 	SM_MENU A,
									SM_MENU_LIST B
							WHERE 	A.UP_MENU_CD = B.MENU_CD
							AND 	A.MENU_USE_YN = 'Y'
							AND 	A.DLT_YN = 'N'
							AND 	A.MENU_DIV IN ('A', #{systemType})
							AND 	NOT CYCLE
                        )
					SELECT 	MENU_CD AS MENU_CD,
							PATH AS NAME_DEPTH
					FROM 	SM_MENU_LIST
				) AS B,
				( 	SELECT 	MENU_CD,
							RGHT_KIND,
							( 	SELECT 	AA.CMN_CD_NM_KRN
								FROM 	SM_COM_CODE AA
								WHERE 	AA.USE_YN = 'Y'
								AND 	AA.DLT_YN = 'N'
								AND 	AA.CMN_GRP_CD = #{cmnGrpCd}
								AND 	AA.CMN_CD = RGHT_KIND
							) AS RGHT_KIND_NM
					FROM 	SM_RESOURCES
					WHERE 	USE_YN = 'Y'
					AND 	DLT_YN = 'N'
					AND 	NULLIF(TRIM(MENU_CD), '') IS NOT NULL
					AND 	NULLIF(TRIM(RGHT_KIND), '') IS NOT NULL
					GROUP BY 	MENU_CD,
								RGHT_KIND
				) AS C
		WHERE 	A.MENU_CD = B.MENU_CD
		AND 	A.MENU_CD = C.MENU_CD
		AND 	NULLIF(TRIM(A.MENU_URL), '') IS NOT NULL
		ORDER BY 	(CASE WHEN A.MENU_CD = 'COMMON' THEN 1 ELSE 2 END),
					CAST(COALESCE(A.PATH[2], '0') AS INTEGER),
					CAST(COALESCE(A.PATH[3], '0') AS INTEGER),
					PATH,
					ARRAY_POSITION ( ARRAY['VIEW', 'ADD', 'MOD', 'DEL']::VARCHAR[], C.RGHT_KIND )
    </select>  

	<!--권한 그룹의 설정 메뉴권한 저장하기-->
	<insert id="insertGroupAllMenuAuthorityInfo" parameterType="map">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.authority_group.insertGroupAllMenuAuthorityInfo][gwLee]  */
		 INSERT INTO SM_MENU_AUTHORITY_MAPPING 	(	MENU_CD, 
		 											RGHT_GRP_CD, 
													RGHT_KIND, 
													RGSTR_ID, 
													RGST_DT
												)
		VALUES
		<foreach collection="list" item="item" separator=",">
				( 	#{item.menuCd},
					#{item.rghtGrpCd},
					#{item.rghtKind},
					#{item.rgstrId},
					NOW()
				)
		</foreach>
	</insert>  

	<!--권한 그룹 수정시 설정된 전체 메뉴의 권한 정보 가져오기-->
	<select id="selectAllMenuAuthoritySetupInfo" parameterType="input" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.authority_group.selectAllMenuAuthoritySetupInfo][gwLee]  */
		SELECT 	A.MENU_CD AS MENU_CD,
				A.MENU_NM AS MENU_NM,
				A.RGHT_KIND AS RGHT_KIND,
				A.RGHT_KIND_NM AS RGHT_KIND_NM,
				A.MENU_URL AS MENU_URL,
				A.LEVEL AS LEVEL,
				A.NAME_PATH AS NAME_PATH, 
				CASE 
					WHEN NULLIF(TRIM(B.MENU_CD), '') IS NOT NULL 
						THEN 'Y' 
					ELSE 'N' 
				END AS CHECK_YN 
		FROM 	( 	SELECT 	A.MENU_CD AS MENU_CD,
							A.MENU_NM AS MENU_NM,
							C.RGHT_KIND AS RGHT_KIND,
							C.RGHT_KIND_NM AS RGHT_KIND_NM,
							A.MENU_URL AS MENU_URL,
							A.LEVEL AS LEVEL,
							A.PATH AS NUM_PATH,
							ARRAY_TO_STRING (	ARRAY_REMOVE 	(	B.NAME_DEPTH, '메뉴 ROOT'
																), ' <![CDATA[>]]> '
											) AS NAME_PATH
					FROM 	( 	WITH RECURSIVE SM_MENU_LIST ( 	MENU_CD,
																MENU_NM,
																MENU_URL,
																DEPTH,
																PATH,
																CYCLE 
															) 
								AS 	( 	SELECT 	A.MENU_CD,
												A.MENU_NM,
												A.MENU_URL,
												1,
												ARRAY[A.MENU_CD::TEXT],
												FALSE
										FROM 	SM_MENU A
										WHERE 	A.MENU_CD = 'M'
										UNION ALL
										SELECT 	A.MENU_CD,
												A.MENU_NM,
												A.MENU_URL,
												B.DEPTH + 1,
												ARRAY_APPEND(B.PATH, CAST(A.MENU_DSPLY_ORDR AS TEXT)::TEXT),
												A.MENU_CD = ANY(B.PATH)
										FROM 	SM_MENU A,
												SM_MENU_LIST B
										WHERE 	A.UP_MENU_CD = B.MENU_CD
										AND 	A.MENU_USE_YN = 'Y'
										AND 	A.DLT_YN = 'N'
										AND 	A.MENU_DIV IN ('A', #{systemType})
										AND 	NOT CYCLE
									)
								SELECT 	MENU_CD,
										MENU_NM,
										MENU_URL,
										DEPTH AS LEVEL,
										PATH
								FROM 	SM_MENU_LIST
							) AS A,
							(	WITH RECURSIVE SM_MENU_LIST ( 	MENU_CD,
																DEPTH,
																PATH,
																CYCLE 
															) 
								AS 	( 	SELECT 	A.MENU_CD,
												1,
												ARRAY[A.MENU_NM::TEXT],
												FALSE
										FROM 	SM_MENU A
										WHERE 	A.MENU_CD = 'M'
										UNION ALL
										SELECT 	A.MENU_CD,
												B.DEPTH + 1,
												ARRAY_APPEND(B.PATH, CAST(A.MENU_NM AS TEXT)::TEXT),
												A.MENU_CD = ANY(B.PATH)
										FROM 	SM_MENU A,
												SM_MENU_LIST B
										WHERE 	A.UP_MENU_CD = B.MENU_CD
										AND 	A.MENU_USE_YN = 'Y'
										AND 	A.DLT_YN = 'N'
										AND 	A.MENU_DIV IN ('A', #{systemType})
										AND 	NOT CYCLE
									)
								SELECT 	MENU_CD AS MENU_CD,
										PATH AS NAME_DEPTH
								FROM 	SM_MENU_LIST
							) AS B,
							( 	SELECT 	MENU_CD,
										RGHT_KIND,
										( 	SELECT 	AA.CMN_CD_NM_KRN
											FROM 	SM_COM_CODE AA
											WHERE 	AA.USE_YN = 'Y'
											AND 	AA.DLT_YN = 'N'
											AND 	AA.CMN_GRP_CD = #{cmnGrpCd}
											AND 	AA.CMN_CD = RGHT_KIND
										) AS RGHT_KIND_NM
								FROM 	SM_RESOURCES
								WHERE 	USE_YN = 'Y'
								AND 	DLT_YN = 'N'
								AND 	NULLIF(TRIM(MENU_CD), '') IS NOT NULL
								AND 	NULLIF(TRIM(RGHT_KIND), '') IS NOT NULL
								GROUP BY 	MENU_CD,
											RGHT_KIND
							) AS C
					WHERE 	A.MENU_CD = B.MENU_CD
					AND 	A.MENU_CD = C.MENU_CD
					AND 	NULLIF(TRIM(A.MENU_URL), '') IS NOT NULL) AS A
				LEFT JOIN SM_MENU_AUTHORITY_MAPPING B 	ON 	A.MENU_CD = B.MENU_CD 
														AND A.RGHT_KIND = B.RGHT_KIND 
														AND B.RGHT_GRP_CD = (	SELECT 	RGHT_GRP_CD 
																				FROM 	SM_AUTHORITY_GROUP 
																				WHERE 	RGHT_GRP_NO = #{rghtGrpNo}
																			)
		ORDER BY 	(CASE WHEN A.MENU_CD = 'COMMON' THEN 1 ELSE 2 END),
					CAST(COALESCE(A.NUM_PATH[2], '0') AS INTEGER),
					CAST(COALESCE(A.NUM_PATH[3], '0') AS INTEGER),
					A.NUM_PATH,
					ARRAY_POSITION ( ARRAY['VIEW', 'ADD', 'MOD', 'DEL']::VARCHAR[], A.RGHT_KIND )
    </select>

	<!-- 권한그룹 수정시 설정된 권학을 삭제 할 경우 사용 -->
	<delete id="deleteAuthorityGroupRghtKind" parameterType="input">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.authority_group.deleteAuthorityGroupRghtKind][gwlee] */		
		WITH DELETED AS (
    		DELETE 
			FROM 	SM_MENU_AUTHORITY_MAPPING
			WHERE 	MENU_CD = #{menuCd}
			AND 	RGHT_GRP_CD = #{rghtGrpCd}
			AND 	RGHT_KIND = #{rghtKind} RETURNING *
		)
		INSERT INTO SM_MENU_AUTHORITY_MAPPING_DEL_LOG 	(	MENU_CD, 
															RGHT_GRP_CD, 
															RGHT_KIND, 
															RGSTR_ID, 
															RGST_DT
														)
		SELECT 	MENU_CD, 
				RGHT_GRP_CD, 
				RGHT_KIND, 
				#{rgstrId}, 
				NOW()
		FROM 	DELETED		
	</delete>  

	<!-- 권한그룹 그리드에서 체크하여 삭제 할 경우 사용 -->
	<delete id="gridDeleteAuthorityGroupRghtKind" parameterType="input">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.authority_group.gridDeleteAuthorityGroupRghtKind][gwlee] */		
		WITH DELETED AS (
    		DELETE 
			FROM 	SM_MENU_AUTHORITY_MAPPING
			WHERE 	RGHT_GRP_CD = 	(	SELECT 	RGHT_GRP_CD 
										FROM 	SM_AUTHORITY_GROUP 
										WHERE 	RGHT_GRP_NO = #{rghtGrpNo}
									) RETURNING *
		)
		INSERT INTO SM_MENU_AUTHORITY_MAPPING_DEL_LOG 	(	MENU_CD, 
															RGHT_GRP_CD, 
															RGHT_KIND, 
															RGSTR_ID, 
															RGST_DT
														)
		SELECT 	MENU_CD, 
				RGHT_GRP_CD, 
				RGHT_KIND, 
				#{rgstrId}, 
				NOW()
		FROM 	DELETED		
	</delete>  
	<!--권한 설정 로직 추가로 인한 신규 쿼리들 추가 End-->

    <!-- 부서 관리에서 부서 또는 사용자(직원) 삭제 시, 해당 권한 그룹 사용자 삭제-->
	<delete id="deleteAuthorityGroupUserList" parameterType="input">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.authority_group.deleteAuthorityGroupUserList][thkim] */
        DELETE FROM SM_AUTHORITY_GROUP_USERS
        WHERE
            RGHT_GRP_USR_TY = #{rghtGrpUsrTy}
        <if test="authNoList != null and authNoList.size > 0">
                AND AUTH_NO IN
                <foreach collection="authNoList" item="authNo" open="(" separator="," close=")">
                    #{authNo}
                </foreach>
        </if>
        <!-- 빈 목록이면 아무 것도 지우지 않음-->
        <if test="authNoList == null or authNoList.size == 0">
            AND 1 = 0
        </if>
    </delete>
</mapper>