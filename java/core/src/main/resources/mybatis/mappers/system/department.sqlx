<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.department">

    <select id="selectAdminFirstDepartmentList" parameterType="string" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.department.selectAdminFirstDepartmentList][hsjang]  */
        SELECT  A.DEPT_ID AS DEPT_ID,
                A.DEPT_NO AS DEPT_NO,
                (CASE WHEN COALESCE(A.UP_DEPT_ID, '') = '' THEN '#' ELSE A.UP_DEPT_ID END) AS UP_DEPT_ID,
                A.DEPT_NM AS DEPT_NM,
                A.PJT_NO AS PJT_NO,
                A.CNTRCT_NO AS CNTRCT_NO,
                A.PJT_TYPE AS PJT_TYPE,
                A.CORP_NO AS CORP_NO,
                'SEARCH' AS ACTION_TYPE,
                A.RGST_DT,
                A.DEPT_UUID
        FROM    SM_DEPARTMENT A
        WHERE   A.DEPT_ID = 'A'

        UNION ALL 

        SELECT  A.DEPT_ID AS DEPT_ID,
                A.DEPT_NO AS DEPT_NO,
                (CASE WHEN COALESCE(A.UP_DEPT_ID, '') = '' THEN '#' ELSE A.UP_DEPT_ID END) AS UP_DEPT_ID,
                A.DEPT_NM AS DEPT_NM,
                A.PJT_NO AS PJT_NO,
                A.CNTRCT_NO AS CNTRCT_NO,
                A.PJT_TYPE AS PJT_TYPE,
                A.CORP_NO AS CORP_NO,
                'SEARCH' AS ACTION_TYPE,
                A.RGST_DT,
                A.DEPT_UUID
        FROM    SM_DEPARTMENT A
        WHERE   A.DEPT_ID = 'WBS'

        UNION ALL

        SELECT  A.DEPT_ID AS DEPT_ID,
                A.DEPT_NO AS DEPT_NO,
                A.UP_DEPT_ID AS UP_DEPT_ID,
                A.DEPT_NM AS DEPT_NM,
                A.PJT_NO AS PJT_NO,
                A.CNTRCT_NO AS CNTRCT_NO,
                A.PJT_TYPE AS PJT_TYPE,
                A.CORP_NO AS CORP_NO,
                (CASE WHEN COALESCE(LEVEL, 0) = 2 THEN 'SEARCH' ELSE 'NOT' END) AS ACTION_TYPE,
                A.RGST_DT,
                A.DEPT_UUID
        FROM    (   WITH RECURSIVE SM_DEPARTMENT_LIST ( DEPT_ID,
                                                        DEPT_NO,
                                                        UP_DEPT_ID,
                                                        DEPT_NM,
                                                        PJT_NO,
                                                        CNTRCT_NO,
                                                        PJT_TYPE,
                                                        CORP_NO,
                                                        DSPLY_ORDR,
                                                        DEPTH,
                                                        PATH,
                                                        CYCLE,
                                                        RGST_DT,
                                                        DEPT_UUID) AS (    SELECT  A.DEPT_ID,
                                                                                A.DEPT_NO,
                                                                                A.UP_DEPT_ID,
                                                                                A.DEPT_NM,
                                                                                A.PJT_NO,
                                                                                A.CNTRCT_NO,
                                                                                A.PJT_TYPE,
                                                                                A.CORP_NO,
                                                                                A.DSPLY_ORDR,
                                                                                1,
                                                                                ARRAY[A.DEPT_ID::TEXT],
                                                                                FALSE,
                                                                                A.RGST_DT,
                                                                                A.DEPT_UUID
                                                                        FROM    SM_DEPARTMENT A
                                                                        WHERE   A.DEPT_ID = 'G'
                                                                        AND     A.DLT_YN = 'N'
                                                                        UNION ALL
                                                                        SELECT  A.DEPT_ID,
                                                                                A.DEPT_NO,
                                                                                A.UP_DEPT_ID,
                                                                                A.DEPT_NM,
                                                                                A.PJT_NO,
                                                                                A.CNTRCT_NO,
                                                                                A.PJT_TYPE,
                                                                                A.CORP_NO,
                                                                                A.DSPLY_ORDR,
                                                                                B.DEPTH + 1,
                                                                                ARRAY_APPEND(B.PATH,
                                                                                CAST(A.DSPLY_ORDR AS TEXT)::TEXT),
                                                                                A.DEPT_ID = ANY(B.PATH),
                                                                                A.RGST_DT,
                                                                                A.DEPT_UUID
                                                                        FROM    SM_DEPARTMENT A,
                                                                                SM_DEPARTMENT_LIST B
                                                                        WHERE   A.UP_DEPT_ID = B.DEPT_ID
                                                                        AND     A.DLT_YN = 'N'
                                                                        AND     NOT CYCLE
                                                                        AND EXISTS(
                                                                            SELECT 1 FROM CN_PROJECT P WHERE P.DLT_YN = 'N' AND P.PJT_NO = A.PJT_NO and p.con_pstats != '0601'
                                                                        )
                                                                    )
                    SELECT  DEPT_ID,
                            DEPT_NO,
                            (CASE WHEN COALESCE(UP_DEPT_ID, '') = '' THEN '#' ELSE UP_DEPT_ID END) AS UP_DEPT_ID,
                            DEPT_NM,
                            PJT_NO,
                            CNTRCT_NO,
                            DSPLY_ORDR,
                            DEPTH AS LEVEL,
                            PATH,
                            RGST_DT,
                            PJT_TYPE,
                            CORP_NO,
                            DEPT_UUID
                    FROM    SM_DEPARTMENT_LIST A
                    WHERE   DEPTH <![CDATA[<]]> 3
                    ORDER BY RGST_DT DESC, DEPT_NM) AS A
					
		UNION ALL 

        SELECT  A.DEPT_ID AS DEPT_ID,
                A.DEPT_NO AS DEPT_NO,
                A.UP_DEPT_ID AS UP_DEPT_ID,
                A.DEPT_NM AS DEPT_NM,
                A.PJT_NO AS PJT_NO,
                A.CNTRCT_NO AS CNTRCT_NO,
                A.PJT_TYPE AS PJT_TYPE,
                A.CORP_NO AS CORP_NO,
                (CASE WHEN COALESCE(LEVEL, 0) = 3 THEN 'SEARCH' ELSE 'NOT' END) AS ACTION_TYPE,
                A.RGST_DT,
                A.DEPT_UUID
        FROM    (   WITH RECURSIVE SM_DEPARTMENT_LIST ( DEPT_ID,
                                                        DEPT_NO,
                                                        UP_DEPT_ID,
                                                        DEPT_NM,
                                                        PJT_NO,
                                                        CNTRCT_NO,
                                                        PJT_TYPE,
                                                        CORP_NO,
                                                        DSPLY_ORDR,
                                                        DEPTH,
                                                        PATH,
                                                        CYCLE,
                                                        RGST_DT,
                                                        DEPT_UUID) AS (    SELECT  A.DEPT_ID,
                                                                                A.DEPT_NO,
                                                                                A.UP_DEPT_ID,
                                                                                A.DEPT_NM,
                                                                                A.PJT_NO,
                                                                                A.CNTRCT_NO,
                                                                                A.PJT_TYPE,
                                                                                A.CORP_NO,
                                                                                A.DSPLY_ORDR,
                                                                                1,
                                                                                ARRAY[A.DEPT_ID::TEXT],
                                                                                FALSE,
                                                                                A.RGST_DT,
                                                                                A.DEPT_UUID
                                                                        FROM    SM_DEPARTMENT A
                                                                        WHERE   A.DEPT_ID = 'C'
                                                                        AND     A.DLT_YN = 'N'
                                                                        UNION ALL
                                                                        SELECT  A.DEPT_ID,
                                                                                A.DEPT_NO,
                                                                                A.UP_DEPT_ID,
                                                                                A.DEPT_NM,
                                                                                A.PJT_NO,
                                                                                A.CNTRCT_NO,
                                                                                A.PJT_TYPE,
                                                                                A.CORP_NO,
                                                                                A.DSPLY_ORDR,
                                                                                B.DEPTH + 1,
                                                                                ARRAY_APPEND(B.PATH,
                                                                                CAST(A.DSPLY_ORDR AS TEXT)::TEXT),
                                                                                A.DEPT_ID = ANY(B.PATH),
                                                                                A.RGST_DT,
                                                                                A.DEPT_UUID
                                                                        FROM    SM_DEPARTMENT A,
                                                                                SM_DEPARTMENT_LIST B
                                                                        WHERE   A.UP_DEPT_ID = B.DEPT_ID
                                                                        AND     A.DLT_YN = 'N'
                                                                        AND     NOT CYCLE
                                                                        AND EXISTS(
                                                                            SELECT 1 FROM CN_PROJECT P WHERE P.DLT_YN = 'N' AND P.PJT_NO = A.PJT_NO and p.con_pstats != '0601'
                                                                        )
                                                                    )
                SELECT  DEPT_ID,
                        DEPT_NO,
                        (CASE WHEN COALESCE(UP_DEPT_ID, '') = '' THEN '#' ELSE UP_DEPT_ID END) AS UP_DEPT_ID,
                        DEPT_NM,
                        PJT_NO,
                        CNTRCT_NO,
                        DSPLY_ORDR,
                        DEPTH AS LEVEL,
                        PATH,
                        RGST_DT,
                        PJT_TYPE,
                        CORP_NO,
                        DEPT_UUID
                FROM    SM_DEPARTMENT_LIST A
                WHERE   DEPTH <![CDATA[<]]> 4
                ORDER BY RGST_DT DESC, DEPT_NM) AS A
        </select>

        <select id="selectAdminSecondDepartmentList" parameterType="string" resultType="map">
            /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.department.selectAdminSecondDepartmentList][hsjang]  */
            SELECT  A.DEPT_NO as DEPT_NO,
                    A.DEPT_ID AS DEPT_ID,
                    A.UP_DEPT_ID AS UP_DEPT_ID,
                    A.DEPT_NM AS DEPT_NM,
                    A.PJT_NO AS PJT_NO,
                    A.CNTRCT_NO AS CNTRCT_NO,
                    (CASE   WHEN COALESCE(A.DEPT_NM, '') = '관리관' THEN 'SEARCH'
                            WHEN COALESCE(LEVEL, 0) = 3 THEN 'SEARCH'
                            ELSE 'NOT' END) AS ACTION_TYPE,
                    A.DEPT_UUID
            FROM    (   WITH RECURSIVE SM_DEPARTMENT_LIST(  DEPT_NO,
                                                            DEPT_ID,
                                                            UP_DEPT_ID,
                                                            DEPT_NM,
                                                            PJT_NO,
                                                            CNTRCT_NO,
                                                            DSPLY_ORDR,
                                                            DEPTH,
                                                            PATH,
                                                            CYCLE,
                                                            DEPT_UUID) AS   (   SELECT  A.DEPT_NO,
                                                                                    A.DEPT_ID,
                                                                                    A.UP_DEPT_ID,
                                                                                    A.DEPT_NM,
                                                                                    A.PJT_NO,
                                                                                    A.CNTRCT_NO,
                                                                                    A.DSPLY_ORDR,
                                                                                    1,
                                                                                    ARRAY[A.DEPT_ID::TEXT],
                                                                                    FALSE,
                                                                                    A.DEPT_UUID
                                                                            FROM    SM_DEPARTMENT A
                                                                            WHERE   A.DEPT_ID = #{deptId}
                                                                            AND     A.DLT_YN = 'N'
                                                                            UNION ALL
                                                                            SELECT  A.DEPT_NO,
                                                                                    A.DEPT_ID,
                                                                                    A.UP_DEPT_ID,
                                                                                    A.DEPT_NM,
                                                                                    A.PJT_NO,
                                                                                    A.CNTRCT_NO,
                                                                                    A.DSPLY_ORDR,
                                                                                    B.DEPTH + 1,
                                                                                    ARRAY_APPEND(B.PATH,
                                                                                    CAST(A.DSPLY_ORDR AS TEXT)::TEXT),
                                                                                    A.DEPT_ID = ANY(B.PATH),
                                                                                    A.DEPT_UUID
                                                                            FROM    SM_DEPARTMENT A,
                                                                                    SM_DEPARTMENT_LIST B
                                                                            WHERE   A.UP_DEPT_ID = B.DEPT_ID
                                                                            AND     A.DLT_YN = 'N'
                                                                            AND     NOT CYCLE
                                                                        )
                    SELECT  DEPT_NO,
                            DEPT_ID,
                            (CASE WHEN COALESCE(DEPTH, 2) = 2 THEN '#' ELSE UP_DEPT_ID END) AS UP_DEPT_ID,
                            DEPT_NM,
                            PJT_NO,
                            CNTRCT_NO,
                            DSPLY_ORDR,
                            DEPTH AS LEVEL,
                            PATH,
                            DEPT_UUID
                    FROM    SM_DEPARTMENT_LIST
                    WHERE   DEPTH <![CDATA[>]]> 1
                    ORDER BY PATH) AS A
    </select>

    <insert id="createDepartment" parameterType="kr.co.ideait.platform.gaiacairos.core.persistence.entity.SmDepartment">
    /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.department.createDepartment][thkim]  */
        INSERT INTO SM_DEPARTMENT (
            DEPT_NO,
            CORP_NO,
            PJT_NO,
            CNTRCT_NO,
            PJT_TYPE,
            DEPT_ID,
            DEPT_NM,
            DEPT_DSCRPT,
            UP_DEPT_ID,
            DEPT_LVL,
            DSPLY_ORDR,
            PSTN_NM,
            MNG_NM,
            USE_YN,
            DLT_YN,
            RGSTR_ID,
            RGST_DT,
            CHG_ID,
            CHG_DT,
            DSPLY_YN,
            SVR_TYPE,
            DEPT_YN,
            DEPT_UUID
        )
        VALUES (
            NEXTVAL('sm_department_dept_no_seq'::regclass),
            #{corpNo},
            #{pjtNo},
            #{cntrctNo},
            #{pjtType},
            #{deptId},
            #{deptNm},
            #{deptDscrpt},
            #{upDeptId},
            #{deptLvl},
            COALESCE(
                (
                    SELECT MAX(DSPLY_ORDR) + 1 
                    FROM SM_DEPARTMENT 
                    WHERE UP_DEPT_ID = #{upDeptId}
                ), 1),
            #{pstnNm},
            #{mngNm},
            #{useYn},
            #{dltYn},
            #{rgstrId},
            NOW(),
            #{chgId},
            NOW(),
            #{dsplyYn},
            #{svrType},
            'Y',
            #{deptUuid}
        )
    </insert>

    <select id="getEmployeeDetailsAdmin" parameterType="getEmployeeDetailsInput" resultType="output">
        SELECT 
            A.USR_ID,
            A.LOGIN_ID,
            A.USR_NM,
            B.RATNG_CD,
            B.PSTN_CD,
            A.PHONE_NO,
            A.TEL_NO,
            A.EMAIL_ADRS,
            A.USE_YN,
            B.DEPT_NO,
            C.PJT_TYPE,
            C.DEPT_NM,
            D.PJT_NM AS CNTRCT_NM,
            -- 언어에 따라 KRN 또는 ENG 값을 선택
            CASE 
                WHEN #{lang} = 'ko' THEN E.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN E.CMN_CD_NM_ENG
                ELSE E.CMN_CD_NM_KRN
            END AS PSTN_NM,
            CASE 
                WHEN #{lang} = 'ko' THEN F.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN F.CMN_CD_NM_ENG
                ELSE F.CMN_CD_NM_KRN
            END AS RATNG_NM,
            CASE 
                WHEN #{lang} = 'ko' THEN G.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN G.CMN_CD_NM_ENG
                ELSE G.CMN_CD_NM_KRN
            END AS FLAG_NM
        FROM SM_USER_INFO A
            JOIN SM_ORGANIZATION B
                ON A.USR_ID = B.USR_ID
                AND B.DLT_YN = 'N'
            JOIN SM_DEPARTMENT C
                ON B.DEPT_NO = C.DEPT_NO
                AND C.DLT_YN = 'N'
            JOIN CN_PROJECT D
                ON C.PJT_NO = D.PJT_NO
            LEFT JOIN SM_COM_CODE E
                ON B.PSTN_CD = E.CMN_CD
                AND E.CMN_GRP_CD = '5c4cc11d-ea98-4ffc-a451-74f6e004384d'
            LEFT JOIN SM_COM_CODE F
                ON B.RATNG_CD = F.CMN_CD
                AND F.CMN_GRP_CD = '7de5a73e-ec43-475a-a10b-78cbc4ceec77'
            LEFT JOIN SM_COM_CODE G
                ON B.FLAG = G.CMN_CD
                AND G.CMN_GRP_CD = '5e939c68-643c-45a8-87c8-1c28564dd45f'
        WHERE A.USR_ID = #{employeeId}
        AND C.PJT_TYPE = 'GAIA'

        UNION ALL

        SELECT
            A.USR_ID,
            A.LOGIN_ID,
            A.USR_NM,
            B.RATNG_CD,
            B.PSTN_CD,
            A.PHONE_NO,
            A.TEL_NO,
            A.EMAIL_ADRS,
            A.USE_YN,
            B.DEPT_NO,
            C.PJT_TYPE,
            C.DEPT_NM,
            D.CNTRCT_NM,
            CASE 
                WHEN #{lang} = 'ko' THEN E.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN E.CMN_CD_NM_ENG
                ELSE E.CMN_CD_NM_KRN
            END AS PSTN_NM,
            CASE 
                WHEN #{lang} = 'ko' THEN F.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN F.CMN_CD_NM_ENG
                ELSE F.CMN_CD_NM_KRN
            END AS RATNG_NM,
            CASE 
                WHEN #{lang} = 'ko' THEN G.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN G.CMN_CD_NM_ENG
                ELSE G.CMN_CD_NM_KRN
            END AS FLAG_NM
        FROM SM_USER_INFO A
            JOIN SM_ORGANIZATION B
                ON A.USR_ID = B.USR_ID
                AND B.DLT_YN = 'N'
            JOIN SM_DEPARTMENT C
                ON B.DEPT_NO = C.DEPT_NO
                AND C.DLT_YN = 'N'
            JOIN CN_CONTRACT D
                ON C.PJT_NO = D.PJT_NO
                AND C.CNTRCT_NO = D.CNTRCT_NO
            LEFT JOIN SM_COM_CODE E
                ON B.PSTN_CD = E.CMN_CD
                AND E.CMN_GRP_CD = '5c4cc11d-ea98-4ffc-a451-74f6e004384d'
            LEFT JOIN SM_COM_CODE F
                ON B.RATNG_CD = F.CMN_CD
                AND F.CMN_GRP_CD = '7de5a73e-ec43-475a-a10b-78cbc4ceec77'
            LEFT JOIN SM_COM_CODE G
                ON B.FLAG = G.CMN_CD
                AND G.CMN_GRP_CD = '5e939c68-643c-45a8-87c8-1c28564dd45f'
        WHERE A.USR_ID = #{employeeId}
        AND C.PJT_TYPE = 'CAIROS'

        UNION ALL

        SELECT
            A.USR_ID,
            A.LOGIN_ID,
            A.USR_NM,
            B.RATNG_CD,
            B.PSTN_CD,
            A.PHONE_NO,
            A.TEL_NO,
            A.EMAIL_ADRS,
            A.USE_YN,
            B.DEPT_NO,
            C.PJT_TYPE,
            C.DEPT_NM,
            '' AS CNTRCT_NM,
            CASE 
                WHEN #{lang} = 'ko' THEN E.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN E.CMN_CD_NM_ENG
                ELSE E.CMN_CD_NM_KRN
            END AS PSTN_NM,
            CASE 
                WHEN #{lang} = 'ko' THEN F.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN F.CMN_CD_NM_ENG
                ELSE F.CMN_CD_NM_KRN
            END AS RATNG_NM,
            CASE 
                WHEN #{lang} = 'ko' THEN G.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN G.CMN_CD_NM_ENG
                ELSE G.CMN_CD_NM_KRN
            END AS FLAG_NM
        FROM SM_USER_INFO A
            JOIN SM_ORGANIZATION B
                ON A.USR_ID = B.USR_ID
                AND B.DLT_YN = 'N'
            JOIN SM_DEPARTMENT C
                ON B.DEPT_NO = C.DEPT_NO
                AND C.DLT_YN = 'N'
            LEFT JOIN SM_COM_CODE E
                ON B.PSTN_CD = E.CMN_CD
                AND E.CMN_GRP_CD = '5c4cc11d-ea98-4ffc-a451-74f6e004384d'
            LEFT JOIN SM_COM_CODE F
                ON B.RATNG_CD = F.CMN_CD
                AND F.CMN_GRP_CD = '7de5a73e-ec43-475a-a10b-78cbc4ceec77'
            LEFT JOIN SM_COM_CODE G
                ON B.FLAG = G.CMN_CD
                AND G.CMN_GRP_CD = '5e939c68-643c-45a8-87c8-1c28564dd45f'
        WHERE A.USR_ID = #{employeeId}
        AND C.PJT_TYPE = 'WBS'
        UNION ALL
        SELECT
            A.USR_ID,
            A.LOGIN_ID,
            A.USR_NM,
            B.RATNG_CD,
            B.PSTN_CD,
            A.PHONE_NO,
            A.TEL_NO,
            A.EMAIL_ADRS,
            A.USE_YN,
            B.DEPT_NO,
            C.PJT_TYPE,
            C.DEPT_NM,
            '' AS CNTRCT_NM,
            CASE
                WHEN #{lang} = 'ko' THEN E.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN E.CMN_CD_NM_ENG
                ELSE E.CMN_CD_NM_KRN
                END AS PSTN_NM,
            CASE
                WHEN #{lang} = 'ko' THEN F.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN F.CMN_CD_NM_ENG
                ELSE F.CMN_CD_NM_KRN
                END AS RATNG_NM,
            CASE
                WHEN #{lang} = 'ko' THEN G.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN G.CMN_CD_NM_ENG
                ELSE G.CMN_CD_NM_KRN
                END AS FLAG_NM
        FROM SM_USER_INFO A
                 JOIN SM_ORGANIZATION B
                      ON A.USR_ID = B.USR_ID
                          AND B.DLT_YN = 'N'
                 JOIN SM_DEPARTMENT C
                      ON B.DEPT_NO = C.DEPT_NO
                          AND C.DLT_YN = 'N'
                 LEFT JOIN SM_COM_CODE E
                           ON B.PSTN_CD = E.CMN_CD
                               AND E.CMN_GRP_CD = '5c4cc11d-ea98-4ffc-a451-74f6e004384d'
                 LEFT JOIN SM_COM_CODE F
                           ON B.RATNG_CD = F.CMN_CD
                               AND F.CMN_GRP_CD = '7de5a73e-ec43-475a-a10b-78cbc4ceec77'
                 LEFT JOIN SM_COM_CODE G
                           ON B.FLAG = G.CMN_CD
                               AND G.CMN_GRP_CD = '5e939c68-643c-45a8-87c8-1c28564dd45f'
        WHERE A.USR_ID = #{employeeId}
          AND C.CNTRCT_NO = 'ADMIN'

    </select>

    <select id="getEmployeeDetailsGaia" parameterType="getEmployeeDetailsInput" resultType="output">
        SELECT 
            A.USR_ID,
            A.LOGIN_ID,
            A.USR_NM,
            B.RATNG_CD,
            B.PSTN_CD,
            A.PHONE_NO,
            A.TEL_NO,
            A.EMAIL_ADRS,
            A.USE_YN,
            B.DEPT_NO,
            C.PJT_TYPE,
            C.DEPT_NM,
            D.PJT_NM AS CNTRCT_NM,
            -- 언어에 따라 KRN 또는 ENG 값을 선택
            CASE 
                WHEN #{lang} = 'ko' THEN E.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN E.CMN_CD_NM_ENG
                ELSE E.CMN_CD_NM_KRN
            END AS PSTN_NM,
            CASE 
                WHEN #{lang} = 'ko' THEN F.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN F.CMN_CD_NM_ENG
                ELSE F.CMN_CD_NM_KRN
            END AS RATNG_NM,
            CASE 
                WHEN #{lang} = 'ko' THEN G.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN G.CMN_CD_NM_ENG
                ELSE G.CMN_CD_NM_KRN
            END AS FLAG_NM
        FROM SM_USER_INFO A
            JOIN SM_ORGANIZATION B
                ON A.USR_ID = B.USR_ID
                AND B.DLT_YN = 'N'
            JOIN SM_DEPARTMENT C
                ON B.DEPT_NO = C.DEPT_NO
                AND C.DLT_YN = 'N'
            JOIN CN_PROJECT D
                ON C.PJT_NO = D.PJT_NO
            LEFT JOIN SM_COM_CODE E
                ON B.PSTN_CD = E.CMN_CD
                AND E.CMN_GRP_CD = '5c4cc11d-ea98-4ffc-a451-74f6e004384d'
            LEFT JOIN SM_COM_CODE F
                ON B.RATNG_CD = F.CMN_CD
                AND F.CMN_GRP_CD = '7de5a73e-ec43-475a-a10b-78cbc4ceec77'
            LEFT JOIN SM_COM_CODE G
                ON B.FLAG = G.CMN_CD
                AND G.CMN_GRP_CD = '5e939c68-643c-45a8-87c8-1c28564dd45f'
        WHERE A.USR_ID = #{employeeId}
        AND C.PJT_TYPE = 'GAIA'
        AND C.PJT_NO = #{pjtNo}
       	AND C.CNTRCT_NO = #{cntrctNo};
    </select>

    <select id="getEmployeeDetailsCairos" parameterType="getEmployeeDetailsInput" resultType="output">
        SELECT
            A.USR_ID,
            A.LOGIN_ID,
            A.USR_NM,
            B.RATNG_CD,
            B.PSTN_CD,
            A.PHONE_NO,
            A.TEL_NO,
            A.EMAIL_ADRS,
            A.USE_YN,
            B.DEPT_NO,
            C.PJT_TYPE,
            C.DEPT_NM,
            D.CNTRCT_NM,
            CASE 
                WHEN #{lang} = 'ko' THEN E.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN E.CMN_CD_NM_ENG
                ELSE E.CMN_CD_NM_KRN
            END AS PSTN_NM,
            CASE 
                WHEN #{lang} = 'ko' THEN F.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN F.CMN_CD_NM_ENG
                ELSE F.CMN_CD_NM_KRN
            END AS RATNG_NM,
            CASE 
                WHEN #{lang} = 'ko' THEN G.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN G.CMN_CD_NM_ENG
                ELSE G.CMN_CD_NM_KRN
            END AS FLAG_NM
        FROM SM_USER_INFO A
            JOIN SM_ORGANIZATION B
                ON A.USR_ID = B.USR_ID
                AND B.DLT_YN = 'N'
            JOIN SM_DEPARTMENT C
                ON B.DEPT_NO = C.DEPT_NO
                AND C.DLT_YN = 'N'
            JOIN CN_CONTRACT D
                ON C.PJT_NO = D.PJT_NO
                AND C.CNTRCT_NO = D.CNTRCT_NO
            LEFT JOIN SM_COM_CODE E
                ON B.PSTN_CD = E.CMN_CD
                AND E.CMN_GRP_CD = '5c4cc11d-ea98-4ffc-a451-74f6e004384d'
            LEFT JOIN SM_COM_CODE F
                ON B.RATNG_CD = F.CMN_CD
                AND F.CMN_GRP_CD = '7de5a73e-ec43-475a-a10b-78cbc4ceec77'
            LEFT JOIN SM_COM_CODE G
                ON B.FLAG = G.CMN_CD
                AND G.CMN_GRP_CD = '5e939c68-643c-45a8-87c8-1c28564dd45f'
        WHERE A.USR_ID = #{employeeId}
        AND C.PJT_TYPE = 'CAIROS'
        AND C.PJT_NO = #{pjtNo}
       	AND C.CNTRCT_NO = #{cntrctNo};
    </select>

    <select id="selectDepartmentEmploeeListByDeptNo" parameterType="getEmployeeListInput" resultType="output">
    /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.department.selectDepartmentEmploeeListByDeptNo][hsjang]  */
        SELECT
            A.DEPT_NO,
            --A.CORP_NO,
            A.PJT_NO,
            A.CNTRCT_NO,
            --A.PJT_TYPE,
            A.DEPT_ID,
            A.DEPT_NM,
            --A.DEPT_DSCRPT,
            --A.UP_DEPT_ID,
            --A.DEPT_LVL,
            --A.DSPLY_ORDR,
            --A.PSTN_NM AS DEPT_PSTN_NM,
            --A.MNG_NM,
            D.COMP_NM,
            B.ORG_NO,
            B.PSTN_CD,
            B.RATNG_CD,
            B.FLAG,
            TO_CHAR(B.START_DT, 'YYYY-MM-DD') AS START_DT,
            TO_CHAR(B.END_DT, 'YYYY-MM-DD') AS END_DT,
            C.LOGIN_ID,
            C.USR_NM,
            C.USR_ID,
            C.PHONE_NO,
            C.USE_YN,
            C.TEL_NO,
            C.EMAIL_ADRS,
            -- 언어에 따라 KRN 또는 ENG 값을 선택
            CASE 
                WHEN #{lang} = 'ko' THEN E.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN E.CMN_CD_NM_ENG
                ELSE E.CMN_CD_NM_KRN
            END AS PSTN_NM,
            CASE 
                WHEN #{lang} = 'ko' THEN F.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN F.CMN_CD_NM_ENG
                ELSE F.CMN_CD_NM_KRN
            END AS RATNG_NM,
            CASE 
                WHEN #{lang} = 'ko' THEN G.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN G.CMN_CD_NM_ENG
                ELSE G.CMN_CD_NM_KRN
            END AS FLAG_NM
        FROM
            SM_DEPARTMENT A
            INNER JOIN SM_ORGANIZATION B ON A.DEPT_UUID = B.DEPT_UUID
            LEFT OUTER JOIN SM_USER_INFO C ON B.USR_ID = C.USR_ID 
            LEFT OUTER JOIN SM_COMPANY D ON B.CORP_NO = D.CORP_NO
            LEFT JOIN SM_COM_CODE E
                ON B.PSTN_CD = E.CMN_CD
                AND E.CMN_GRP_CD = '5c4cc11d-ea98-4ffc-a451-74f6e004384d'
            LEFT JOIN SM_COM_CODE F
                ON B.RATNG_CD = F.CMN_CD
                AND F.CMN_GRP_CD = '7de5a73e-ec43-475a-a10b-78cbc4ceec77'
            LEFT JOIN SM_COM_CODE G
                ON B.FLAG = G.CMN_CD
                AND G.CMN_GRP_CD = '5e939c68-643c-45a8-87c8-1c28564dd45f'
        <where>
            A.DEPT_UUID = (SELECT DEPT_UUID FROM SM_DEPARTMENT WHERE DEPT_NO = #{departmentNo})
            AND B.DLT_YN = 'N'
            <choose>
                <when test="columnNm != null and columnNm == 'usr_nm'">
                    AND C.USR_NM ILIKE CONCAT('%', #{text}, '%')
                </when>
                <when test="columnNm != null and columnNm == 'login_id'">
                    AND C.LOGIN_ID ILIKE CONCAT('%', #{text}, '%')
                </when>
                <when test="columnNm != null and columnNm == 'pstn_nm'">
                    AND (
                        CASE 
                            WHEN #{lang} = 'ko' THEN E.CMN_CD_NM_KRN
                            WHEN #{lang} = 'en' THEN E.CMN_CD_NM_ENG
                            ELSE E.CMN_CD_NM_KRN
                        END LIKE '%' || #{text} || '%'
                    )
                </when>
                <when test="columnNm != null and columnNm == 'ratng_nm'">
                    AND (
                        CASE 
                            WHEN #{lang} = 'ko' THEN F.CMN_CD_NM_KRN
                            WHEN #{lang} = 'en' THEN F.CMN_CD_NM_ENG
                            ELSE F.CMN_CD_NM_KRN
                        END LIKE '%' || #{text} || '%'
                    )
                </when>
                <when test="columnNm != null and columnNm == 'flag_nm'">
                    AND (
                        CASE 
                            WHEN #{lang} = 'ko' THEN G.CMN_CD_NM_KRN
                            WHEN #{lang} = 'en' THEN G.CMN_CD_NM_ENG
                            ELSE G.CMN_CD_NM_KRN
                        END LIKE '%' || #{text} || '%'
                    )
                </when>
            </choose>
        </where> 

    </select>

    <select id="getOrganizationEmployeeListAdmin" parameterType="getOranizationEmployeeListInput" resultType="map">
    /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.department.getOrganizationEmployeeList][thkim]  */
    -- 해당 프로젝트와 계약 내의 조직이 있는 사용자의 경우
        SELECT
            DISTINCT 
                A.USR_ID,
                A.LOGIN_ID,
                A.USR_NM,
                A.USE_YN
        FROM
            SM_USER_INFO A
        JOIN SM_ORGANIZATION B 
            ON A.LOGIN_ID = B.LOGIN_ID
            AND B.DLT_YN = 'N'
        LEFT JOIN SM_DEPARTMENT C 
            ON B.DEPT_NO = C.DEPT_NO
        LEFT JOIN SM_COMPANY D 
            ON C.CORP_NO = D.CORP_NO
        <where>
                A.USR_ID NOT IN (
                    -- 해당 부서에 속한 사용자들과 조직이 없는 사용자들의 USR_ID를 제외
                    SELECT AA.USR_ID
                    FROM SM_USER_INFO AA
                    LEFT JOIN SM_ORGANIZATION BB 
                        ON AA.LOGIN_ID = BB.LOGIN_ID
                        AND BB.DLT_YN = 'N'
                    LEFT JOIN SM_DEPARTMENT CC
                        ON BB.DEPT_NO = CC.DEPT_NO
                    WHERE CC.DEPT_ID = #{deptId}
                    AND BB.dlt_yn = 'N'
                    OR BB.LOGIN_ID IS NULL
                )
                AND C.PJT_NO = #{pjtNo}
                AND C.CNTRCT_NO = #{cntrctNo}
            <choose>
                <when test="columnNm != null and columnNm == 'usr_nm'">
                    AND A.USR_NM ILIKE CONCAT('%', #{text}, '%')
                </when>
                <when test="columnNm != null and columnNm == 'login_id'">
                    AND A.LOGIN_ID ILIKE CONCAT('%', #{text}, '%')
                </when>
            </choose>
        </where>

        UNION ALL

        -- 다른 부서의 조직에 속해있는 직원과 조직이 없는 사용자의 경우 직책과 직급은 사용자에서의 값으로
        SELECT  DISTINCT
            A.USR_ID,
            A.LOGIN_ID,
            A.USR_NM,
            A.USE_YN
        FROM
            SM_USER_INFO A
        LEFT OUTER JOIN SM_ORGANIZATION B 
            ON A.LOGIN_ID = B.LOGIN_ID
        <where>
            ( B.LOGIN_ID IS NULL
            OR  B.LOGIN_ID  NOT IN ( -- 해당 프로젝트 부서에 속한 모든 직원 제외
                SELECT AA.LOGIN_ID 
                FROM        SM_ORGANIZATION AA
                LEFT JOIN   SM_DEPARTMENT BB
                    ON  AA.DEPT_NO = BB.DEPT_NO
                    AND AA.DLT_YN = 'N' 
                WHERE 
                    BB.PJT_NO = #{pjtNo}
                AND BB.CNTRCT_NO = #{cntrctNo}
            ))
            AND A.DLT_YN = 'N'
            --AND A.USE_YN = 'Y'
            <choose>
                <when test="columnNm != null and columnNm == 'usr_nm'">
                    AND A.USR_NM ILIKE CONCAT('%', #{text}, '%')
                </when>
                <when test="columnNm != null and columnNm == 'login_id'">
                    AND A.LOGIN_ID ILIKE CONCAT('%', #{text}, '%')
                </when>
            </choose>
        </where>
    </select>

    <select id="getOrganizationEmployeeListCountAdmin" parameterType="getOranizationEmployeeListInput" resultType="int">
        SELECT 
            COUNT(*) 
        FROM 
            (
                SELECT DISTINCT 
                    A.USR_ID
                FROM SM_USER_INFO A
                JOIN SM_ORGANIZATION B 
                    ON A.LOGIN_ID = B.LOGIN_ID
                    AND B.DLT_YN = 'N'
                LEFT JOIN SM_DEPARTMENT C 
                    ON B.DEPT_NO = C.DEPT_NO
            <where>
                A.USR_ID NOT IN (
                    SELECT AA.USR_ID
                    FROM SM_USER_INFO AA
                    LEFT JOIN SM_ORGANIZATION BB 
                        ON AA.LOGIN_ID = BB.LOGIN_ID
                        AND BB.DLT_YN = 'N'
                    LEFT JOIN SM_DEPARTMENT CC
                        ON BB.DEPT_NO = CC.DEPT_NO
                    WHERE CC.DEPT_ID = #{deptId}
                    OR BB.LOGIN_ID IS NULL
                )
                AND C.PJT_NO = #{pjtNo}
                AND C.CNTRCT_NO = #{cntrctNo}
                <choose>
                    <when test="columnNm != null and columnNm == 'usr_nm'">
                        AND A.USR_NM ILIKE CONCAT('%', #{text}, '%')
                    </when>
                    <when test="columnNm != null and columnNm == 'login_id'">
                        AND A.LOGIN_ID ILIKE CONCAT('%', #{text}, '%')
                    </when>
                </choose>
            </where>

            UNION ALL

            SELECT DISTINCT 
                A.USR_ID
            FROM 
                SM_USER_INFO A
            LEFT OUTER JOIN SM_ORGANIZATION B 
                ON A.LOGIN_ID = B.LOGIN_ID
            <where>
                (B.LOGIN_ID IS NULL
                OR B.LOGIN_ID NOT IN (
                    SELECT AA.LOGIN_ID
                    FROM SM_ORGANIZATION AA
                    LEFT JOIN SM_DEPARTMENT BB
                        ON AA.DEPT_NO = BB.DEPT_NO
                        AND AA.DLT_YN = 'N'
                    WHERE BB.PJT_NO = #{pjtNo}
                    AND BB.CNTRCT_NO = #{cntrctNo}
                ))
                AND A.DLT_YN = 'N'
                <choose>
                    <when test="columnNm != null and columnNm == 'usr_nm'">
                        AND A.USR_NM ILIKE CONCAT('%', #{text}, '%')
                    </when>
                    <when test="columnNm != null and columnNm == 'login_id'">
                        AND A.LOGIN_ID ILIKE CONCAT('%', #{text}, '%')
                    </when>
                </choose>
            </where>
        ) AS total
    </select>

    <select id="getOrganizationEmployeeListGC" parameterType="getOranizationEmployeeListInput" resultType="map">
    /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.department.getOrganizationEmployeeList][thkim]  */
        SELECT
            DISTINCT 
                A.USR_ID,
                A.LOGIN_ID,
                A.USR_NM,
                A.USE_YN
        FROM
            SM_USER_INFO A
        JOIN SM_ORGANIZATION B 
            ON A.LOGIN_ID = B.LOGIN_ID
            AND B.DLT_YN = 'N'
        LEFT JOIN SM_DEPARTMENT C 
            ON B.DEPT_NO = C.DEPT_NO
        LEFT JOIN SM_COMPANY D 
            ON C.CORP_NO = D.CORP_NO
        <where>
            A.USR_ID NOT IN (
                -- 해당 부서에 속한 사용자들과 조직이 없는 사용자들의 USR_ID를 제외
                SELECT 
                    AA.USR_ID
                FROM 
                    SM_USER_INFO AA
                LEFT JOIN SM_ORGANIZATION BB
                    ON AA.LOGIN_ID = BB.LOGIN_ID
                    AND BB.DLT_YN = 'N'
                LEFT JOIN SM_DEPARTMENT CC 
                    ON BB.DEPT_NO = CC.DEPT_NO
                WHERE 
                    CC.DEPT_ID = #{deptId}
                OR BB.LOGIN_ID IS NULL
            )
            AND C.PJT_NO = #{pjtNo}
            AND C.CNTRCT_NO = #{cntrctNo}
            <choose>
                <when test="columnNm != null and columnNm == 'usr_nm'">
                    AND A.USR_NM ILIKE CONCAT('%', #{text}, '%')
                </when>
                <when test="columnNm != null and columnNm == 'login_id'">
                    AND A.LOGIN_ID ILIKE CONCAT('%', #{text}, '%')
                </when>
            </choose>
        </where>
    </select>

    <update id="updateOrganizationFlag">
        <![CDATA[   
            UPDATE 
                sm_organization
            SET 
                FLAG = 'L'
            WHERE 
                END_DT < NOW()
            AND 
                FLAG != 'L';
        ]]>  
    </update>

    <select id="getOrganizationByOrgNo" resultType="smOrganization">
        select * from sm_organization
        where org_no = #{orgNo}
    </select>

    <select id="selectSmOrganizationByUsrIdAndCntrctNo" resultType="smOrganization">
        select so.* from sm_organization so
              join sm_department sd on so.dept_uuid = sd.dept_uuid and sd.dlt_yn = 'N'
              join cn_contract cc on sd.cntrct_no = cc.cntrct_no and cc.dlt_yn = 'N'
        where cc.cntrct_no = #{cntrctNo}
            and so.usr_id = #{usrId}
            and so.dlt_yn = 'N'
    </select>

    <select id="selectSmOrganizationByUsrIdAndDeptUuid" resultType="smOrganization">
        select so.* from sm_organization so
        where so.dept_uuid = #{deptUuid}
            and so.usr_id = #{usrId}
            and so.dlt_yn = 'N'
    </select>
    <select id="selectSmOrganizationByUsrIdAndDeptNo" resultType="smOrganization">
        select so.* from sm_organization so
        where so.dept_no = #{deptNo}
          and so.usr_id = #{usrId}
          and so.dlt_yn = 'N'
    </select>

    <!-- ===========================================권한 그룹 관리 페이지에서 사용하는 쿼리================================================-->
    <select id="selectAuthGrpUsersDepartmentList" parameterType="getAuthUsersDepartmentInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.department.selectAuthGrpUsersDepartmentList][thkim]  */
        SELECT  A.DEPT_NO as DEPT_NO,
                A.DEPT_ID AS DEPT_ID,
                A.UP_DEPT_ID AS UP_DEPT_ID,
                A.DEPT_NM AS DEPT_NM,
                A.PJT_NO AS PJT_NO,
                A.CNTRCT_NO AS CNTRCT_NO,
                (CASE   WHEN COALESCE(A.DEPT_NM, '') = '관리관' THEN 'SEARCH'
                        WHEN COALESCE(LEVEL, 0) = 3 THEN 'SEARCH'
                        ELSE 'NOT' END) AS ACTION_TYPE,
                TO_CHAR(A.CHG_DT, 'YYYY-MM-DD') AS CHG_DT
        FROM    (   WITH RECURSIVE SM_DEPARTMENT_LIST(  DEPT_NO,
                                                        DEPT_ID,
                                                        UP_DEPT_ID,
                                                        DEPT_NM,
                                                        PJT_NO,
                                                        CNTRCT_NO,
                                                        DSPLY_ORDR,
                                                        CHG_DT,
                                                        DEPTH,
                                                        PATH,
                                                        CYCLE) AS   (   SELECT  A.DEPT_NO,
                                                                                A.DEPT_ID,
                                                                                A.UP_DEPT_ID,
                                                                                A.DEPT_NM,
                                                                                A.PJT_NO,
                                                                                A.CNTRCT_NO,
                                                                                A.DSPLY_ORDR,
                                                                                A.CHG_DT,
                                                                                1,
                                                                                ARRAY[A.DEPT_ID::TEXT],
                                                                                FALSE
                                                                        FROM    SM_DEPARTMENT A
                                                                        WHERE   A.DEPT_ID = #{deptId}
                                                                        AND     A.DLT_YN = 'N'
                                                                        UNION ALL
                                                                        SELECT  A.DEPT_NO,
                                                                                A.DEPT_ID,
                                                                                A.UP_DEPT_ID,
                                                                                A.DEPT_NM,
                                                                                A.PJT_NO,
                                                                                A.CNTRCT_NO,
                                                                                A.DSPLY_ORDR,
                                                                                A.CHG_DT,
                                                                                B.DEPTH + 1,
                                                                                ARRAY_APPEND(B.PATH,
                                                                                CAST(A.DSPLY_ORDR AS TEXT)::TEXT),
                                                                                A.DEPT_ID = ANY(B.PATH)
                                                                        FROM    SM_DEPARTMENT A,
                                                                                SM_DEPARTMENT_LIST B
                                                                        WHERE   A.UP_DEPT_ID = B.DEPT_ID
                                                                        AND     A.DLT_YN = 'N'
                                                                        AND     NOT CYCLE
                                                                    )
                SELECT  DEPT_NO,
                        DEPT_ID,
                        (CASE WHEN COALESCE(DEPTH, 2) = 2 THEN '#' ELSE UP_DEPT_ID END) AS UP_DEPT_ID,
                        DEPT_NM,
                        PJT_NO,
                        CNTRCT_NO,
                        DSPLY_ORDR,
                        CHG_DT,
                        DEPTH AS LEVEL,
                        PATH
                FROM    SM_DEPARTMENT_LIST
                WHERE   DEPTH <![CDATA[>]]> 1
                ORDER BY PATH) AS A
    </select>

    <select id="selectAuthGrpUsersOrganizationList" parameterType="string" resultType="output">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.department.selectAuthGrpUsersOrganizationList][thkim]  */
        SELECT
   			B.DEPT_NM	AS DEPT_NM,
   			C.LOGIN_ID	AS LOGIN_ID,
   			C.USR_NM	AS USR_NM,
            A.ORG_NO    AS ORG_NO
        FROM 	SM_ORGANIZATION A
        LEFT JOIN	SM_DEPARTMENT B
                ON	A.DEPT_NO = B.DEPT_NO
                AND A.DLT_YN = 'N'
        LEFT JOIN	SM_USER_INFO C
                ON	C.USR_ID = A.USR_ID
                AND C.DLT_YN = 'N'
        WHERE
                B.DEPT_ID = #{deptId}
    </select>

    <select id="selectAuthGrpUsersDownOrganizationList" parameterType="string" resultType="output">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.department.selectAuthGrpUsersDownOrganizationList][thkim]  */
        -- 해당 부서의 하위 조직 리스트 가져오기 
            WITH RECURSIVE DEPT_HIERARCHY AS (
                                        -- 시작 부서(최상위 부서) 선택
                                        SELECT 
                                                DEPT_NO,
                                                DEPT_ID,
                                                UP_DEPT_ID,
                                                DEPT_NM
                                        FROM 	SM_DEPARTMENT
                                        WHERE 	DEPT_ID = #{deptId}  -- 기준 부서 ID
                                        AND 	DLT_YN = 'N'
                                    
                                        UNION ALL
                                    
                                        -- 재귀적으로 하위 부서 선택
                                        SELECT 
                                            A.DEPT_NO,
                                            A.DEPT_ID,
                                            A.UP_DEPT_ID,
                                            A.DEPT_NM
                                        FROM 
                                            SM_DEPARTMENT A
                                        INNER JOIN 
                                            DEPT_HIERARCHY B ON A.UP_DEPT_ID = B.DEPT_ID
                                        WHERE 
                                            A.DLT_YN = 'N'
                                    )
                                    
            SELECT
                    B.DEPT_NM 	AS DEPT_NM,
                    C.LOGIN_ID 	AS LOGIN_ID,
                    C.USR_NM 	AS USR_NM,
                    A.org_no 	AS ORG_NO
            FROM	SM_ORGANIZATION A
            RIGHT JOIN	DEPT_HIERARCHY B 
                    ON A.DEPT_NO = B.DEPT_NO 
            INNER JOIN 	SM_USER_INFO C 
                    ON C.USR_ID = A.USR_ID
            WHERE 
                DEPT_ID != #{deptId}; --하위 부서의 조직만 가져오기
    </select>

    <update id="updateOrganizationPstnCd" parameterType="input">
    /* [kr.co.ideait.platform.gaiacairos.core.persistence.mybatis.document.document.updateOrganizationPstnCd][thkim]  */
        UPDATE SM_ORGANIZATION
        SET 
            PSTN_CD = #{pstnCd}
            ,chg_id = #{chgId}
            ,chg_dt = now()
        WHERE 
            dept_uuid = #{deptUuid}
    </update>

     <!-- ===========================================사업 관리 > 사용자 검색 페이지에서 사용하는 쿼리================================================-->
     <select id="getUserSearchEmploeeListByDeptNo" parameterType="getEmployeeListInput" resultType="output">
    /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.department.getUserSearchEmploeeListByDeptNo][jhkim]  */
        SELECT
            A.DEPT_NO,
            A.PJT_NO,
            A.CNTRCT_NO,
            A.DEPT_ID,
            A.DEPT_NM,
            D.COMP_NM,
            B.ORG_NO,
            B.PSTN_CD,
            B.RATNG_CD,
            B.FLAG,
            TO_CHAR(B.START_DT, 'YYYY-MM-DD') AS START_DT,
            TO_CHAR(B.END_DT, 'YYYY-MM-DD') AS END_DT,
            C.LOGIN_ID,
            C.USR_NM,
            C.USR_ID,
            C.PHONE_NO,
            C.USE_YN,
            C.TEL_NO,
            C.EMAIL_ADRS,
            -- 언어에 따라 KRN 또는 ENG 값을 선택
            CASE 
                WHEN #{lang} = 'ko' THEN E.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN E.CMN_CD_NM_ENG
                ELSE E.CMN_CD_NM_KRN
            END AS PSTN_NM,
            CASE 
                WHEN #{lang} = 'ko' THEN F.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN F.CMN_CD_NM_ENG
                ELSE F.CMN_CD_NM_KRN
            END AS RATNG_NM,
            CASE 
                WHEN #{lang} = 'ko' THEN G.CMN_CD_NM_KRN
                WHEN #{lang} = 'en' THEN G.CMN_CD_NM_ENG
                ELSE G.CMN_CD_NM_KRN
            END AS FLAG_NM,
            C.CORP_NO
        FROM
            SM_DEPARTMENT A
            INNER JOIN SM_ORGANIZATION B ON A.DEPT_NO = B.DEPT_NO 
            LEFT OUTER JOIN SM_USER_INFO C ON B.USR_ID = C.USR_ID 
            LEFT OUTER JOIN SM_COMPANY D ON B.CORP_NO = D.CORP_NO
            LEFT JOIN SM_COM_CODE E
                ON B.PSTN_CD = E.CMN_CD
                AND E.CMN_GRP_CD = '5c4cc11d-ea98-4ffc-a451-74f6e004384d'
            LEFT JOIN SM_COM_CODE F
                ON B.RATNG_CD = F.CMN_CD
                AND F.CMN_GRP_CD = '7de5a73e-ec43-475a-a10b-78cbc4ceec77'
            LEFT JOIN SM_COM_CODE G
                ON B.FLAG = G.CMN_CD
                AND G.CMN_GRP_CD = '5e939c68-643c-45a8-87c8-1c28564dd45f'
        <where>
        <if test="deptNoList != null and deptNoList.size() > 0">
             AND A.DEPT_NO IN
               <foreach item="item" collection="deptNoList" open="(" separator="," close=")">
                    #{item.deptNo}
                </foreach>
            </if>
            AND B.DLT_YN = 'N'
            AND B.FLAG = 'I'
                <if test="searchText != '' and searchText != null">
                    AND (C.USR_NM ILIKE CONCAT('%', #{searchText}, '%')
                    OR C.EMAIL_ADRS ILIKE CONCAT('%', #{searchText}, '%')
                    OR (
                        CASE 
                            WHEN #{lang} = 'ko' THEN E.CMN_CD_NM_KRN
                            WHEN #{lang} = 'en' THEN E.CMN_CD_NM_ENG
                            ELSE E.CMN_CD_NM_KRN
                        END LIKE '%' || #{searchText} || '%'
                    )
                    OR (
                        CASE 
                            WHEN #{lang} = 'ko' THEN F.CMN_CD_NM_KRN
                            WHEN #{lang} = 'en' THEN F.CMN_CD_NM_ENG
                            ELSE F.CMN_CD_NM_KRN
                        END LIKE '%' || #{searchText} || '%'
                    ))
                </if>
        </where>
        <include refid="sqlx.commonPageable"></include>
    </select>

    <select id="getUserSearchEmploeeListByDeptNoCount" parameterType="getEmployeeListInput" resultType="long">
    /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.department.getUserSearchEmploeeListByDeptNoCount][jhkim]  */
        SELECT
            COUNT(*)
        FROM
            SM_DEPARTMENT A
            INNER JOIN SM_ORGANIZATION B ON A.DEPT_NO = B.DEPT_NO
            LEFT OUTER JOIN SM_USER_INFO C ON B.USR_ID = C.USR_ID
            LEFT OUTER JOIN SM_COMPANY D ON B.CORP_NO = D.CORP_NO
        <where>
        <if test="deptNoList != null and deptNoList.size() > 0">
             AND A.DEPT_NO IN
               <foreach item="item" collection="deptNoList" open="(" separator="," close=")">
                    #{item.deptNo}
                </foreach>
            </if>
            AND B.DLT_YN = 'N'
            AND B.FLAG = 'I'
                <if test="searchText != '' and searchText != null">
                    AND (C.USR_NM ILIKE CONCAT('%', #{searchText}, '%')
                    OR C.EMAIL_ADRS ILIKE CONCAT('%', #{searchText}, '%')
                    OR (
                        CASE
                            WHEN #{lang} = 'ko' THEN E.CMN_CD_NM_KRN
                            WHEN #{lang} = 'en' THEN E.CMN_CD_NM_ENG
                            ELSE E.CMN_CD_NM_KRN
                        END LIKE '%' || #{searchText} || '%'
                    )
                    OR (
                        CASE
                            WHEN #{lang} = 'ko' THEN F.CMN_CD_NM_KRN
                            WHEN #{lang} = 'en' THEN F.CMN_CD_NM_ENG
                            ELSE F.CMN_CD_NM_KRN
                        END LIKE '%' || #{searchText} || '%'
                    ))
                </if>
        </where>
    </select>

    <select id="selectDepartmentListByUserId" resultType="smDepartment">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.department.selectDepartmentListByUserId][bjkim]  */
        SELECT
            usr.login_id,
            usr.usr_nm,
            dept.*
        FROM sm_user_info usr
        INNER JOIN sm_organization org ON org.usr_id = usr.usr_id AND org.dlt_yn = 'N'
        INNER JOIN sm_department dept ON dept.dept_no = org.dept_no AND dept.dlt_yn = 'N' AND dept.use_yn = 'Y'
        <where>
            AND usr.usr_id = #{userId}
        </where>
    </select>

    <select id="selectDepartmentListByUserIdAndCntrctNo" resultType="smDepartment">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.system.department.selectDepartmentListByUserId][bjkim]  */
        SELECT
            dept.*
        FROM sm_user_info usr
            INNER JOIN sm_organization org
            ON org.usr_id = usr.usr_id
                AND org.dlt_yn = 'N'
            INNER JOIN sm_department dept
            ON dept.dept_no = org.dept_no
                AND dept.dlt_yn = 'N'
                AND dept.use_yn = 'Y'
                AND dept.cntrct_no = #{cntrctNo}
        <where>
            AND usr.usr_id = #{userId}
        </where>
    </select>






































    <!-- ===========================================삭제할 쿼리================================================-->
        <select id="selectGaiaFirstDepartmentList" parameterType="getDepartmentInput" resultType="map">
        <![CDATA[
        WITH RECURSIVE SM_DEPARTMENT_LIST ( DEPT_ID,
                                    UP_DEPT_ID,
                                    DEPT_NM,
                                    PJT_NO,
                                    CNTRCT_NO,
                                    DSPLY_ORDR,
                                    DEPTH,
                                    PATH,
                                    CYCLE,
                                    RGST_DT ) AS (  
                                        SELECT  A.DEPT_ID,
                                                (CASE WHEN COALESCE(A.UP_DEPT_ID, '') = '' THEN '#' ELSE A.UP_DEPT_ID END) AS UP_DEPT_ID,
                                                A.DEPT_NM,
                                                A.PJT_NO,
                                                A.CNTRCT_NO,
                                                A.DSPLY_ORDR,
                                                1 AS DEPTH,
                                                ARRAY[A.DEPT_ID::TEXT] AS PATH,
                                                FALSE AS CYCLE,
                                                A.RGST_DT
                                        FROM    SM_DEPARTMENT A
                                        WHERE   A.DEPT_ID = 'PG'
                                        AND     A.DLT_YN = 'N'
                                        
                                        UNION ALL

                                        SELECT  A.DEPT_ID,
                                                A.UP_DEPT_ID,
                                                A.DEPT_NM,
                                                A.PJT_NO,
                                                A.CNTRCT_NO,
                                                A.DSPLY_ORDR,
                                                B.DEPTH + 1 AS DEPTH,
                                                ARRAY_APPEND(B.PATH, CAST(A.DSPLY_ORDR AS TEXT)::TEXT) AS PATH,
                                                A.DEPT_ID = ANY(B.PATH) AS CYCLE,
                                                A.RGST_DT
                                        FROM    SM_DEPARTMENT A
                                        JOIN    SM_DEPARTMENT_LIST B
                                        ON      A.UP_DEPT_ID = B.DEPT_ID
                                        WHERE   A.DLT_YN = 'N'
                                        AND     NOT CYCLE
                                    )

        SELECT  D.PJT_NO,
                D.PJT_NM,
                A.DEPT_ID,
                A.UP_DEPT_ID,
                A.DEPT_NM,
                A.CNTRCT_NO,
                (CASE WHEN COALESCE(A.DEPTH, 0) = 2 THEN 'SEARCH' ELSE 'NOT' END) AS ACTION_TYPE,
                A.RGST_DT
        FROM    SM_DEPARTMENT_LIST A
        LEFT JOIN (
                    SELECT  DISTINCT C.PJT_NO, 
                                    C.PJT_NM, 
                                    C.RGST_DT
                    FROM    SM_DEPARTMENT A
                    JOIN    SM_ORGANIZATION B ON A.DEPT_NO = B.DEPT_NO
                    JOIN    CN_PROJECT C ON A.PJT_NO = C.PJT_NO
                    WHERE   B.LOGIN_ID = #{loginId}
                    AND     A.PJT_TYPE = 'GAIA'
                    AND     A.DLT_YN = 'N'
                    AND     A.USE_YN = 'Y'
                    AND     B.DLT_YN = 'N'
                    AND     C.DLT_YN = 'N'
                    AND     C.USE_YN = 'Y'
                    AND     C.CON_PSTATS IN ('0602', '0603', '0604')
                ) D ON A.PJT_NO = D.PJT_NO

        WHERE (D.PJT_NO = #{pjtNo} OR A.DEPT_ID = 'PG')
        AND A.DEPTH < 3
        ORDER BY A.RGST_DT ASC;]]>
    </select>

    <select id="selectCmisFirstDepartmentList" parameterType="getDepartmentInput" resultType="map">
        <![CDATA[
        WITH RECURSIVE SM_DEPARTMENT_LIST ( DEPT_ID,
                                    UP_DEPT_ID,
                                    DEPT_NM,
                                    PJT_NO,
                                    CNTRCT_NO,
                                    DSPLY_ORDR,
                                    DEPTH,
                                    PATH,
                                    CYCLE,
                                    RGST_DT ) AS (  
                                        SELECT  A.DEPT_ID,
                                                (CASE WHEN COALESCE(A.UP_DEPT_ID, '') = '' THEN '#' ELSE A.UP_DEPT_ID END) AS UP_DEPT_ID,
                                                A.DEPT_NM,
                                                A.PJT_NO,
                                                A.CNTRCT_NO,
                                                A.DSPLY_ORDR,
                                                1 AS DEPTH,
                                                ARRAY[A.DEPT_ID::TEXT] AS PATH,
                                                FALSE AS CYCLE,
                                                A.RGST_DT
                                        FROM    SM_DEPARTMENT A
                                        WHERE   A.DEPT_ID = 'C'
                                        AND     A.DLT_YN = 'N'
                                        
                                        UNION ALL

                                        SELECT  A.DEPT_ID,
                                                A.UP_DEPT_ID,
                                                A.DEPT_NM,
                                                A.PJT_NO,
                                                A.CNTRCT_NO,
                                                A.DSPLY_ORDR,
                                                B.DEPTH + 1 AS DEPTH,
                                                ARRAY_APPEND(B.PATH, CAST(A.DSPLY_ORDR AS TEXT)::TEXT) AS PATH,
                                                A.DEPT_ID = ANY(B.PATH) AS CYCLE,
                                                A.RGST_DT
                                        FROM    SM_DEPARTMENT A
                                        JOIN    SM_DEPARTMENT_LIST B
                                        ON      A.UP_DEPT_ID = B.DEPT_ID
                                        WHERE   A.DLT_YN = 'N'
                                        AND     NOT CYCLE
                                    )

        SELECT  D.PJT_NO,
                D.PJT_NM,
                A.DEPT_ID,
                A.UP_DEPT_ID,
                A.DEPT_NM,
                A.CNTRCT_NO,
                (CASE WHEN COALESCE(A.DEPTH, 0) = 3 THEN 'SEARCH' ELSE 'NOT' END) AS ACTION_TYPE,
                A.RGST_DT
        FROM    SM_DEPARTMENT_LIST A
        LEFT JOIN (
                    SELECT  DISTINCT C.PJT_NO, 
                                    C.PJT_NM, 
                                    C.RGST_DT
                    FROM    SM_DEPARTMENT A
                    JOIN    SM_ORGANIZATION B ON A.DEPT_NO = B.DEPT_NO
                    JOIN    CN_PROJECT C ON A.PJT_NO = C.PJT_NO
                    WHERE   B.LOGIN_ID = #{loginId}
                    AND     A.PJT_TYPE = 'CAIROS'
                    AND     A.DLT_YN = 'N'
                    AND     A.USE_YN = 'Y'
                    AND     B.DLT_YN = 'N'
                    AND     C.DLT_YN = 'N'
                    AND     C.USE_YN = 'Y'
                    AND     C.CON_PSTATS IN ('0602', '0603', '0604')
                ) D ON A.PJT_NO = #{pjtNo}
                    AND A.CNTRCT_NO IN (#{cntrctNo}, #{pjtNo})

        WHERE (D.PJT_NO IS NOT NULL OR A.DEPT_ID = 'C')
        AND A.DEPTH < 4
        ORDER BY A.RGST_DT ASC;]]>
    </select>
    <select id="selectDepartmentByDepartmentId" resultType="smDepartment">
        select * from sm_department where dept_id = #{departmentId} and dlt_yn = 'N'
    </select>
    <select id="selectDepartmentOfDepartmentNo" resultType="smDepartment">
        select * from sm_department where dept_no = #{deptNo} and dlt_yn = 'N'
    </select>
    <select id="selectDepartmentOfDepartmentUuid" resultType="smDepartment">
         select * from sm_department where dept_uuid = #{deptUuid} and dlt_yn = 'N'
    </select>
    <select id="selectDepartmentListOfProject" resultType="smDepartment">
        select
            dept_no
            ,corp_no
            ,pjt_no
            ,cntrct_no
            ,pjt_type
            ,dept_id
            ,dept_nm
            ,dept_yn
            ,dept_dscrpt
            ,up_dept_id
            ,dept_lvl
            ,dsply_ordr
            ,svr_type
            ,pstn_nm
            ,mng_nm
            ,dsply_yn
            ,use_yn
            ,dlt_yn
            ,rgstr_id
            ,rgst_dt
            ,chg_id
            ,chg_dt
            ,dlt_id
            ,dlt_dt
            ,dept_uuid
        from sm_department
        where pjt_no = #{pjtNo}
    </select>

    <update id="updateDepartment">
        update sm_department
        set
            dept_nm = #{deptNm}
            ,dept_dscrpt = #{deptDscrpt}
            ,pstn_nm = #{pstnNm}
            ,mng_nm = #{mngNm}
            ,svr_type = #{svrType}
            ,use_yn = #{useYn}
            ,chg_id = #{chgId}
            ,chg_dt = now()
        where
            dept_uuid = #{deptUuid}
    </update>

    <update id="updateUserOfDepartment" parameterType="smOrganization">
        update sm_organization
        set
            chg_dt = now()
            ,chg_id = #{chgId}
            ,ratng_cd = #{ratngCd}
            ,flag = #{flag}
            ,start_dt = #{startDt}::timestamptz
            ,end_dt = #{endDt}::timestamptz
        where
            dept_uuid = #{deptUuid}
            and usr_id = #{usrId}
    </update>
    <select id="selectOrganizationListByOrgNos" resultType="smOrganization">
        select
            dept_uuid,
            dept_no,
            usr_id
        from sm_organization
        <where>
            dlt_yn = 'N'
            <if test="list != null and list.size() > 0">
                AND org_no IN
                <foreach collection="list" item="orgNo" open="(" separator="," close=")">
                    #{orgNo}
                </foreach>
            </if>
            <if test="list == null or list.size() == 0">
                AND 1 = 0  <!-- 리스트 없으면 아무것도 안 나오게 -->
            </if>
        </where>
    </select>
    <update id="deleteDepartmentUsers">
        UPDATE sm_organization
        SET dlt_yn = 'Y',
        dlt_dt = now(),
        dlt_id = #{list[0].dltId}
        WHERE (usr_id, dept_uuid) IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            (#{item.usrId}, #{item.deptUuid})
        </foreach>
    </update>
    <update id="updateDepartmentUuid">
        update sm_department
        set dept_uuid = #{deptUuid}
        where dept_id = #{deptId}
    </update>

    <select id="selectContainConstructionSvrType" parameterType="map" resultType="string">
        WITH RECURSIVE ancestors AS (
              SELECT
                    D.DEPT_ID
                    , D.UP_DEPT_ID
                    , D.DEPT_NM
                    , D.SVR_TYPE
                    , 0 AS DEPTH
              FROM
                    SM_DEPARTMENT D
              WHERE
                    D.CNTRCT_NO = #{cntrctNo}
                AND  D.DEPT_ID   = #{deptId}
                AND  D.DLT_YN    = 'N'
              UNION ALL
              SELECT
                    P.DEPT_ID
                    , P.UP_DEPT_ID
                    , P.DEPT_NM
                    , P.SVR_TYPE
                    , A.DEPTH + 1
              FROM
                    SM_DEPARTMENT P
              JOIN
                    ancestors A ON P.DEPT_ID = A.UP_DEPT_ID
              WHERE
                    P.CNTRCT_NO = #{cntrctNo}
                AND  P.DLT_YN    = 'N'
                AND  A.DEPTH <![CDATA[<]]> 50
        )

        SELECT CASE
        	 WHEN EXISTS (SELECT 1 FROM ancestors WHERE svr_type = '01') -- 시공사
        	   THEN '01'
        	 WHEN EXISTS (SELECT 1 FROM ancestors WHERE svr_type = '05') -- 감리
        	   THEN '05'
             ELSE NULL
           	END AS parent_svr_type;
    </select>
</mapper>