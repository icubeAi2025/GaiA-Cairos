<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal">

    <select id="selectLoginUserDetail" parameterType="userLoginInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectLoginUserDetail][gwLee]  */
        SELECT  A.USR_ID AS USR_ID,
                A.LOGIN_ID AS LOGIN_ID,
                B.USR_NM AS USR_NM,
                B.EMAIL_ADRS AS EMAIL_ADRS,
                A.RATNG_CD AS RATNG_CD,
                ( CASE 	WHEN COALESCE( (   SELECT  BB.CMN_CD_NM_KRN
                                            FROM    SM_COM_CODE BB
                                            WHERE   BB.CMN_GRP_CD = #{cmnGrpCdRank}
                                            AND     BB.CMN_CD = A.RATNG_CD), '') = ''   
						THEN '기타' 
						ELSE (  SELECT  BB.CMN_CD_NM_KRN
								FROM    SM_COM_CODE BB
								WHERE   BB.CMN_GRP_CD = #{cmnGrpCdRank}
								AND     BB.CMN_CD = A.RATNG_CD)
				END) AS RATNG_NM,
                A.PSTN_CD AS PSTN_CD,
                ( CASE 	WHEN COALESCE( (   SELECT  CC.CMN_CD_NM_KRN
                                            FROM    SM_COM_CODE CC
                                            WHERE   CC.CMN_GRP_CD = #{cmnGrpCdPstn}
                                            AND     CC.CMN_CD = A.PSTN_CD), '') = ''    
						THEN '미지정'
						ELSE (  SELECT  CC.CMN_CD_NM_KRN
								FROM    SM_COM_CODE CC
								WHERE   CC.CMN_GRP_CD = #{cmnGrpCdPstn}
								AND     CC.CMN_CD = A.PSTN_CD)
				END) AS PSTN_NM
        FROM    SM_ORGANIZATION A,
                SM_USER_INFO B
        WHERE   A.LOGIN_ID = B.LOGIN_ID
        AND     A.USR_ID = B.USR_ID
        AND 	A.DLT_YN = 'N'
        AND     A.LOGIN_ID = #{loginId}
    </select>

    <select id="selectMainNavMenu" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectMainNavMenu][gwLee]  */
        <![CDATA[
        SELECT '<nav class="breadcrumb_nav">' AS MENU_NM 
        UNION ALL
        SELECT '<ol class="breadcrumb" id="menuDepth">' AS MENU_NM 
        UNION ALL
        SELECT '<li class="breadcrumb_item"><a href="/">홈</a></li>' AS MENU_NM
        UNION ALL
        SELECT '<li class="breadcrumb_item">대시보드</li>' AS MENU_NM 
        UNION ALL
        SELECT '</ol>' AS MENU_NM 
        UNION ALL
        SELECT '</nav>' AS MENU_NM 
        ]]>
    </select>

    <select id="selectNavMenu" parameterType="String" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectNavMenu][gwLee]  */
        <![CDATA[
        SELECT '<nav class="breadcrumb_nav">' AS MENU_NM
        UNION ALL
        SELECT '<ol class="breadcrumb" id="menuDepth">' AS MENU_NM
        UNION ALL
        SELECT  A.MENU_NM AS MENU_NM
        FROM    (   WITH RECURSIVE SM_MENU_LIST(    MENU_CD,
                                                    UP_MENU_CD,
                                                    MENU_NM,
                                                    DEPTH,
                                                    PATH,
                                                    CYCLE ) 
                    AS (    SELECT  A.MENU_CD,
                                    A.UP_MENU_CD,
                                    CASE 
										WHEN A.MENU_CD = 'SETUP' THEN #{pjtType}||' '|| A.MENU_NM
										ELSE A.MENU_NM
									END  AS MENU_NM,
                                    1,
                                    ARRAY[A.MENU_CD::TEXT],
                                    FALSE
                            FROM    SM_MENU A
                            WHERE   A.MENU_CD = #{menuId}
							AND     A.DLT_YN = 'N'
                            UNION ALL
                            SELECT  A.MENU_CD,
                                    A.UP_MENU_CD,
                                    CASE 
										WHEN A.MENU_CD = 'SETUP' THEN #{pjtType}||' '|| A.MENU_NM
										ELSE A.MENU_NM
									END  AS MENU_NM,
                                    B.DEPTH + 1,
                                    ARRAY_APPEND(B.PATH,
                                    CAST(A.MENU_DSPLY_ORDR AS TEXT)::TEXT),
                                    A.UP_MENU_CD = ANY(B.PATH)
                            FROM    SM_MENU A,
                                    SM_MENU_LIST B
                            WHERE   A.MENU_CD = B.UP_MENU_CD
							AND     A.DLT_YN = 'N'
                            AND     NOT CYCLE )   
                    SELECT  (CASE WHEN UP_MENU_CD = '#' THEN '<li class="breadcrumb_item"><a href="/">홈</a></li>' ELSE '<li class="breadcrumb_item">'||MENU_NM||'</li>' END) AS MENU_NM
                    FROM    SM_MENU_LIST
                    ORDER BY DEPTH DESC) AS A
        UNION ALL
        SELECT '</ol>' AS MENU_NM
        UNION ALL
        SELECT '</nav>' AS MENU_NM
        ]]>
    </select>

    <select id="selectAdminMenuList" parameterType="selectMenuInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectAdminMenuList][gwLee]  */
        SELECT  A.MENU_CD AS MENU_CD,
                A.UP_MENU_CD AS UP_MENU_CD,
                A.MENU_NM AS MENU_NM,
                A.MENU_DSCRPT AS MENU_DSCRPT,
                A.MENU_URL AS MENU_URL,
                A.MENU_LVL AS MENU_LVL,
                A.MENU_DSPLY_ORDR AS MENU_DSPLY_ORDR,
                A.ICON_NM AS ICON_NM,
                A.LEVEL AS LEVEL,
                A.PATH AS PATH,
                B.COUNT AS COUNT,
                A.MENU_API
        FROM    (   WITH RECURSIVE SM_MENU_LIST(    MENU_CD,
													UP_MENU_CD,
													MENU_NM,
													MENU_DSCRPT,
													MENU_URL,
													MENU_LVL,
													MENU_DSPLY_ORDR,
                                    				MENU_API,
													ICON_NM,
													DEPTH,
													PATH,
													CYCLE ) 
                    AS (    SELECT  A.MENU_CD,
                                    A.UP_MENU_CD,
                                    A.MENU_NM,
                                    A.MENU_DSCRPT,
                                    A.MENU_URL,
                                    A.MENU_LVL,
                                    A.MENU_DSPLY_ORDR,
                                    A.MENU_API,
                                    A.ICON_NM,
                                    1,
                                    ARRAY[A.MENU_CD::TEXT],
                                    FALSE
                            FROM    SM_MENU A
                            WHERE   A.MENU_CD = 'M'
                            UNION ALL
                            SELECT  A.MENU_CD,
                                    A.UP_MENU_CD,
                                    A.MENU_NM,
                                    A.MENU_DSCRPT,
                                    A.MENU_URL,
                                    A.MENU_LVL,
                                    A.MENU_DSPLY_ORDR,
                                    A.MENU_API,
                                    A.ICON_NM,
                                    B.DEPTH + 1,
                                    ARRAY_APPEND(B.PATH,
                                    CAST(A.MENU_DSPLY_ORDR AS TEXT)::TEXT),
                                    A.MENU_CD = ANY(B.PATH)
                            FROM    SM_MENU A,
                                    SM_MENU_LIST B
                            WHERE   A.UP_MENU_CD = B.MENU_CD
                            AND     A.MENU_USE_YN = 'Y'
                            AND     A.DLT_YN = 'N'
							<choose>
								<when test="pjtType == 'GAIA'">
								AND A.MENU_DIV IN ('A', 'G')
								</when>
								<otherwise>
								AND A.MENU_DIV IN ('A', 'C')
								</otherwise>
							</choose>
                            AND     NOT CYCLE
                        )   SELECT  MENU_CD,
                                    UP_MENU_CD,
                                    MENU_NM,
                                    MENU_DSCRPT,
                                    (CASE WHEN COALESCE(MENU_URL, '') = '' THEN 'javascript:;' ELSE MENU_URL END) AS MENU_URL,
                                    MENU_LVL,
                                    MENU_DSPLY_ORDR,
                                    MENU_API,
                                    ICON_NM,
                                    DEPTH AS LEVEL,
                                    PATH
                            FROM    SM_MENU_LIST) AS A
                LEFT JOIN   (   SELECT  <![CDATA['<span class="badge">'||COUNT(*)||'</span>']]> AS COUNT,
                                        'M060102' AS MENU_CD
                                FROM 	AP_DOC A
                                WHERE 	A.DLT_YN = 'N'
                                AND 	A.AP_DOC_STATS IN ('W', 'I')
                                AND 	A.AP_USR_ID = #{usrId}
                                <if test="pjtNo != null and pjtNo != ''">
                                    AND A.PJT_NO = #{pjtNo}
                                </if>
                                <if test="cntrctNo != null and cntrctNo != ''">
                                    AND A.CNTRCT_NO = #{cntrctNo}
                                </if>
                                UNION ALL
                                SELECT 	<![CDATA['<span class="badge">'||COUNT(*)||'</span>']]> AS COUNT,
                                        'M060201' AS MENU_CD
                                FROM 	AP_DOC A,
                                        (       SELECT  A.AP_DOC_NO AS AP_DOC_NO,
                                                        A.AP_DOC_ID AS AP_DOC_ID,
                                                        (       SELECT  AA.AP_USR_ID
                                                                FROM    AP_LINE AA
                                                                WHERE   AA.AP_DOC_NO = A.AP_DOC_NO
                                                                AND     AA.AP_DOC_ID = A.AP_DOC_ID
                                                                AND     AA.AP_ORDER = MIN(A.AP_ORDER)) AS AP_USR_ID
                                                FROM    AP_LINE A
                                                WHERE   A.AP_DIV = 'A'
                                                AND     A.AP_STATS = 'I'
                                                GROUP BY A.AP_DOC_NO, A.AP_DOC_ID 
                                        ) AS B
                                WHERE 	A.AP_DOC_NO = B.AP_DOC_NO
                                AND 	A.DLT_YN = 'N'
                                AND 	A.AP_DOC_STATS IN ('I', 'W')
                                AND 	B.AP_USR_ID = #{usrId}
                                <if test="pjtNo != null and pjtNo != ''">
                                    AND A.PJT_NO = #{pjtNo}
                                </if>
                                <if test="cntrctNo != null and cntrctNo != ''">
                                    AND A.CNTRCT_NO = #{cntrctNo}
                                </if>
                                UNION ALL
                                SELECT 	<![CDATA['<span class="badge">'||COUNT(*)||'</span>']]> AS COUNT,
                                        'M060202' AS MENU_CD
                                FROM 	AP_DOC A,
                                        AP_LINE B
                                WHERE 	A.AP_DOC_NO = B.AP_DOC_NO
                                AND 	A.DLT_YN = 'N'
                                AND 	A.AP_DOC_STATS = 'I'
                                AND 	B.AP_USR_ID = #{usrId}
                                AND 	B.AP_STATS = 'A'
                                <if test="pjtNo != null and pjtNo != ''">
                                    AND A.PJT_NO = #{pjtNo}
                                </if>
                                <if test="cntrctNo != null and cntrctNo != ''">
                                    AND A.CNTRCT_NO = #{cntrctNo}
                                </if>
                                ) AS B ON A.MENU_CD = B.MENU_CD
		WHERE A.MENU_CD != 'COMMON'
        ORDER BY CAST(COALESCE(A.PATH[2], '0') AS INTEGER), CAST(COALESCE(A.PATH[3], '0') AS INTEGER), PATH   
    </select>

	<select id="selectMenuList" parameterType="selectMenuInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectMenuList][gwLee]  */
        SELECT  A.MENU_CD AS MENU_CD,
                A.UP_MENU_CD AS UP_MENU_CD,
				A.MENU_NM AS MENU_NM,
                A.MENU_DSCRPT AS MENU_DSCRPT,
                A.MENU_URL AS MENU_URL,
                A.MENU_LVL AS MENU_LVL,
                A.MENU_DSPLY_ORDR AS MENU_DSPLY_ORDR,
                A.ICON_NM AS ICON_NM,
                A.LEVEL AS LEVEL,
                A.PATH AS PATH,
                A.MENU_API,
				(	SELECT AA.COUNT
					FROM 	(   SELECT  <![CDATA['<span class="badge">'||COUNT(*)||'</span>']]> AS COUNT,
                                		'M060102' AS MENU_CD
								FROM 	AP_DOC A
								WHERE 	A.DLT_YN = 'N'
								AND 	A.AP_DOC_STATS IN ('W', 'I')
								AND 	A.AP_USR_ID = #{usrId}
								<if test="pjtNo != null and pjtNo != ''">
									AND A.PJT_NO = #{pjtNo}
								</if>
								<if test="cntrctNo != null and cntrctNo != ''">
									AND A.CNTRCT_NO = #{cntrctNo}
								</if>
								UNION ALL
								SELECT 	<![CDATA['<span class="badge">'||COUNT(*)||'</span>']]> AS COUNT,
										'M060201' AS MENU_CD
								FROM 	AP_DOC A,
										(       SELECT  A.AP_DOC_NO AS AP_DOC_NO,
														A.AP_DOC_ID AS AP_DOC_ID,
														(       SELECT  AA.AP_USR_ID
																FROM    AP_LINE AA
																WHERE   AA.AP_DOC_NO = A.AP_DOC_NO
																AND     AA.AP_DOC_ID = A.AP_DOC_ID
																AND     AA.AP_ORDER = MIN(A.AP_ORDER)) AS AP_USR_ID
												FROM    AP_LINE A
												WHERE   A.AP_DIV = 'A'
												AND     A.AP_STATS = 'I'
												GROUP BY A.AP_DOC_NO, A.AP_DOC_ID 
										) AS B
								WHERE 	A.AP_DOC_NO = B.AP_DOC_NO
								AND 	A.DLT_YN = 'N'
								AND 	A.AP_DOC_STATS IN ('I', 'W')
								AND 	B.AP_USR_ID = #{usrId}
								<if test="pjtNo != null and pjtNo != ''">
									AND A.PJT_NO = #{pjtNo}
								</if>
								<if test="cntrctNo != null and cntrctNo != ''">
									AND A.CNTRCT_NO = #{cntrctNo}
								</if>
								UNION ALL
								SELECT 	<![CDATA['<span class="badge">'||COUNT(*)||'</span>']]> AS COUNT,
										'M060202' AS MENU_CD
								FROM 	AP_DOC A,
										AP_LINE B
								WHERE 	A.AP_DOC_NO = B.AP_DOC_NO
								AND 	A.DLT_YN = 'N'
								AND 	A.AP_DOC_STATS = 'I'
								AND 	B.AP_USR_ID = #{usrId}
								AND 	B.AP_DIV = 'A'
								AND 	B.AP_STATS = 'A'
								<if test="pjtNo != null and pjtNo != ''">
									AND A.PJT_NO = #{pjtNo}
								</if>
								<if test="cntrctNo != null and cntrctNo != ''">
									AND A.CNTRCT_NO = #{cntrctNo}
								</if>
							) AS AA
					WHERE AA.MENU_CD = A.MENU_CD
                ) AS COUNT
        FROM    (   SELECT  XXX.MENU_CD,
                            XXX.UP_MENU_CD,
                            XXX.MENU_NM,
                            XXX.MENU_DSCRPT,
                            XXX.MENU_URL,
                            XXX.MENU_LVL,
                            XXX.MENU_DSPLY_ORDR,
                            XXX.ICON_NM,
                            XXX.LEVEL,
                            XXX.PATH,
							XXX.MENU_API,
                            B.MENU_CD AS MENU,
                            CASE WHEN ( SELECT 	COUNT(DISTINCT (B.MENU_CD)) AS MENU_CD
										FROM 	( 	SELECT 	A.AUTH_NO,
															A.RGHT_GRP_CD,
															A.RGHT_GRP_USR_TY,
															B.PJT_NO ,
															B.CNTRCT_NO,
															B.PJT_TYPE,
															C.DEPT_NO,
															C.CORP_NO,
															C.FLAG,
															C.USR_ID,
															C.LOGIN_ID
													FROM 	SM_AUTHORITY_GROUP_USERS A,
															SM_AUTHORITY_GROUP B,
															SM_ORGANIZATION C,
															SM_DEPARTMENT D
													WHERE 	A.RGHT_GRP_CD = B.RGHT_GRP_CD
													AND 	A.AUTH_NO = C.DEPT_NO
													AND 	C.DEPT_NO = D.DEPT_NO
                                                <if test="pjtNo != null and pjtNo != ''">
                                                    AND 	B.PJT_NO = #{pjtNo}
                                                </if>
                                                <if test="cntrctNo != null and cntrctNo != ''">
                                                    AND 	B.CNTRCT_NO = #{cntrctNo}
                                                </if>                  
                                                    AND     B.PJT_TYPE = #{pjtType}
                                                    AND     C.USR_ID = #{usrId}
													AND 	A.RGHT_GRP_USR_TY = 'D'
													AND 	B.USE_YN = 'Y'
													AND 	B.DLT_YN = 'N'
													AND 	C.DLT_YN = 'N'
													AND 	D.DLT_YN = 'N'
													AND 	D.USE_YN = 'Y'
													AND 	D.DEPT_YN = 'Y'
													UNION ALL
													SELECT	A.AUTH_NO,
															A.RGHT_GRP_CD,
															A.RGHT_GRP_USR_TY,
															B.PJT_NO ,
															B.CNTRCT_NO,
															B.PJT_TYPE,
															C.DEPT_NO,
															C.CORP_NO,
															C.FLAG,
															C.USR_ID,
															C.LOGIN_ID
													FROM 	SM_AUTHORITY_GROUP_USERS A,
															SM_AUTHORITY_GROUP B,
															SM_ORGANIZATION C
													WHERE 	A.RGHT_GRP_CD = B.RGHT_GRP_CD
													AND 	A.AUTH_NO = C.ORG_NO
                                                <if test="pjtNo != null and pjtNo != ''">
                                                    AND 	B.PJT_NO = #{pjtNo}
                                                </if>
                                                <if test="cntrctNo != null and cntrctNo != ''">
                                                    AND 	B.CNTRCT_NO = #{cntrctNo}
                                                </if>                  
                                                    AND     B.PJT_TYPE = #{pjtType}
                                                    AND     C.USR_ID = #{usrId}
													AND 	A.RGHT_GRP_USR_TY != 'D'
													AND 	B.USE_YN = 'Y'
													AND 	B.DLT_YN = 'N'
													AND 	C.DLT_YN = 'N'
												) AS A,
												SM_MENU_AUTHORITY_MAPPING B
										WHERE 	A.RGHT_GRP_CD = B.RGHT_GRP_CD
										AND 	B.RGHT_KIND = 'VIEW'
                                        AND     B.MENU_CD IN (  WITH RECURSIVE SM_MENU_LIST(MENU_CD,
                                                                                            UP_MENU_CD,
                                                                                            MENU_NM,
                                                                                            DEPTH) 
                                                                AS (    SELECT  A.MENU_CD,
                                                                                A.UP_MENU_CD,
                                                                                A.MENU_NM,
                                                                                1
                                                                        FROM    SM_MENU A
                                                                        WHERE   1 = 1
                                                                        AND     A.MENU_CD = XXX.MENU_CD
                                                                        UNION
                                                                        SELECT  C.MENU_CD,
                                                                                C.UP_MENU_CD,
                                                                                C.MENU_NM,
                                                                                B.DEPTH + 1
                                                                        FROM    SM_MENU_LIST B,
                                                                                SM_MENU C
                                                                        WHERE   B.MENU_CD = C.UP_MENU_CD
                                                                    )
                                                                SELECT  MENU_CD
                                                                FROM SM_MENU_LIST)) = 0 
                            THEN 'N'
                            ELSE 'Y'
                            END AS MENUVIEW_YN
                    FROM    (   WITH RECURSIVE SM_MENU_LIST(    MENU_CD,
                                                                UP_MENU_CD,
                                                                MENU_NM,
                                                                MENU_DSCRPT,
                                                                MENU_URL,
                                                                MENU_LVL,
                                                                MENU_DSPLY_ORDR,
																MENU_API,
                                                                ICON_NM,
                                                                DEPTH,
                                                                PATH,
                                                                CYCLE ) 
                                AS (    SELECT  A.MENU_CD,
                                                A.UP_MENU_CD,
                                                A.MENU_NM,
                                                A.MENU_DSCRPT,
                                                A.MENU_URL,
                                                A.MENU_LVL,
                                                A.MENU_DSPLY_ORDR,
												A.MENU_API,
                                                A.ICON_NM,
                                                1,
                                                ARRAY[A.MENU_CD::TEXT],
                                                FALSE
                                        FROM    SM_MENU A
                                        WHERE   A.MENU_CD = 'M'
                                        UNION ALL
                                        SELECT  A.MENU_CD,
                                                A.UP_MENU_CD,
                                                A.MENU_NM,
                                                A.MENU_DSCRPT,
                                                A.MENU_URL,
                                                A.MENU_LVL,
                                                A.MENU_DSPLY_ORDR,
												A.MENU_API,
                                                A.ICON_NM,
                                                B.DEPTH + 1,
                                                ARRAY_APPEND(B.PATH,
                                                CAST(A.MENU_DSPLY_ORDR AS TEXT)::TEXT),
                                                A.MENU_CD = ANY(B.PATH)
                                        FROM    SM_MENU A,
                                                SM_MENU_LIST B
                                        WHERE   A.UP_MENU_CD = B.MENU_CD
                                        AND     A.MENU_USE_YN = 'Y'
                                        AND     A.DLT_YN = 'N'
										
										<choose>
											<when test="pjtType == 'GAIA'">
											AND A.MENU_DIV IN ('A', 'G')
											</when>
											<otherwise>
											AND A.MENU_DIV IN ('A', 'C')
											</otherwise>
										</choose>
                                        AND     NOT CYCLE
                                    )   SELECT  MENU_CD,
                                                UP_MENU_CD,
                                                MENU_NM,
                                                MENU_DSCRPT,
                                                (CASE WHEN COALESCE(MENU_URL, '') = '' THEN 'javascript:;' ELSE MENU_URL END) AS MENU_URL,
                                                MENU_LVL,
                                                MENU_DSPLY_ORDR,
												MENU_API,
                                                ICON_NM,
                                                DEPTH AS LEVEL,
                                                PATH
                                        FROM    SM_MENU_LIST) AS XXX
                    LEFT JOIN ( SELECT  DISTINCT (A.MENU_CD) AS MENU_CD
                                FROM    SM_MENU_AUTHORITY_GROUP A,
                                        (   SELECT  A.RGHT_GRP_NO,
                                                    A.RGHT_GRP_CD,
                                                    A.RGHT_GRP_USR_TY,
                                                    B.ORG_NO,
                                                    B.DEPT_NO,
                                                    B.USR_ID,
                                                    C.PJT_NO,
                                                    C.CNTRCT_NO,
                                                    C.PJT_TYPE,
                                                    C.RGHT_GRP_TY,
                                                    C.RGHT_GRP_ROLE
                                            FROM    SM_AUTHORITY_GROUP_USERS A,
                                                    SM_ORGANIZATION B,
                                                    SM_AUTHORITY_GROUP C,
                                                    SM_DEPARTMENT D
                                            WHERE   A.RGHT_GRP_USR_TY = 'D'
                                            AND     C.USE_YN = 'Y'
                                            AND     C.DLT_YN = 'N'
                                            AND     D.USE_YN = 'Y'
                                            AND     D.DLT_YN = 'N'
                                            AND     A.AUTH_NO = B.DEPT_NO
                                            AND 	B.DEPT_NO = D.DEPT_NO 
                                            AND     A.RGHT_GRP_CD = C.RGHT_GRP_CD                                                                   
                                            <if test="pjtNo != null and pjtNo != ''">
                                                AND C.PJT_NO = #{pjtNo}
                                            </if>
                                            <if test="cntrctNo != null and cntrctNo != ''">
                                                AND C.CNTRCT_NO = #{cntrctNo}
                                            </if>                 
                                            AND     C.PJT_TYPE = #{pjtType}
                                            AND     B.USR_ID = #{usrId}
                                            UNION ALL
                                            SELECT  A.RGHT_GRP_NO,
                                                    A.RGHT_GRP_CD,
                                                    A.RGHT_GRP_USR_TY,
                                                    B.ORG_NO,
                                                    B.DEPT_NO,
                                                    B.USR_ID,
                                                    C.PJT_NO,
                                                    C.CNTRCT_NO,
                                                    C.PJT_TYPE,
                                                    C.RGHT_GRP_TY,
                                                    C.RGHT_GRP_ROLE
                                            FROM    SM_AUTHORITY_GROUP_USERS A,
                                                    SM_ORGANIZATION B,
                                                    SM_AUTHORITY_GROUP C
                                            WHERE   A.RGHT_GRP_USR_TY != 'D'
                                            AND     B.DLT_YN = 'N'
                                            AND     C.USE_YN = 'Y'
                                            AND     C.DLT_YN = 'N'
                                            AND     A.AUTH_NO = B.ORG_NO
                                            AND     A.RGHT_GRP_CD = C.RGHT_GRP_CD                                                                  
                                            <if test="pjtNo != null and pjtNo != ''">
                                                AND C.PJT_NO = #{pjtNo}
                                            </if>
                                            <if test="cntrctNo != null and cntrctNo != ''">
                                                AND C.CNTRCT_NO = #{cntrctNo}
                                            </if>        
                                            AND     C.PJT_TYPE = #{pjtType}
                                            AND     B.USR_ID = #{usrId}) AS B
                                WHERE   A.DLT_YN = 'N'
                                AND     A.RGHT_GRP_CD = B.RGHT_GRP_CD) AS B ON XXX.MENU_CD = B.MENU_CD) AS A
        WHERE   A.MENUVIEW_YN = 'Y'
		AND 	A.MENU_CD != 'COMMON'
        ORDER BY CAST(COALESCE(A.PATH[2], '0') AS INTEGER), CAST(COALESCE(A.PATH[3], '0') AS INTEGER), PATH
    </select>

    <select id="selectUserMenuList" parameterType="selectMenuInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectUserMenuList][gwLee]  */
        SELECT  A.MENU_CD AS MENU_CD,
                A.UP_MENU_CD AS UP_MENU_CD,
				A.MENU_NM AS MENU_NM,
                A.MENU_DSCRPT AS MENU_DSCRPT,
                A.MENU_URL AS MENU_URL,
                A.MENU_LVL AS MENU_LVL,
                A.MENU_DSPLY_ORDR AS MENU_DSPLY_ORDR,
                A.ICON_NM AS ICON_NM,
                A.LEVEL AS LEVEL,
                A.PATH AS PATH,
                A.MENU_API,
                B.COUNT AS COUNT
        FROM    (   SELECT  XXX.MENU_CD,
                            XXX.UP_MENU_CD,
                            XXX.MENU_NM,
                            XXX.MENU_DSCRPT,
                            XXX.MENU_URL,
                            XXX.MENU_LVL,
                            XXX.MENU_DSPLY_ORDR,
                            XXX.ICON_NM,
                            XXX.LEVEL,
                            XXX.PATH,
							XXX.MENU_API,
                            B.MENU_CD AS MENU,
                            CASE WHEN ( SELECT  COUNT(DISTINCT (A.MENU_CD)) AS MENU_CD
                                        FROM    SM_MENU_AUTHORITY_GROUP A,
                                                (   SELECT  A.RGHT_GRP_NO,
                                                            A.RGHT_GRP_CD,
                                                            A.RGHT_GRP_USR_TY,
                                                            B.ORG_NO,
                                                            B.DEPT_NO,
                                                            B.USR_ID,
                                                            C.PJT_NO,
                                                            C.CNTRCT_NO,
                                                            C.PJT_TYPE,
                                                            C.RGHT_GRP_TY,
                                                            C.RGHT_GRP_ROLE
                                                    FROM    SM_AUTHORITY_GROUP_USERS A,
                                                            SM_ORGANIZATION B,
                                                            SM_AUTHORITY_GROUP C,
                                                            SM_DEPARTMENT D
                                                    WHERE   A.RGHT_GRP_USR_TY = 'D'
                                                    AND     C.USE_YN = 'Y'
                                                    AND     C.DLT_YN = 'N'
                                                    AND     D.USE_YN = 'Y'
                                                    AND     D.DLT_YN = 'N'
                                                    AND     A.AUTH_NO = B.DEPT_NO
                                                    AND 	B.DEPT_NO = D.DEPT_NO 
                                                    AND     A.RGHT_GRP_CD = C.RGHT_GRP_CD                                                                   
                                                    <if test="pjtNo != null and pjtNo != ''">
                                                        AND C.PJT_NO = #{pjtNo}
                                                    </if>
                                                    <if test="cntrctNo != null and cntrctNo != ''">
                                                        AND C.CNTRCT_NO = #{cntrctNo}
                                                    </if>                  
                                                    AND     C.PJT_TYPE = #{pjtType}
                                                    AND     B.USR_ID = #{usrId}
                                                    UNION ALL
                                                    SELECT  A.RGHT_GRP_NO,
                                                            A.RGHT_GRP_CD,
                                                            A.RGHT_GRP_USR_TY,
                                                            B.ORG_NO,
                                                            B.DEPT_NO,
                                                            B.USR_ID,
                                                            C.PJT_NO,
                                                            C.CNTRCT_NO,
                                                            C.PJT_TYPE,
                                                            C.RGHT_GRP_TY,
                                                            C.RGHT_GRP_ROLE
                                                    FROM    SM_AUTHORITY_GROUP_USERS A,
                                                            SM_ORGANIZATION B,
                                                            SM_AUTHORITY_GROUP C
                                                    WHERE   A.RGHT_GRP_USR_TY != 'D'
                                                    AND     B.DLT_YN = 'N'
                                                    AND     C.USE_YN = 'Y'
                                                    AND     C.DLT_YN = 'N'
                                                    AND     A.AUTH_NO = B.ORG_NO
                                                    AND     A.RGHT_GRP_CD = C.RGHT_GRP_CD                                                                      
                                                    <if test="pjtNo != null and pjtNo != ''">
                                                        AND C.PJT_NO = #{pjtNo}
                                                    </if>
                                                    <if test="cntrctNo != null and cntrctNo != ''">
                                                        AND C.CNTRCT_NO = #{cntrctNo}
                                                    </if>              
                                                    AND     C.PJT_TYPE = #{pjtType}
                                                    AND     B.USR_ID = #{usrId}) AS B
                                        WHERE   A.DLT_YN = 'N'
                                        AND     A.RGHT_GRP_CD = B.RGHT_GRP_CD
                                        AND     A.MENU_CD IN (  WITH RECURSIVE SM_MENU_LIST(MENU_CD,
                                                                                            UP_MENU_CD,
                                                                                            MENU_NM,
                                                                                            DEPTH) 
                                                                AS (    SELECT  A.MENU_CD,
                                                                                A.UP_MENU_CD,
                                                                                A.MENU_NM,
                                                                                1
                                                                        FROM    SM_MENU A
                                                                        WHERE   1 = 1
                                                                        AND     A.MENU_CD = XXX.MENU_CD
                                                                        UNION
                                                                        SELECT  C.MENU_CD,
                                                                                C.UP_MENU_CD,
                                                                                C.MENU_NM,
                                                                                B.DEPTH + 1
                                                                        FROM    SM_MENU_LIST B,
                                                                                SM_MENU C
                                                                        WHERE   B.MENU_CD = C.UP_MENU_CD
                                                                    )
                                                                SELECT  MENU_CD
                                                                FROM SM_MENU_LIST)) = 0 
                            THEN 'N'
                            ELSE 'Y'
                            END AS MENUVIEW_YN
                    FROM    (   WITH RECURSIVE SM_MENU_LIST(    MENU_CD,
                                                                UP_MENU_CD,
                                                                MENU_NM,
                                                                MENU_DSCRPT,
                                                                MENU_URL,
                                                                MENU_LVL,
                                                                MENU_DSPLY_ORDR,
																MENU_API,
                                                                ICON_NM,
                                                                DEPTH,
                                                                PATH,
                                                                CYCLE ) 
                                AS (    SELECT  A.MENU_CD,
                                                A.UP_MENU_CD,
                                                A.MENU_NM,
                                                A.MENU_DSCRPT,
                                                A.MENU_URL,
                                                A.MENU_LVL,
                                                A.MENU_DSPLY_ORDR,
												A.MENU_API,
                                                A.ICON_NM,
                                                1,
                                                ARRAY[A.MENU_CD::TEXT],
                                                FALSE
                                        FROM    SM_MENU A
                                        WHERE   A.MENU_CD = 'M'
                                        UNION ALL
                                        SELECT  A.MENU_CD,
                                                A.UP_MENU_CD,
                                                A.MENU_NM,
                                                A.MENU_DSCRPT,
                                                A.MENU_URL,
                                                A.MENU_LVL,
                                                A.MENU_DSPLY_ORDR,
												A.MENU_API,
                                                A.ICON_NM,
                                                B.DEPTH + 1,
                                                ARRAY_APPEND(B.PATH,
                                                CAST(A.MENU_DSPLY_ORDR AS TEXT)::TEXT),
                                                A.MENU_CD = ANY(B.PATH)
                                        FROM    SM_MENU A,
                                                SM_MENU_LIST B
                                        WHERE   A.UP_MENU_CD = B.MENU_CD
                                        AND     A.MENU_USE_YN = 'Y'
                                        AND     A.DLT_YN = 'N'
										
										<choose>
											<when test="pjtType == 'GAIA'">
											AND A.MENU_DIV IN ('A', 'G')
											</when>
											<otherwise>
											AND A.MENU_DIV IN ('A', 'C')
											</otherwise>
										</choose>
                                        AND     NOT CYCLE
                                    )   SELECT  MENU_CD,
                                                UP_MENU_CD,
                                                MENU_NM,
                                                MENU_DSCRPT,
                                                (CASE WHEN COALESCE(MENU_URL, '') = '' THEN 'javascript:;' ELSE MENU_URL END) AS MENU_URL,
                                                MENU_LVL,
                                                MENU_DSPLY_ORDR,
												MENU_API,
                                                ICON_NM,
                                                DEPTH AS LEVEL,
                                                PATH
                                        FROM    SM_MENU_LIST) AS XXX
                    LEFT JOIN ( SELECT  DISTINCT (A.MENU_CD) AS MENU_CD
                                FROM    SM_MENU_AUTHORITY_GROUP A,
                                        (   SELECT  A.RGHT_GRP_NO,
                                                    A.RGHT_GRP_CD,
                                                    A.RGHT_GRP_USR_TY,
                                                    B.ORG_NO,
                                                    B.DEPT_NO,
                                                    B.USR_ID,
                                                    C.PJT_NO,
                                                    C.CNTRCT_NO,
                                                    C.PJT_TYPE,
                                                    C.RGHT_GRP_TY,
                                                    C.RGHT_GRP_ROLE
                                            FROM    SM_AUTHORITY_GROUP_USERS A,
                                                    SM_ORGANIZATION B,
                                                    SM_AUTHORITY_GROUP C,
                                                    SM_DEPARTMENT D
                                            WHERE   A.RGHT_GRP_USR_TY = 'D'
                                            AND     C.USE_YN = 'Y'
                                            AND     C.DLT_YN = 'N'
                                            AND     D.USE_YN = 'Y'
                                            AND     D.DLT_YN = 'N'
                                            AND     A.AUTH_NO = B.DEPT_NO
                                            AND 	B.DEPT_NO = D.DEPT_NO 
                                            AND     A.RGHT_GRP_CD = C.RGHT_GRP_CD                                                                   
                                            <if test="pjtNo != null and pjtNo != ''">
                                                AND C.PJT_NO = #{pjtNo}
                                            </if>
                                            <if test="cntrctNo != null and cntrctNo != ''">
                                                AND C.CNTRCT_NO = #{cntrctNo}
                                            </if>                 
                                            AND     C.PJT_TYPE = #{pjtType}
                                            AND     B.USR_ID = #{usrId}
                                            UNION ALL
                                            SELECT  A.RGHT_GRP_NO,
                                                    A.RGHT_GRP_CD,
                                                    A.RGHT_GRP_USR_TY,
                                                    B.ORG_NO,
                                                    B.DEPT_NO,
                                                    B.USR_ID,
                                                    C.PJT_NO,
                                                    C.CNTRCT_NO,
                                                    C.PJT_TYPE,
                                                    C.RGHT_GRP_TY,
                                                    C.RGHT_GRP_ROLE
                                            FROM    SM_AUTHORITY_GROUP_USERS A,
                                                    SM_ORGANIZATION B,
                                                    SM_AUTHORITY_GROUP C
                                            WHERE   A.RGHT_GRP_USR_TY != 'D'
                                            AND     B.DLT_YN = 'N'
                                            AND     C.USE_YN = 'Y'
                                            AND     C.DLT_YN = 'N'
                                            AND     A.AUTH_NO = B.ORG_NO
                                            AND     A.RGHT_GRP_CD = C.RGHT_GRP_CD                                                                  
                                            <if test="pjtNo != null and pjtNo != ''">
                                                AND C.PJT_NO = #{pjtNo}
                                            </if>
                                            <if test="cntrctNo != null and cntrctNo != ''">
                                                AND C.CNTRCT_NO = #{cntrctNo}
                                            </if>        
                                            AND     C.PJT_TYPE = #{pjtType}
                                            AND     B.USR_ID = #{usrId}) AS B
                                WHERE   A.DLT_YN = 'N'
                                AND     A.RGHT_GRP_CD = B.RGHT_GRP_CD) AS B ON XXX.MENU_CD = B.MENU_CD) AS A
        LEFT JOIN   (   SELECT  <![CDATA['<span class="badge">'||COUNT(*)||'</span>']]> AS COUNT,
                                'M060102' AS MENU_CD
                        FROM 	AP_DOC A
                        WHERE 	A.DLT_YN = 'N'
                        AND 	A.AP_DOC_STATS IN ('W', 'I')
                        AND 	A.AP_USR_ID = #{usrId}
                        <if test="pjtNo != null and pjtNo != ''">
                            AND A.PJT_NO = #{pjtNo}
                        </if>
                        <if test="cntrctNo != null and cntrctNo != ''">
                            AND A.CNTRCT_NO = #{cntrctNo}
                        </if>
                        UNION ALL
                        SELECT 	<![CDATA['<span class="badge">'||COUNT(*)||'</span>']]> AS COUNT,
                                'M060201' AS MENU_CD
                        FROM 	AP_DOC A,
                                (       SELECT  A.AP_DOC_NO AS AP_DOC_NO,
                                                A.AP_DOC_ID AS AP_DOC_ID,
                                                (       SELECT  AA.AP_USR_ID
                                                        FROM    AP_LINE AA
                                                        WHERE   AA.AP_DOC_NO = A.AP_DOC_NO
                                                        AND     AA.AP_DOC_ID = A.AP_DOC_ID
                                                        AND     AA.AP_ORDER = MIN(A.AP_ORDER)) AS AP_USR_ID
                                        FROM    AP_LINE A
                                        WHERE   A.AP_DIV = 'A'
                                        AND     A.AP_STATS = 'I'
                                        GROUP BY A.AP_DOC_NO, A.AP_DOC_ID 
                                ) AS B
                        WHERE 	A.AP_DOC_NO = B.AP_DOC_NO
                        AND 	A.DLT_YN = 'N'
                        AND 	A.AP_DOC_STATS IN ('I', 'W')
                        AND 	B.AP_USR_ID = #{usrId}
                        <if test="pjtNo != null and pjtNo != ''">
                            AND A.PJT_NO = #{pjtNo}
                        </if>
                        <if test="cntrctNo != null and cntrctNo != ''">
                            AND A.CNTRCT_NO = #{cntrctNo}
                        </if>
                        UNION ALL
                        SELECT 	<![CDATA['<span class="badge">'||COUNT(*)||'</span>']]> AS COUNT,
                                'M060202' AS MENU_CD
                        FROM 	AP_DOC A,
                                AP_LINE B
                        WHERE 	A.AP_DOC_NO = B.AP_DOC_NO
                        AND 	A.DLT_YN = 'N'
                        AND 	A.AP_DOC_STATS = 'I'
                        AND 	B.AP_USR_ID = #{usrId}
                        AND 	B.AP_DIV = 'A'
                        AND 	B.AP_STATS = 'A'
                        <if test="pjtNo != null and pjtNo != ''">
                            AND A.PJT_NO = #{pjtNo}
                        </if>
                        <if test="cntrctNo != null and cntrctNo != ''">
                            AND A.CNTRCT_NO = #{cntrctNo}
                        </if>
                        ) AS B ON A.MENU_CD = B.MENU_CD
        WHERE   A.MENUVIEW_YN = 'Y'
		AND 	A.MENU_CD != 'COMMON'
        ORDER BY CAST(COALESCE(A.PATH[2], '0') AS INTEGER), CAST(COALESCE(A.PATH[3], '0') AS INTEGER), PATH
    </select>

    <select id="selectAdminProjectList" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectAdminProjectList][gwLee]  */
        SELECT  A.PJT_NO AS PJT_NO, 
                REPLACE(REPLACE(A.PJT_NM, '''', '\'''), '"', '\"') AS PJT_NM,                
                A.PJT_NO AS CNTRCT_NO, 
                REPLACE(REPLACE(A.PJT_NM, '''', '\'''), '"', '\"') AS CNTRCT_NM, 
                A.PJT_DIV AS PJT_DIV,
                (
					SELECT 	COUNT(AA.*) 
					FROM 	CN_CONTRACT AA 
					WHERE 	AA.PJT_NO = A.PJT_NO 
					AND 	AA.DLT_YN = 'N'
				) AS CONTRACT_COUNT 
        FROM    CN_PROJECT A
        WHERE   A.CON_PSTATS IN ('0602', '0603', '0604')
        AND     A.DLT_YN = 'N'
        ORDER BY A.RGST_DT ASC
    </select>

    <select id="selectGAIAUserProjectList" parameterType="String" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectGAIAUserProjectList][gwLee]  */
        SELECT  A.PJT_NO AS PJT_NO,
                REPLACE(REPLACE(A.PJT_NM, '''', '\'''), '"', '\"') AS PJT_NM,
                A.PJT_NO AS CNTRCT_NO,
                REPLACE(REPLACE(A.PJT_NM, '''', '\'''), '"', '\"') AS CNTRCT_NM, 
                A.PJT_DIV AS PJT_DIV,
                (
					SELECT 	COUNT(AA.*) 
					FROM 	CN_CONTRACT AA 
					WHERE 	AA.PJT_NO = A.PJT_NO 
					AND 	AA.DLT_YN = 'N'
				) AS CONTRACT_COUNT 
        FROM    (   SELECT  DISTINCT(C.PJT_NO) AS PJT_NO,
                            C.PJT_NM AS PJT_NM,
                            C.PJT_DIV AS PJT_DIV,
                            C.RGST_DT AS RGST_DT
                    FROM    SM_DEPARTMENT A,
                            SM_ORGANIZATION B,
                            CN_PROJECT C
                    WHERE   A.DEPT_NO = B.DEPT_NO
                    AND     A.PJT_NO = C.PJT_NO
                    AND     B.USR_ID = #{usrId}
                    AND     A.PJT_TYPE = #{pjtType}
                    AND     A.DLT_YN = 'N'
                    AND     A.USE_YN = 'Y'
                    AND     B.DLT_YN = 'N'
                    AND     C.DLT_YN = 'N'
                    AND     C.USE_YN = 'Y'
                    AND     C.CON_PSTATS IN ('0602', '0603', '0604')
                ) AS A
        ORDER BY A.RGST_DT ASC
    </select>

    <select id="selectCAIROSUserProjectList" parameterType="String" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectCAIROSUserProjectList][gwLee]  */
        SELECT  A.PJT_NO AS PJT_NO,
                REPLACE(REPLACE(A.PJT_NM, '''', '\'''), '"', '\"') AS PJT_NM,
                A.CNTRCT_NO AS CNTRCT_NO,
                REPLACE(REPLACE(A.CNTRCT_NM, '''', '\'''), '"', '\"') AS CNTRCT_NM, 
                A.PJT_DIV AS PJT_DIV,
				'1' AS CONTRACT_COUNT
        FROM    (   SELECT  DISTINCT(D.CNTRCT_NO) AS CNTRCT_NO, 
                            CASE
								WHEN D.MAJOR_CNSTTY_CD IS NOT NULL THEN '[' ||( SELECT 	BB.CMN_CD_NM_KRN
																				FROM 	SM_COM_CODE BB
																				WHERE 	BB.CMN_GRP_CD = #{cmnGrpCd}
																				AND 	BB.CMN_CD = D.MAJOR_CNSTTY_CD)|| '] ' || D.CNTRCT_NM
								ELSE D.CNTRCT_NM
							END AS CNTRCT_NM,
                            C.PJT_NO AS PJT_NO, 
                            C.PJT_NM AS PJT_NM, 
                            C.PJT_DIV AS PJT_DIV,
                            C.RGST_DT AS P_RGST_DT,
                            D.RGST_DT AS C_RGST_DT 
                    FROM    SM_DEPARTMENT A,
                            SM_ORGANIZATION B, 
                            CN_PROJECT C, 
                            CN_CONTRACT D
                    WHERE   A.DEPT_NO = B.DEPT_NO
                    AND     A.PJT_NO = C.PJT_NO
                    AND     A.CNTRCT_NO = D.CNTRCT_NO
                    AND     B.USR_ID = #{usrId}
                    AND     A.PJT_TYPE = #{pjtType}
                    AND     A.DLT_YN = 'N'
                    AND     A.USE_YN = 'Y'
                    AND     B.DLT_YN = 'N'
                    AND     C.DLT_YN = 'N'
                    AND     C.USE_YN = 'Y'
                    AND     B.DLT_YN = 'N'
                    AND     C.CON_PSTATS IN ('0602', '0603', '0604')
                ) AS A
        ORDER BY A.P_RGST_DT, C_RGST_DT ASC
    </select>

	<select id="selectContractList" parameterType="String" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectContractList][gwLee]  */
        SELECT 	A.CNTRCT_NO AS CNTRCT_NO,
				CASE
					WHEN A.MAJOR_CNSTTY_CD IS NOT NULL THEN '[' ||( SELECT 	BB.CMN_CD_NM_KRN
																	FROM 	SM_COM_CODE BB
																	WHERE 	BB.CMN_GRP_CD = #{cmnGrpCd}
																	AND 	BB.CMN_CD = A.MAJOR_CNSTTY_CD)|| '] ' || REPLACE(REPLACE(A.CNTRCT_NM, '''', '\'''), '"', '\"')
					ELSE REPLACE(REPLACE(A.CNTRCT_NM, '''', '\'''), '"', '\"')
				END AS CNTRCT_NM
		FROM 	CN_CONTRACT A
		WHERE 	A.PJT_NO = #{pjtNo}
		AND 	A.DLT_YN = 'N'
		ORDER BY A.RGST_DT ASC
    </select>

    <select id="selectContractChangeList" parameterType="String" resultType="map">
            /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectContractChangeList][gwLee]  */
            SELECT 	CC.CNTRCT_CHG_ID AS CNTRCT_CHG_ID,
                    CASE
                            WHEN CC.CNTRCT_PHASE IS NOT NULL
                            THEN '[ ' || CC.CNTRCT_PHASE || '차 ' || CC.CNTRCT_CHG_NO || '회 ] ' || COALESCE(TO_CHAR(TO_DATE(CC.CNTRCT_CHG_DATE, 'YYYYMMDD'), 'YYYY-MM-DD '), '') ||
                                   CASE
                                       WHEN CC.LAST_CHG_YN = 'Y' THEN '최종'
                                       ELSE ''
                                       END
                            ELSE
                                   '[ ' || CC.CNTRCT_CHG_NO || '회 ] ' || COALESCE(TO_CHAR(TO_DATE(CC.CNTRCT_CHG_DATE, 'YYYYMMDD'), 'YYYY-MM-DD '), '') ||
                                   CASE
                                       WHEN CC.LAST_CHG_YN = 'Y' THEN '최종'
                                       ELSE ''
                                       END
                    END AS CNTRCT_CHG_NM,
            		CC.CNTRCT_AMT,
            		CC.CNTRCT_CHG_NO,
            		to_char(CC.rgst_dt, 'YYYY-MM-DD') AS dt,
            		CASE WHEN last_chg_yn='Y' THEN ' 최종' ELSE '' END AS txt
            FROM    CN_CONTRACT_CHANGE CC,
            		CN_CONTRACT C
            WHERE 	C.CNTRCT_NO = CC.CNTRCT_NO
            AND 	CC.DLT_YN = 'N'
            AND     C.CNTRCT_NO = #{cntrctNo}
            ORDER BY CASE WHEN CC.LAST_CHG_YN = 'Y' THEN 0 ELSE 1 END, 
				     CC.CNTRCT_PHASE DESC, 
					 CC.CNTRCT_CHG_NO DESC
        </select>

    <select id="selectAdminMainComprehensiveProjectList" parameterType="mainComprehensiveProjectInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectAdminMainComprehensiveProjectList][gwLee]  */
        <![CDATA[
        SELECT  A.PJT_NO AS PJT_NO,
                A.PJT_NM AS PJT_NM,
                A.PJT_NO as CNTRCT_NO,
                A.PJT_NM as CNTRCT_NM,
                A.PJT_DIV as PJT_DIV,
                A.PLC_LCT_ADRS AS PLC_LCT_ADRS,
                A.CON_PSTATS_CD AS CON_PSTATS_CD,
                A.CON_PSTATS_NM AS CON_PSTATS_NM,
                A.PJT_PERIOD AS PJT_PERIOD,
                A.FAVORITES AS FAVORITES,
                A.PJT_PLAN AS PJT_PLAN,
                A.PJT_RESULTS AS PJT_RESULTS,
                A.PJT_COMPLETED AS PJT_COMPLETED,
				A.PJT_COMPLETED_LV AS PJT_COMPLETED_LV,
                A.JOB_COUNT AS JOB_COUNT,
                A.DRAFT_COUNT AS DRAFT_COUNT,
                A.ETC_COUNT AS ETC_COUNT
        FROM    (   SELECT  A.PJT_NO AS PJT_NO,
                            A.PJT_NM AS PJT_NM,
                            A.PJT_NO as CNTRCT_NO,
                            A.PJT_NM as CNTRCT_NM,
                            A.PJT_DIV as PJT_DIV,
                            (CASE   WHEN COALESCE(A.PLC_LCT_ADRS, '주소 미설정') = ''
                                    THEN '주소 미설정'
                                    ELSE COALESCE(A.PLC_LCT_ADRS, '주소 미설정')
                            END) AS PLC_LCT_ADRS,
                            A.CON_PSTATS AS CON_PSTATS_CD,
                            (CASE   WHEN A.CON_PSTATS = '0604' 
                                    THEN '완료'
                                    ELSE '진행중 [' ||(     SELECT  AA.CMN_CD_NM_KRN
                                                            FROM    SM_COM_CODE AA
                                                            WHERE   AA.CMN_GRP_CD = #{conPstatsCd}
                                                            AND     AA.CMN_CD = A.CON_PSTATS)|| ']'
                            END) AS CON_PSTATS_NM,
                            TO_DATE(A.PJT_BGN_DATE, 'YYYYMMDD') AS PJT_BGN_DATE,
                            TO_DATE(A.PJT_END_DATE, 'YYYYMMDD') AS PJT_END_DATE,
                            COALESCE(TO_DATE(A.PJT_BGN_DATE, 'YYYYMMDD')|| ' ~ ' || TO_DATE(A.PJT_END_DATE, 'YYYYMMDD'), '공사기간 미설정') AS PJT_PERIOD,
                            (CASE   WHEN COALESCE(B.PJT_NO, '0') = '0' 
                                    THEN 'icon_btn'
                                    ELSE 'icon_btn favorites'
                            END) AS FAVORITES,
                            COALESCE(F.PLAN_PER, '0') AS PJT_PLAN,
                            COALESCE(F.ACTUAL_PER, '0') AS PJT_RESULTS,
                            COALESCE(F.PROCESS, '0') AS PJT_COMPLETED,
                            (CASE   WHEN COALESCE(F.PROCESS, '0') > 100 
                                    THEN 'status_tit lv lv3'
                                    WHEN COALESCE(F.PROCESS, '0') < 90 
                                    THEN 'status_tit lv lv1'
                                    ELSE 'status_tit lv lv2'
                            END) AS PJT_COMPLETED_LV,
                            COALESCE(D.JOB_COUNT, '0') AS JOB_COUNT,
                            COALESCE(C.DRAT_COUNT, '0') AS DRAFT_COUNT,
                            COALESCE(E.ETC_COUNT, '0') AS ETC_COUNT,
                            A.RGST_DT AS RGST_DT
                    FROM    CN_PROJECT A
                    LEFT JOIN CN_PROJECT_FAVORITES B    ON  A.PJT_NO = B.PJT_NO 
                                                        AND A.PJT_NO = B.CNTRCT_NO
                                                        AND B.LOGIN_ID = #{loginId}
                                                        AND B.PJT_TYPE = #{pjtType}
                    LEFT JOIN ( SELECT 	A.PJT_NO AS PJT_NO,
                                        COUNT(B.AP_USR_ID) AS DRAT_COUNT
                                FROM 	AP_DOC A,
                                        (       SELECT  A.AP_DOC_NO,
                                                        A.AP_DOC_ID,
                                                        (       SELECT  AA.AP_USR_ID
                                                                FROM    AP_LINE AA
                                                                WHERE   AA.AP_DOC_NO = A.AP_DOC_NO
                                                                        AND AA.AP_DOC_ID = A.AP_DOC_ID
                                                                        AND AA.AP_ORDER = MIN(A.AP_ORDER)
                                                        ) AS AP_USR_ID
                                                FROM    AP_LINE A
                                                WHERE   A.AP_DIV = 'A'
                                                AND     A.AP_STATS = 'I'
                                                GROUP BY A.AP_DOC_NO, A.AP_DOC_ID
                                        ) AS B
                                WHERE 	A.AP_DOC_NO = B.AP_DOC_NO
                                AND 	A.AP_DOC_ID = B.AP_DOC_ID
                                AND     A.AP_DOC_STATS IN ('I', 'W')
                                AND 	A.DLT_YN = 'N'
                                AND 	B.AP_USR_ID = #{usrId}
                                AND     A.AP_TYPE = '01'
                                GROUP BY A.PJT_NO) AS C ON A.PJT_NO = C.PJT_NO
                    LEFT JOIN ( SELECT 	A.PJT_NO AS PJT_NO,
                                        COUNT(B.AP_USR_ID) AS JOB_COUNT
                                FROM 	AP_DOC A,
                                        (       SELECT  A.AP_DOC_NO,
                                                        A.AP_DOC_ID,
                                                        (       SELECT  AA.AP_USR_ID
                                                                FROM    AP_LINE AA
                                                                WHERE   AA.AP_DOC_NO = A.AP_DOC_NO
                                                                        AND AA.AP_DOC_ID = A.AP_DOC_ID
                                                                        AND AA.AP_ORDER = MIN(A.AP_ORDER)
                                                        ) AS AP_USR_ID
                                                FROM    AP_LINE A
                                                WHERE   A.AP_DIV = 'A'
                                                AND     A.AP_STATS = 'I'
                                                GROUP BY A.AP_DOC_NO, A.AP_DOC_ID
                                        ) AS B
                                WHERE 	A.AP_DOC_NO = B.AP_DOC_NO
                                AND 	A.AP_DOC_ID = B.AP_DOC_ID
                                AND     A.AP_DOC_STATS IN ('I', 'W')
                                AND 	A.DLT_YN = 'N'
                                AND 	B.AP_USR_ID = #{usrId}
                                AND     A.AP_TYPE = '02'
                                GROUP BY A.PJT_NO) AS D ON A.PJT_NO = D.PJT_NO
                    LEFT JOIN ( SELECT 	A.PJT_NO AS PJT_NO,
                                        COUNT(B.AP_USR_ID) AS ETC_COUNT
                                FROM 	AP_DOC A,
                                        (       SELECT  A.AP_DOC_NO,
                                                        A.AP_DOC_ID,
                                                        (       SELECT  AA.AP_USR_ID
                                                                FROM    AP_LINE AA
                                                                WHERE   AA.AP_DOC_NO = A.AP_DOC_NO
                                                                        AND AA.AP_DOC_ID = A.AP_DOC_ID
                                                                        AND AA.AP_ORDER = MIN(A.AP_ORDER)
                                                        ) AS AP_USR_ID
                                                FROM    AP_LINE A
                                                WHERE   A.AP_DIV = 'A'
                                                AND     A.AP_STATS = 'I'
                                                GROUP BY A.AP_DOC_NO, A.AP_DOC_ID
                                        ) AS B
                                WHERE 	A.AP_DOC_NO = B.AP_DOC_NO
                                AND 	A.AP_DOC_ID = B.AP_DOC_ID
                                AND     A.AP_DOC_STATS IN ('I', 'W')
                                AND 	A.DLT_YN = 'N'
                                AND 	B.AP_USR_ID = #{usrId}
                                AND     A.AP_TYPE NOT IN ('01', '02')
                                GROUP BY A.PJT_NO) AS E ON A.PJT_NO = E.PJT_NO
                    LEFT JOIN ( SELECT  G.PJT_NO,
                                        CASE    WHEN G.PLAN_PER > 1 
                                                    THEN CEILING(G.PLAN_PER)
                                                ELSE ROUND(G.PLAN_PER, 2)
                                        END AS PLAN_PER,
                                        CASE    WHEN G.ACTUAL_PER > 1 
                                                    THEN CEILING(G.ACTUAL_PER)
                                                ELSE ROUND(G.ACTUAL_PER, 2)
                                        END AS ACTUAL_PER,
                                        CASE    WHEN G.PROCESS > 1 
                                                    THEN CEILING(G.PROCESS)
                                                ELSE ROUND(G.PROCESS, 2)
                                        END AS PROCESS
                                FROM    (   SELECT  PROJECT.PJT_NO,
                                                    (CASE
                                                        WHEN COALESCE ( SUM(TT.TOTAL_CST),0) = 0
                                                            THEN 0
                                                        ELSE COALESCE(NULLIF(SUM(PL.PLAN_CST) / SUM(TT.TOTAL_CST) * 100, 0), 0)
                                                    END) AS PLAN_PER,
                                                    (CASE
                                                        WHEN COALESCE ( SUM(TT.TOTAL_CST),0) = 0
                                                            THEN 0
                                                        ELSE COALESCE(NULLIF(SUM(AT.ACTUAL_CST) / SUM(TT.TOTAL_CST) * 100, 0), 0)
                                                    END) AS ACTUAL_PER,
                                                    (CASE
                                                        WHEN COALESCE ( SUM(PL.PLAN_CST) ,0) = 0
                                                            THEN 0
                                                        ELSE COALESCE(NULLIF(SUM(AT.ACTUAL_CST) / SUM(PL.PLAN_CST) * 100, 0), 0)
                                                    END) AS PROCESS
                                            FROM (  SELECT  PJT_NO
                                                    FROM    CN_PROJECT
                                                    WHERE   DLT_YN = 'N' ) AS PROJECT
                                            LEFT JOIN   (   SELECT  SUBSTRING(PAP.CNTRCT_CHG_ID, 1, 10) AS PJT_NO,
					                                                SUM(CST_CUM) AS PLAN_CST
                                                            FROM    PR_ACTIVITY_PLAN PAP
                                                                    INNER JOIN  (   SELECT  REVISION_ID, 
                                                                                            CNTRCT_CHG_ID 
                                                                                    FROM    PR_REVISION PR 
                                                                                    WHERE   PR.LAST_REVISION_YN='Y' 
                                                                                    AND     PR.DLT_YN ='N' 
                                                                                ) AS PR ON PAP.CNTRCT_CHG_ID = PR.CNTRCT_CHG_ID 
                                                                                        AND PAP.REVISION_ID  = PR.REVISION_ID
                                                            WHERE   PAP.PLAN_DT = TO_CHAR(NOW(), 'YYYY-MM-DD')
                                                            AND PAP.DLT_YN = 'N'
                                                            GROUP BY SUBSTRING(PAP.CNTRCT_CHG_ID, 1, 10)
                                                        ) AS PL ON PROJECT.PJT_NO = PL.PJT_NO
                                            LEFT JOIN   (   SELECT 	SUBSTRING(CNTRCT_CHG_ID, 1, 10) AS PJT_NO, 
																	SUM_ACTUAL_CST(CAST(SUBSTRING(CNTRCT_CHG_ID, 1, 10) AS TEXT), 'C') AS ACTUAL_CST  
															FROM 	CW_DAILY_REPORT_QDB 
															GROUP BY SUBSTRING(CNTRCT_CHG_ID, 1, 10)
                                                        ) AS AT ON PROJECT.PJT_NO = AT.PJT_NO
                                            LEFT JOIN   (   SELECT  SUBSTRING(CCC.CNTRCT_CHG_ID, 1, 10) AS PJT_NO,
                                                                    SUM(CNTRCT_AMT) AS TOTAL_CST
                                                            FROM    CN_CONTRACT_CHANGE CCC
                                                            WHERE   CCC.LAST_CHG_YN = 'Y'
                                                            AND     CCC.DLT_YN = 'N'
                                                            GROUP BY SUBSTRING(CCC.CNTRCT_CHG_ID, 1, 10)
                                                        ) AS TT ON PROJECT.PJT_NO = TT.PJT_NO
                                            GROUP BY PROJECT.PJT_NO) AS G ) AS F ON A.PJT_NO = F.PJT_NO
                    WHERE 	A.CON_PSTATS IN ('0602', '0603', '0604')
                    AND 	A.DLT_YN = 'N') AS A
		]]>
        <where>
            <if test="favoritesSearch != null and favoritesSearch != ''">
                AND A.FAVORITES = #{favoritesSearch}
            </if>
            <if test='searchItem != null and searchItem != ""'>        
                <if test='searchItem.equals("pjtName")'>
                    AND A.PJT_NM LIKE CONCAT('%', #{searchText}, '%')
                </if>            
                <if test='searchItem.equals("pjtAddress")'>
                    AND A.PLC_LCT_ADRS LIKE CONCAT('%', #{searchText}, '%')
                </if>
            </if>
        </where>        
        ORDER BY A.RGST_DT ASC
    </select>

    <select id="selectGAIAMainComprehensiveProjectList" parameterType="mainComprehensiveProjectInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectGAIAMainComprehensiveProjectList][gwLee]  */
		<![CDATA[
        SELECT  A.PJT_NO AS PJT_NO,
                A.PJT_NM AS PJT_NM,
                A.PJT_NO as CNTRCT_NO,
                A.PJT_NM as CNTRCT_NM,
                A.PJT_DIV as PJT_DIV,
                A.PLC_LCT_ADRS AS PLC_LCT_ADRS,
                A.CON_PSTATS_CD AS CON_PSTATS_CD,
                A.CON_PSTATS_NM AS CON_PSTATS_NM,
                A.PJT_PERIOD AS PJT_PERIOD,
                A.FAVORITES AS FAVORITES,
                A.PJT_PLAN AS PJT_PLAN,
                A.PJT_RESULTS AS PJT_RESULTS,
                A.PJT_COMPLETED AS PJT_COMPLETED,
				A.PJT_COMPLETED_LV AS PJT_COMPLETED_LV,
                A.JOB_COUNT AS JOB_COUNT,
                A.DRAFT_COUNT AS DRAFT_COUNT,
                A.ETC_COUNT AS ETC_COUNT
        FROM    (   SELECT  A.PJT_NO AS PJT_NO,
                            A.PJT_NM AS PJT_NM,
                            A.PJT_NO as CNTRCT_NO,
                            A.PJT_NM as CNTRCT_NM,
                            A.PJT_DIV as PJT_DIV,
                            (CASE   WHEN COALESCE(A.PLC_LCT_ADRS, '주소 미설정') = ''
                                    THEN '주소 미설정'
                                    ELSE COALESCE(A.PLC_LCT_ADRS, '주소 미설정')
                            END) AS PLC_LCT_ADRS,
                            A.CON_PSTATS AS CON_PSTATS_CD,
                            (CASE   WHEN A.CON_PSTATS = '0604' 
                                    THEN '완료'
                                    ELSE '진행중 [' ||(     SELECT  AA.CMN_CD_NM_KRN
                                                            FROM    SM_COM_CODE AA
                                                            WHERE   AA.CMN_GRP_CD = #{conPstatsCd}
                                                            AND     AA.CMN_CD = A.CON_PSTATS)|| ']'
                            END) AS CON_PSTATS_NM,
                            TO_DATE(A.PJT_BGN_DATE, 'YYYYMMDD') AS PJT_BGN_DATE,
                            TO_DATE(A.PJT_END_DATE, 'YYYYMMDD') AS PJT_END_DATE,
                            COALESCE(TO_DATE(A.PJT_BGN_DATE, 'YYYYMMDD')|| ' ~ ' || TO_DATE(A.PJT_END_DATE, 'YYYYMMDD'), '공사기간 미설정') AS PJT_PERIOD,
                            (CASE   WHEN COALESCE(B.PJT_NO, '0') = '0' 
                                    THEN 'icon_btn'
                                    ELSE 'icon_btn favorites'
                            END) AS FAVORITES,
                            COALESCE(G.PLAN_PER, '0') AS PJT_PLAN,
                            COALESCE(G.ACTUAL_PER, '0') AS PJT_RESULTS,
                            COALESCE(G.PROCESS, '0') AS PJT_COMPLETED,
                            (CASE   WHEN COALESCE(G.PROCESS, '0') > 100 
                                    THEN 'status_tit lv lv3'
                                    WHEN COALESCE(G.PROCESS, '0') < 90 
                                    THEN 'status_tit lv lv1'
                                    ELSE 'status_tit lv lv2'
                            END) AS PJT_COMPLETED_LV,
                            COALESCE(E.JOB_COUNT, '0') AS JOB_COUNT,
                            COALESCE(C.DRAT_COUNT, '0') AS DRAFT_COUNT,
                            COALESCE(F.ETC_COUNT, '0') AS ETC_COUNT,
                            A.RGST_DT AS RGST_DT
                    FROM    CN_PROJECT A
                    LEFT JOIN CN_PROJECT_FAVORITES B    ON  A.PJT_NO = B.PJT_NO 
                                                        AND A.PJT_NO = B.CNTRCT_NO
                                                        AND B.LOGIN_ID = #{loginId}
                                                        AND B.PJT_TYPE = #{pjtType}
                    LEFT JOIN ( SELECT 	A.PJT_NO AS PJT_NO,
                                        COUNT(B.AP_USR_ID) AS DRAT_COUNT
                                FROM 	AP_DOC A,
                                        (       SELECT  A.AP_DOC_NO,
                                                        A.AP_DOC_ID,
                                                        (       SELECT  AA.AP_USR_ID
                                                                FROM    AP_LINE AA
                                                                WHERE   AA.AP_DOC_NO = A.AP_DOC_NO
                                                                        AND AA.AP_DOC_ID = A.AP_DOC_ID
                                                                        AND AA.AP_ORDER = MIN(A.AP_ORDER)
                                                        ) AS AP_USR_ID
                                                FROM    AP_LINE A
                                                WHERE   A.AP_DIV = 'A'
                                                AND     A.AP_STATS = 'I'
                                                GROUP BY A.AP_DOC_NO, A.AP_DOC_ID
                                        ) AS B
                                WHERE 	A.AP_DOC_NO = B.AP_DOC_NO
                                AND 	A.AP_DOC_ID = B.AP_DOC_ID
                                AND     A.AP_DOC_STATS IN ('I', 'W')
                                AND 	A.DLT_YN = 'N'
                                AND     A.AP_TYPE = '01'
                                AND 	B.AP_USR_ID = #{usrId}
                                GROUP BY A.PJT_NO) AS C ON A.PJT_NO = C.PJT_NO
                    LEFT JOIN ( SELECT 	A.PJT_NO AS PJT_NO,
                                        COUNT(B.AP_USR_ID) AS JOB_COUNT
                                FROM 	AP_DOC A,
                                        (       SELECT  A.AP_DOC_NO,
                                                        A.AP_DOC_ID,
                                                        (       SELECT  AA.AP_USR_ID
                                                                FROM    AP_LINE AA
                                                                WHERE   AA.AP_DOC_NO = A.AP_DOC_NO
                                                                        AND AA.AP_DOC_ID = A.AP_DOC_ID
                                                                        AND AA.AP_ORDER = MIN(A.AP_ORDER)
                                                        ) AS AP_USR_ID
                                                FROM    AP_LINE A
                                                WHERE   A.AP_DIV = 'A'
                                                AND     A.AP_STATS = 'I'
                                                GROUP BY A.AP_DOC_NO, A.AP_DOC_ID
                                        ) AS B
                                WHERE 	A.AP_DOC_NO = B.AP_DOC_NO
                                AND 	A.AP_DOC_ID = B.AP_DOC_ID
                                AND     A.AP_DOC_STATS IN ('I', 'W')
                                AND 	A.DLT_YN = 'N'
                                AND     A.AP_TYPE = '02'
                                AND 	B.AP_USR_ID = #{usrId}
                                GROUP BY A.PJT_NO) AS E ON A.PJT_NO = E.PJT_NO
                    LEFT JOIN ( SELECT 	A.PJT_NO AS PJT_NO,
                                        COUNT(B.AP_USR_ID) AS ETC_COUNT
                                FROM 	AP_DOC A,
                                        (       SELECT  A.AP_DOC_NO,
                                                        A.AP_DOC_ID,
                                                        (       SELECT  AA.AP_USR_ID
                                                                FROM    AP_LINE AA
                                                                WHERE   AA.AP_DOC_NO = A.AP_DOC_NO
                                                                        AND AA.AP_DOC_ID = A.AP_DOC_ID
                                                                        AND AA.AP_ORDER = MIN(A.AP_ORDER)
                                                        ) AS AP_USR_ID
                                                FROM    AP_LINE A
                                                WHERE   A.AP_DIV = 'A'
                                                AND     A.AP_STATS = 'I'
                                                GROUP BY A.AP_DOC_NO, A.AP_DOC_ID
                                        ) AS B
                                WHERE 	A.AP_DOC_NO = B.AP_DOC_NO
                                AND 	A.AP_DOC_ID = B.AP_DOC_ID
                                AND     A.AP_DOC_STATS IN ('I', 'W')
                                AND 	A.DLT_YN = 'N'
                                AND     A.AP_TYPE NOT IN ('01', '02')
                                AND 	B.AP_USR_ID = #{usrId}
                                GROUP BY A.PJT_NO) AS F ON A.PJT_NO = F.PJT_NO
                    LEFT JOIN ( SELECT  G.PJT_NO,
                                        CASE    WHEN G.PLAN_PER > 1 
                                                    THEN CEILING(G.PLAN_PER)
                                                ELSE ROUND(G.PLAN_PER, 2)
                                        END AS PLAN_PER,
                                        CASE    WHEN G.ACTUAL_PER > 1 
                                                    THEN CEILING(G.ACTUAL_PER)
                                                ELSE ROUND(G.ACTUAL_PER, 2)
                                        END AS ACTUAL_PER,
                                        CASE    WHEN G.PROCESS > 1 
                                                    THEN CEILING(G.PROCESS)
                                                ELSE ROUND(G.PROCESS, 2)
                                        END AS PROCESS
                                FROM    (   SELECT  PROJECT.PJT_NO,
                                                    (CASE
                                                        WHEN COALESCE ( SUM(TT.TOTAL_CST),0) = 0
                                                            THEN 0
                                                        ELSE COALESCE(NULLIF(SUM(PL.PLAN_CST) / SUM(TT.TOTAL_CST) * 100, 0), 0)
                                                    END) AS PLAN_PER,
                                                    (CASE
                                                        WHEN COALESCE ( SUM(TT.TOTAL_CST),0) = 0
                                                            THEN 0
                                                        ELSE COALESCE(NULLIF(SUM(AT.ACTUAL_CST) / SUM(TT.TOTAL_CST) * 100, 0), 0)
                                                    END) AS ACTUAL_PER,
                                                    (CASE
                                                        WHEN COALESCE ( SUM(PL.PLAN_CST) ,0) = 0
                                                            THEN 0
                                                        ELSE COALESCE(NULLIF(SUM(AT.ACTUAL_CST) / SUM(PL.PLAN_CST) * 100, 0), 0)
                                                    END) AS PROCESS
                                            FROM (  SELECT  PJT_NO
                                                    FROM    CN_PROJECT
                                                    WHERE   DLT_YN = 'N' ) AS PROJECT
                                            LEFT JOIN   (   SELECT  SUBSTRING(PAP.CNTRCT_CHG_ID, 1, 10) AS PJT_NO,
					                                                SUM(CST_CUM) AS PLAN_CST
                                                            FROM    PR_ACTIVITY_PLAN PAP
                                                                    INNER JOIN  (   SELECT  REVISION_ID, 
                                                                                            CNTRCT_CHG_ID 
                                                                                    FROM    PR_REVISION PR 
                                                                                    WHERE   PR.LAST_REVISION_YN='Y' 
                                                                                    AND     PR.DLT_YN ='N' 
                                                                                ) AS PR ON PAP.CNTRCT_CHG_ID = PR.CNTRCT_CHG_ID 
                                                                                        AND PAP.REVISION_ID  = PR.REVISION_ID
                                                            WHERE   PAP.PLAN_DT = TO_CHAR(NOW(), 'YYYY-MM-DD')
                                                            AND PAP.DLT_YN = 'N'
                                                            GROUP BY SUBSTRING(PAP.CNTRCT_CHG_ID, 1, 10)
                                                        ) AS PL ON PROJECT.PJT_NO = PL.PJT_NO
                                            LEFT JOIN   (   SELECT 	SUBSTRING(CNTRCT_CHG_ID, 1, 10) AS PJT_NO, 
																	SUM_ACTUAL_CST(CAST(SUBSTRING(CNTRCT_CHG_ID, 1, 10) AS TEXT), 'C') AS ACTUAL_CST  
															FROM 	CW_DAILY_REPORT_QDB 
															GROUP BY SUBSTRING(CNTRCT_CHG_ID, 1, 10)
                                                        ) AS AT ON PROJECT.PJT_NO = AT.PJT_NO
                                            LEFT JOIN   (   SELECT  SUBSTRING(CCC.CNTRCT_CHG_ID, 1, 10) AS PJT_NO,
                                                                    SUM(CNTRCT_AMT) AS TOTAL_CST
                                                            FROM    CN_CONTRACT_CHANGE CCC
                                                            WHERE   CCC.LAST_CHG_YN = 'Y'
                                                            AND     CCC.DLT_YN = 'N'
                                                            GROUP BY SUBSTRING(CCC.CNTRCT_CHG_ID, 1, 10)
                                                        ) AS TT ON PROJECT.PJT_NO = TT.PJT_NO
                                            GROUP BY PROJECT.PJT_NO) AS G  ) AS G ON A.PJT_NO = G.PJT_NO
                    INNER JOIN (SELECT  DISTINCT A.PJT_NO, 
                                        A.CNTRCT_NO, 
                                        A.PJT_TYPE, 
                                        B.USR_ID 
                                FROM    SM_DEPARTMENT A, 
                                        SM_ORGANIZATION B 
                                WHERE   A.USE_YN = 'Y'
                                AND     A.DLT_YN = 'N' 
                                AND     B.DLT_YN = 'N' 
                                AND     A.PJT_TYPE = #{pjtType}
                                AND     A.DEPT_NO = B.DEPT_NO 
                                AND 	B.USR_ID = #{usrId}) AS D ON A.PJT_NO = D.PJT_NO
                    WHERE 	A.CON_PSTATS IN ('0602', '0603', '0604')
		]]>
                    AND 	A.DLT_YN = 'N') AS A 
        <where>
            <if test="favoritesSearch != null and favoritesSearch != ''">
                AND A.FAVORITES = #{favoritesSearch}
            </if>
            <if test='searchItem != null and searchItem != ""'>        
                <if test='searchItem.equals("pjtName")'>
                    AND A.PJT_NM LIKE CONCAT('%', #{searchText}, '%')
                </if>            
                <if test='searchItem.equals("pjtAddress")'>
                    AND A.PLC_LCT_ADRS LIKE CONCAT('%', #{searchText}, '%')
                </if>
            </if>
        </where>    
        ORDER BY A.RGST_DT ASC
    </select>

    <select id="selectCAIROSMainComprehensiveProjectList" parameterType="mainComprehensiveProjectInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectCAIROSMainComprehensiveProjectList][gwLee]  */
		<![CDATA[
        SELECT  A.PJT_NO AS PJT_NO,
                A.PJT_NM AS PJT_NM,
                A.CNTRCT_NO AS CNTRCT_NO,
                A.CNTRCT_NM AS CNTRCT_NM,
                A.PJT_DIV as PJT_DIV,
                A.PLC_LCT_ADRS AS PLC_LCT_ADRS,
                A.CON_PSTATS_CD AS CON_PSTATS_CD,
                A.CON_PSTATS_NM AS CON_PSTATS_NM,
                A.PJT_PERIOD AS PJT_PERIOD,
                A.FAVORITES AS FAVORITES,
                A.PJT_PLAN AS PJT_PLAN,
                A.PJT_RESULTS AS PJT_RESULTS,
                A.PJT_COMPLETED AS PJT_COMPLETED,
				A.PJT_COMPLETED_LV AS PJT_COMPLETED_LV,
                A.JOB_COUNT AS JOB_COUNT,
                A.DRAFT_COUNT AS DRAFT_COUNT,
                A.ETC_COUNT AS ETC_COUNT,
                A.RGST_DT AS RGST_DT
        FROM    (   SELECT  A.PJT_NO AS PJT_NO,
                            A.PJT_NM AS PJT_NM,
                            A.CNTRCT_NO AS CNTRCT_NO,
                            A.CNTRCT_NM AS CNTRCT_NM,
                            A.PJT_DIV as PJT_DIV,
                            A.PLC_LCT_ADRS AS PLC_LCT_ADRS,
                            A.CON_PSTATS_CD AS CON_PSTATS_CD,
                            A.CON_PSTATS_NM AS CON_PSTATS_NM,
                            A.PJT_BGN_DATE AS PJT_BGN_DATE,
                            A.PJT_END_DATE AS PJT_END_DATE,
                            A.PJT_PERIOD AS PJT_PERIOD,
                            (CASE   WHEN COALESCE(B.PJT_NO, '0') = '0' 
                                    THEN 'icon_btn'
                                    ELSE 'icon_btn favorites'
                            END) AS FAVORITES,
                            COALESCE(G.PLAN_PER, '0') AS PJT_PLAN,
                            COALESCE(G.ACTUAL_PER, '0') AS PJT_RESULTS,
                            COALESCE(G.PROCESS, '0') AS PJT_COMPLETED,
                            (CASE   WHEN COALESCE(G.PROCESS, '0') > 100 
                                    THEN 'status_tit lv lv3'
                                    WHEN COALESCE(G.PROCESS, '0') < 90 
                                    THEN 'status_tit lv lv1'
                                    ELSE 'status_tit lv lv2'
                            END) AS PJT_COMPLETED_LV,
                            COALESCE(E.JOB_COUNT, '0') AS JOB_COUNT,
                            COALESCE(C.DRAT_COUNT, '0') AS DRAFT_COUNT,
                            COALESCE(F.ETC_COUNT, '0') AS ETC_COUNT,
                            A.RGST_DT AS RGST_DT
                    FROM    (   SELECT  A.PJT_NO AS PJT_NO,
                                        A.PJT_NM AS PJT_NM,
                                        B.CNTRCT_NO AS CNTRCT_NO,
										CASE
											WHEN B.MAJOR_CNSTTY_CD IS NOT NULL THEN '[' ||( SELECT 	BB.CMN_CD_NM_KRN
																							FROM 	SM_COM_CODE BB
																							WHERE 	BB.CMN_GRP_CD = #{majorCnsttyCd}
																							AND 	BB.CMN_CD = B.MAJOR_CNSTTY_CD)|| '] ' || B.CNTRCT_NM
											ELSE B.CNTRCT_NM
										END AS CNTRCT_NM,
                                        A.PJT_DIV as PJT_DIV,
                                        (CASE   WHEN COALESCE(A.PLC_LCT_ADRS, '주소 미설정') = ''
                                                THEN '주소 미설정'
                                                ELSE COALESCE(A.PLC_LCT_ADRS, '주소 미설정')
                                        END) AS PLC_LCT_ADRS,
                                        A.CON_PSTATS AS CON_PSTATS_CD,
                                        (CASE   WHEN A.CON_PSTATS = '0604' 
                                                THEN '완료'
                                                ELSE '진행중 [' ||(     SELECT  AA.CMN_CD_NM_KRN
                                                                        FROM    SM_COM_CODE AA
                                                                        WHERE   AA.CMN_GRP_CD = #{conPstatsCd}
                                                                        AND     AA.CMN_CD = A.CON_PSTATS)|| ']'
                                        END) AS CON_PSTATS_NM,
                                        TO_DATE(A.PJT_BGN_DATE, 'YYYYMMDD') AS PJT_BGN_DATE,
                                        TO_DATE(A.PJT_END_DATE, 'YYYYMMDD') AS PJT_END_DATE,
                                        COALESCE(TO_DATE(A.PJT_BGN_DATE, 'YYYYMMDD')|| ' ~ ' || TO_DATE(A.PJT_END_DATE, 'YYYYMMDD'), '공사기간 미설정') AS PJT_PERIOD,
                                        A.DLT_YN AS DLT_YN,
                                        A.RGST_DT  AS RGST_DT
                                FROM    CN_PROJECT A,
                                        CN_CONTRACT B
                                WHERE A.PJT_NO  = B.PJT_NO) AS A
                    LEFT JOIN CN_PROJECT_FAVORITES B    ON  A.PJT_NO = B.PJT_NO 
                                                        AND A.CNTRCT_NO = B.CNTRCT_NO
                                                        AND B.LOGIN_ID = #{loginId}
                                                        AND B.PJT_TYPE = #{pjtType}
                    LEFT JOIN ( SELECT 	A.PJT_NO AS PJT_NO,
                                        A.CNTRCT_NO AS 
                                        CNTRCT_NO,
                                        COUNT(B.AP_USR_ID) AS DRAT_COUNT
                                FROM 	AP_DOC A,
                                        (       SELECT  A.AP_DOC_NO,
                                                        A.AP_DOC_ID,
                                                        (       SELECT  AA.AP_USR_ID
                                                                FROM    AP_LINE AA
                                                                WHERE   AA.AP_DOC_NO = A.AP_DOC_NO
                                                                        AND AA.AP_DOC_ID = A.AP_DOC_ID
                                                                        AND AA.AP_ORDER = MIN(A.AP_ORDER)
                                                        ) AS AP_USR_ID
                                                FROM    AP_LINE A
                                                WHERE   A.AP_DIV = 'A'
                                                AND     A.AP_STATS = 'I'
                                                GROUP BY A.AP_DOC_NO, A.AP_DOC_ID
                                        ) AS B
                                WHERE 	A.AP_DOC_NO = B.AP_DOC_NO
                                AND 	A.AP_DOC_ID = B.AP_DOC_ID
                                AND     A.AP_DOC_STATS IN ('I', 'W')
                                AND     A.AP_TYPE = '01'
                                AND 	A.DLT_YN = 'N'
                                AND 	B.AP_USR_ID = #{usrId}
                                GROUP BY A.PJT_NO, A.CNTRCT_NO) AS C    ON  A.PJT_NO = C.PJT_NO
                                                                        AND A.CNTRCT_NO = C.CNTRCT_NO
                    LEFT JOIN ( SELECT 	A.PJT_NO AS PJT_NO,
                                        A.CNTRCT_NO AS 
                                        CNTRCT_NO,
                                        COUNT(B.AP_USR_ID) AS JOB_COUNT
                                FROM 	AP_DOC A,
                                        (       SELECT  A.AP_DOC_NO,
                                                        A.AP_DOC_ID,
                                                        (       SELECT  AA.AP_USR_ID
                                                                FROM    AP_LINE AA
                                                                WHERE   AA.AP_DOC_NO = A.AP_DOC_NO
                                                                        AND AA.AP_DOC_ID = A.AP_DOC_ID
                                                                        AND AA.AP_ORDER = MIN(A.AP_ORDER)
                                                        ) AS AP_USR_ID
                                                FROM    AP_LINE A
                                                WHERE   A.AP_DIV = 'A'
                                                AND     A.AP_STATS = 'I'
                                                GROUP BY A.AP_DOC_NO, A.AP_DOC_ID
                                        ) AS B
                                WHERE 	A.AP_DOC_NO = B.AP_DOC_NO
                                AND 	A.AP_DOC_ID = B.AP_DOC_ID
                                AND     A.AP_DOC_STATS IN ('I', 'W')
                                AND     A.AP_TYPE = '02'
                                AND 	A.DLT_YN = 'N'
                                AND 	B.AP_USR_ID = #{usrId}
                                GROUP BY A.PJT_NO, A.CNTRCT_NO) AS E    ON  A.PJT_NO = E.PJT_NO
                                                                        AND A.CNTRCT_NO = E.CNTRCT_NO
                    LEFT JOIN ( SELECT 	A.PJT_NO AS PJT_NO,
                                        A.CNTRCT_NO AS 
                                        CNTRCT_NO,
                                        COUNT(B.AP_USR_ID) AS ETC_COUNT
                                FROM 	AP_DOC A,
                                        (       SELECT  A.AP_DOC_NO,
                                                        A.AP_DOC_ID,
                                                        (       SELECT  AA.AP_USR_ID
                                                                FROM    AP_LINE AA
                                                                WHERE   AA.AP_DOC_NO = A.AP_DOC_NO
                                                                        AND AA.AP_DOC_ID = A.AP_DOC_ID
                                                                        AND AA.AP_ORDER = MIN(A.AP_ORDER)
                                                        ) AS AP_USR_ID
                                                FROM    AP_LINE A
                                                WHERE   A.AP_DIV = 'A'
                                                AND     A.AP_STATS = 'I'
                                                GROUP BY A.AP_DOC_NO, A.AP_DOC_ID
                                        ) AS B
                                WHERE 	A.AP_DOC_NO = B.AP_DOC_NO
                                AND 	A.AP_DOC_ID = B.AP_DOC_ID
                                AND     A.AP_DOC_STATS IN ('I', 'W')
                                AND     A.AP_TYPE NOT IN ('01', '02')
                                AND 	A.DLT_YN = 'N'
                                AND 	B.AP_USR_ID = #{usrId}
                                GROUP BY A.PJT_NO, A.CNTRCT_NO) AS F    ON  A.PJT_NO = F.PJT_NO
                                                                        AND A.CNTRCT_NO = F.CNTRCT_NO
                    LEFT JOIN ( SELECT  G.PJT_NO,
                                        G.CNTRCT_NO,
                                        CASE    WHEN G.PLAN_PER > 1 
                                                    THEN CEILING(G.PLAN_PER)
                                                ELSE ROUND(G.PLAN_PER, 2)
                                        END AS PLAN_PER,
                                        CASE    WHEN G.ACTUAL_PER > 1 
                                                    THEN CEILING(G.ACTUAL_PER)
                                                ELSE ROUND(G.ACTUAL_PER, 2)
                                        END AS ACTUAL_PER,
                                        CASE    WHEN G.PROCESS > 1 
                                                    THEN CEILING(G.PROCESS)
                                                ELSE ROUND(G.PROCESS, 2)
                                        END AS PROCESS
                                FROM    (   SELECT  PROJECT.PJT_NO,
                                                    PROJECT.CNTRCT_NO,
                                                    (CASE
                                                        WHEN COALESCE ( SUM(TT.TOTAL_CST),0) = 0
                                                            THEN 0
                                                        ELSE COALESCE(NULLIF(SUM(PL.PLAN_CST) / SUM(TT.TOTAL_CST) * 100, 0), 0)
                                                    END) AS PLAN_PER,
                                                    (CASE
                                                        WHEN COALESCE ( SUM(TT.TOTAL_CST),0) = 0
                                                            THEN 0
                                                        ELSE COALESCE(NULLIF(SUM(AT.ACTUAL_CST) / SUM(TT.TOTAL_CST) * 100, 0), 0)
                                                    END) AS ACTUAL_PER,
                                                    (CASE
                                                        WHEN COALESCE ( SUM(PL.PLAN_CST) ,0) = 0
                                                            THEN 0
                                                        ELSE COALESCE(NULLIF(SUM(AT.ACTUAL_CST) / SUM(PL.PLAN_CST) * 100, 0), 0)
                                                    END) AS PROCESS
                                            FROM (  SELECT  PJT_NO,
                                                            CNTRCT_NO
                                                    FROM    CN_CONTRACT
                                                    WHERE   DLT_YN = 'N' ) AS PROJECT
                                            LEFT JOIN   (   SELECT  SUBSTRING(PAP.CNTRCT_CHG_ID, 1, 10) AS PJT_NO,
					                                                SUM(CST_CUM) AS PLAN_CST
                                                            FROM    PR_ACTIVITY_PLAN PAP
                                                                    INNER JOIN  (   SELECT  REVISION_ID, 
                                                                                            CNTRCT_CHG_ID 
                                                                                    FROM    PR_REVISION PR 
                                                                                    WHERE   PR.LAST_REVISION_YN='Y' 
                                                                                    AND     PR.DLT_YN ='N' 
                                                                                ) AS PR ON PAP.CNTRCT_CHG_ID = PR.CNTRCT_CHG_ID 
                                                                                        AND PAP.REVISION_ID  = PR.REVISION_ID
                                                            WHERE   PAP.PLAN_DT = TO_CHAR(NOW(), 'YYYY-MM-DD')
                                                            AND PAP.DLT_YN = 'N'
                                                            GROUP BY SUBSTRING(PAP.CNTRCT_CHG_ID, 1, 10)
                                                        ) AS PL ON PROJECT.PJT_NO = PL.PJT_NO
                                            LEFT JOIN   (	SELECT 	SUBSTRING(CNTRCT_CHG_ID, 1, 13) AS CNTRCT_NO, 
																	SUM_ACTUAL_CST(CAST(SUBSTRING(CNTRCT_CHG_ID, 1, 13) AS TEXT), 'C') AS ACTUAL_CST  
															FROM 	CW_DAILY_REPORT_QDB 
															GROUP BY SUBSTRING(CNTRCT_CHG_ID, 1, 13)  
                                                        ) AS AT ON PROJECT.CNTRCT_NO = AT.CNTRCT_NO
                                            LEFT JOIN   (   SELECT  SUBSTRING(CCC.CNTRCT_CHG_ID, 1, 13) AS CNTRCT_NO,
                                                                    SUM(CNTRCT_AMT) AS TOTAL_CST
                                                            FROM    CN_CONTRACT_CHANGE CCC
                                                            WHERE   CCC.LAST_CHG_YN = 'Y'
                                                            AND     CCC.DLT_YN = 'N'
                                                            GROUP BY SUBSTRING(CCC.CNTRCT_CHG_ID, 1, 13)
                                                        ) AS TT ON PROJECT.CNTRCT_NO = TT.CNTRCT_NO
                                            GROUP BY PROJECT.PJT_NO, PROJECT.CNTRCT_NO) AS G) AS G  ON  A.PJT_NO = G.PJT_NO
                                                                                                    AND A.CNTRCT_NO = G.CNTRCT_NO
                    INNER JOIN (    SELECT  DISTINCT A.PJT_NO, 
                                            A.CNTRCT_NO, 
                                            A.PJT_TYPE, 
                                            B.USR_ID 
                                    FROM    SM_DEPARTMENT A, 
                                            SM_ORGANIZATION B 
                                    WHERE   A.USE_YN = 'Y'
                                    AND     A.DLT_YN = 'N' 
                                    AND     B.DLT_YN = 'N' 
                                    AND     A.PJT_TYPE = #{pjtType}
                                    AND     A.DEPT_NO = B.DEPT_NO 
                                    AND     B.USR_ID = #{usrId}) AS D   ON  A.PJT_NO = D.PJT_NO
                                                                            AND A.CNTRCT_NO = D.CNTRCT_NO
                    WHERE 	A.CON_PSTATS_CD  IN ('0602', '0603', '0604')
                    AND 	A.DLT_YN = 'N') AS A
		]]>
        <where>
            <if test="favoritesSearch != null and favoritesSearch != ''">
                AND A.FAVORITES = #{favoritesSearch}
            </if>
            <if test='searchItem != null and searchItem != ""'>        
                <if test='searchItem.equals("pjtName")'>
                    AND A.CNTRCT_NM LIKE CONCAT('%', #{searchText}, '%')
                </if>            
                <if test='searchItem.equals("pjtAddress")'>
                    AND A.PLC_LCT_ADRS LIKE CONCAT('%', #{searchText}, '%')
                </if>
            </if>
        </where>    
        ORDER BY A.RGST_DT ASC
    </select>

	<!--리소스 ID 권한 유무 가져오는 쿼리-->
	<select id="userResourcesAuthorityCheck" parameterType="selectResourcesAuthorityInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.userResourcesAuthorityCheck][gwLee]  */
		SELECT 	A.RESC_ID AS RESC_ID, 
				(	SELECT	CASE 
								WHEN COUNT(AA.*)  <![CDATA[>]]>  0 
									THEN 'Y' 
								ELSE 'N' 
							END AS USE_YN
					FROM 	( 	SELECT 	C.RESC_ID
								FROM 	( 	SELECT 	A.AUTH_NO,
													A.RGHT_GRP_CD,
													A.RGHT_GRP_USR_TY,
													B.PJT_NO ,
													B.CNTRCT_NO,
													B.PJT_TYPE,
													C.DEPT_NO,
													C.CORP_NO,
													C.FLAG,
													C.USR_ID,
													C.LOGIN_ID
											FROM 	SM_AUTHORITY_GROUP_USERS A,
													SM_AUTHORITY_GROUP B,
													SM_ORGANIZATION C,
													SM_DEPARTMENT D
											WHERE 	A.RGHT_GRP_CD = B.RGHT_GRP_CD
											AND 	A.AUTH_NO = C.DEPT_NO
											AND 	C.DEPT_NO = D.DEPT_NO
											AND 	B.PJT_NO = #{pjtNo}
											AND 	B.CNTRCT_NO = #{cntrctNo}
											AND     B.PJT_TYPE = #{pjtType}
											AND     C.USR_ID = #{usrId}
											AND 	A.RGHT_GRP_USR_TY = 'D'
											AND 	B.USE_YN = 'Y'
											AND 	B.DLT_YN = 'N'
											AND 	C.DLT_YN = 'N'
											AND 	D.DLT_YN = 'N'
											AND 	D.USE_YN = 'Y'
											AND 	D.DEPT_YN = 'Y'
											UNION ALL
											SELECT	A.AUTH_NO,
													A.RGHT_GRP_CD,
													A.RGHT_GRP_USR_TY,
													B.PJT_NO ,
													B.CNTRCT_NO,
													B.PJT_TYPE,
													C.DEPT_NO,
													C.CORP_NO,
													C.FLAG,
													C.USR_ID,
													C.LOGIN_ID
											FROM 	SM_AUTHORITY_GROUP_USERS A,
													SM_AUTHORITY_GROUP B,
													SM_ORGANIZATION C
											WHERE 	A.RGHT_GRP_CD = B.RGHT_GRP_CD
											AND 	A.AUTH_NO = C.ORG_NO
											AND 	B.PJT_NO = #{pjtNo}
											AND 	B.CNTRCT_NO = #{cntrctNo}
											AND     B.PJT_TYPE = #{pjtType}
											AND     C.USR_ID = #{usrId}
											AND 	A.RGHT_GRP_USR_TY != 'D'
											AND 	B.USE_YN = 'Y'
											AND 	B.DLT_YN = 'N'
											AND 	C.DLT_YN = 'N'
										) AS A,
										SM_MENU_AUTHORITY_MAPPING B,
										SM_RESOURCES C
								WHERE 	A.RGHT_GRP_CD = B.RGHT_GRP_CD
								AND 	B.MENU_CD = C.MENU_CD
								AND 	B.RGHT_KIND = C.RGHT_KIND
								AND 	C.USE_YN = 'Y'
								AND 	C.DLT_YN = 'N'
							) AS AA
					WHERE  	AA.RESC_ID = A.RESC_ID 
				) AS USE_YN 
		FROM 	SM_RESOURCES A		
		<if test="rescIdList != null and rescIdList.size() > 0">
			WHERE 	A.RESC_ID IN
			<foreach item="rescId" collection="rescIdList" open="(" separator="," close=")">
				#{rescId}
			</foreach>
		</if>
    </select>

	<!-- 메뉴 권한 관리 적용 후 삭제 구 비튼 아이디로 권한 가져오는 쿼리-->
    <select id="userBtnAuthorityList" parameterType="selectBtnAuthorityInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.userBtnAuthorityList][gwLee]  */
        SELECT  B.PJT_NO AS PJT_NO, 
                B.CNTRCT_NO AS CNTRCT_NO,
                B.PJT_TYPE AS PJT_TYPE,
                A.MENU_RGHT_NO AS MENU_RGHT_NO,
                A.RGHT_KIND AS RGHT_KIND,
                B.RGHT_GRP_TY AS RGHT_GRP_TY,
                B.RGHT_GRP_CD AS RGHT_GRP_CD,
                B.PJT_TYPE AS PJT_TYPE,
                B.RGHT_GRP_NO AS RGHT_GRP_NO,
                B.RGHT_GRP_NM_KRN AS RGHT_GRP_NM_KRN,
                C.ORG_NO AS ORG_NO,
                C.DEPT_NO AS DEPT_NO,
                C.RGHT_GRP_ROLE AS RGHT_GRP_ROLE, 
                D.BTN_NM_ENG AS BTN_NM_ENG, 
                D.BTN_NM_KRN AS BTN_NM_KRN,
                TO_CHAR(A.CHG_DT,  'YYYY-MM-DD') AS CHG_DT
        FROM    SM_MENU_AUTHORITY_GROUP A,
                SM_AUTHORITY_GROUP B,
                (       SELECT  A.RGHT_GRP_NO,
                                A.RGHT_GRP_CD,
                                A.RGHT_GRP_USR_TY,
                                A.ORG_NO,
                                A.DEPT_NO,
                                A.LOGIN_ID,
                                A.PJT_NO,
                                A.CNTRCT_NO,
                                A.PJT_TYPE,
                                A.RGHT_GRP_TY,
                                A.RGHT_GRP_ROLE 
                        FROM (  SELECT  A.RGHT_GRP_NO,
                                        A.RGHT_GRP_CD,
                                        A.RGHT_GRP_USR_TY,
                                        B.ORG_NO,
                                        B.DEPT_NO,
                                        B.LOGIN_ID,
                                        C.PJT_NO,
                                        C.CNTRCT_NO,
                                        C.PJT_TYPE,
                                        C.RGHT_GRP_TY,
                                        C.RGHT_GRP_ROLE
                                FROM    SM_AUTHORITY_GROUP_USERS A,
                                        SM_ORGANIZATION B,
                                        SM_AUTHORITY_GROUP C,
                                        SM_DEPARTMENT D
                                WHERE   A.RGHT_GRP_USR_TY = 'D'
                                AND     B.DLT_YN = 'N'
                                AND     C.USE_YN = 'Y'
                                AND     C.DLT_YN = 'N'
                                AND     D.USE_YN = 'Y'
                                AND     D.DLT_YN = 'N'
                                AND     A.AUTH_NO = B.DEPT_NO
                                AND     B.DEPT_NO = D.DEPT_NO
                                AND     A.RGHT_GRP_CD = C.RGHT_GRP_CD
                                UNION ALL
                                SELECT  A.RGHT_GRP_NO,
                                        A.RGHT_GRP_CD,
                                        A.RGHT_GRP_USR_TY,
                                        B.ORG_NO,
                                        B.DEPT_NO,
                                        B.LOGIN_ID,
                                        C.PJT_NO,
                                        C.CNTRCT_NO,
                                        C.PJT_TYPE,
                                        C.RGHT_GRP_TY,
                                        C.RGHT_GRP_ROLE
                                FROM    SM_AUTHORITY_GROUP_USERS A,
                                        SM_ORGANIZATION B,
                                        SM_AUTHORITY_GROUP C
                                WHERE   A.RGHT_GRP_USR_TY != 'D'
                                AND     B.DLT_YN = 'N'
                                AND     C.USE_YN = 'Y'
                                AND     C.DLT_YN = 'N'
                                AND     A.AUTH_NO = B.ORG_NO
                                AND     A.RGHT_GRP_CD = C.RGHT_GRP_CD) AS A
                        WHERE   A.LOGIN_ID = #{loginId}
                        AND     A.PJT_TYPE = #{pjtType}
                        AND     A.PJT_NO = #{pjtNo}
                        AND     A.CNTRCT_NO = #{cntrctNo}) AS C,
                (SELECT A.BTN_ID, 
                        A.MENU_NO, 
                        A.MENU_CD, 
                        A.BTN_NM_ENG, 
                        A.BTN_NM_KRN, 
                        A.RGHT_KIND 
                FROM    SM_BUTTON_AUTHORITY A 
                WHERE   MENU_CD = #{menuCd}
                AND     BTN_ID = #{btnId}
                AND     DLT_YN = 'N') AS D
        WHERE   A.RGHT_GRP_CD = B.RGHT_GRP_CD
        AND     B.RGHT_GRP_NO = C.RGHT_GRP_NO
        AND     B.RGHT_GRP_CD = C.RGHT_GRP_CD
        AND     B.PJT_TYPE = C.PJT_TYPE
        AND     B.PJT_NO = C.PJT_NO
        AND     B.CNTRCT_NO = C.CNTRCT_NO
        AND     A.MENU_NO = D.MENU_NO
        AND     A.MENU_CD = D.MENU_CD
        AND     A.RGHT_KIND = D.RGHT_KIND
        AND     A.MENU_CD = #{menuCd}
        AND     A.DLT_YN = 'N'
        AND     B.DLT_YN = 'N'
    </select>

    <select id="pjtChangeMenuAuthorityCheck" parameterType="input" resultType="output">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.pjtChangeMenuAuthority][gwLee]  */
        SELECT  (   CASE    WHEN A.MENU_CD = 0
                                THEN 'N'
                            ELSE 'Y'
                    END) AS AUTHORITY_YN
        FROM    (   SELECT  COUNT(DISTINCT (A.MENU_CD)) AS MENU_CD
                    FROM    SM_MENU_AUTHORITY_MAPPING A,
                            (   SELECT  A.RGHT_GRP_NO,
                                        A.RGHT_GRP_CD,
                                        A.RGHT_GRP_USR_TY,
                                        B.ORG_NO,
                                        B.DEPT_NO,
                                        B.LOGIN_ID,
                                        C.PJT_NO,
                                        C.CNTRCT_NO,
                                        C.PJT_TYPE,
                                        C.RGHT_GRP_TY,
                                        C.RGHT_GRP_ROLE
                                FROM    SM_AUTHORITY_GROUP_USERS A,
                                        SM_ORGANIZATION B,
                                        SM_AUTHORITY_GROUP C,
                                        SM_DEPARTMENT D
                                WHERE   A.RGHT_GRP_USR_TY = 'D'
                                AND     B.DLT_YN = 'N'
                                AND     C.USE_YN = 'Y'
                                AND     C.DLT_YN = 'N'
                                AND     D.USE_YN = 'Y'
                                AND     D.DLT_YN = 'N'
                                AND     A.AUTH_NO = B.DEPT_NO
                                AND     B.DEPT_NO = D.DEPT_NO
                                AND     A.RGHT_GRP_CD = C.RGHT_GRP_CD
                                AND     C.PJT_NO = #{pjtNo}
                                AND     C.CNTRCT_NO = #{cntrctNo}
                                AND     C.PJT_TYPE = #{pjtType}
                                AND     B.USR_ID = #{usrId}
                                UNION
                                SELECT  A.RGHT_GRP_NO,
                                        A.RGHT_GRP_CD,
                                        A.RGHT_GRP_USR_TY,
                                        B.ORG_NO,
                                        B.DEPT_NO,
                                        B.LOGIN_ID,
                                        C.PJT_NO,
                                        C.CNTRCT_NO,
                                        C.PJT_TYPE,
                                        C.RGHT_GRP_TY,
                                        C.RGHT_GRP_ROLE
                                FROM    SM_AUTHORITY_GROUP_USERS A,
                                        SM_ORGANIZATION B,
                                        SM_AUTHORITY_GROUP C
                                WHERE   A.RGHT_GRP_USR_TY != 'D'
                                AND     B.DLT_YN = 'N'
                                AND     C.USE_YN = 'Y'
                                AND     C.DLT_YN = 'N'
                                AND     A.AUTH_NO = B.ORG_NO
                                AND     A.RGHT_GRP_CD = C.RGHT_GRP_CD
                                AND     C.PJT_NO = #{pjtNo}
                                AND     C.CNTRCT_NO = #{cntrctNo}
                                AND     C.PJT_TYPE = #{pjtType}
                                AND     B.USR_ID = #{usrId}) AS B
                    WHERE   A.RGHT_GRP_CD = B.RGHT_GRP_CD
					AND     A.RGHT_KIND =  'VIEW'
                    AND     A.MENU_CD =  #{menuCd}) AS A
    </select>

	<insert id="insertPjtFavorites" parameterType="input">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.insertPjtFavorites][gwLee]  */
		INSERT INTO CN_PROJECT_FAVORITES (	PJT_NO, 
											CNTRCT_NO, 
											LOGIN_ID, 
											PJT_TYPE, 
											RGSTR_ID, 
											RGST_DT)
		VALUES (	#{pjtNo}, 
					#{cntrctNo}, 
					#{loginId}, 
					#{pjtType}, 
					#{usrId}, 
					now())
	</insert>

	<insert id="deletePjtFavorites" parameterType="input">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.deletePjtFavorites][gwLee]  */
		DELETE 
		FROM 	CN_PROJECT_FAVORITES
		WHERE  	PJT_NO =  #{pjtNo}
		AND 	CNTRCT_NO = #{cntrctNo}
		AND 	LOGIN_ID = #{loginId}
		AND 	PJT_TYPE = #{pjtType}
	</insert>

    <select id="getRegionList" parameterType="String" resultType="regionOutput">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.getRegionList][jhkim]  */
        <![CDATA[
        SELECT 
                A.CMN_CD_NM_KRN,
                A.CMN_CD_NM_ENG,
                A.CMN_CD,
                (       SELECT
                                COUNT(*)
                        FROM
                                CN_PROJECT B
                        WHERE
                                B.RGN_CD = A.CMN_CD
                                and B.DLT_YN = 'N'
                                AND B.USE_YN = 'Y'
                                AND B.CON_PSTATS <> '0601'  ) AS COUNT
        FROM 
                SM_COM_CODE A
        WHERE 
                CMN_GRP_CD = #{cmnRgCd}
        ORDER BY  (
                CASE 
                        WHEN CMN_CD_NM_KRN = '충남' THEN 1
                        WHEN CMN_CD_NM_KRN = '인천' THEN 2
                        WHEN CMN_CD_NM_KRN = '세종' THEN 3
                        WHEN CMN_CD_NM_KRN = '대전' THEN 4
                        WHEN CMN_CD_NM_KRN = '전북' THEN 5
                        WHEN CMN_CD_NM_KRN = '광주' THEN 6
                        WHEN CMN_CD_NM_KRN = '제주' THEN 7
                        WHEN CMN_CD_NM_KRN = '서울' THEN 8
                        WHEN CMN_CD_NM_KRN = '경기' THEN 9
                        WHEN CMN_CD_NM_KRN = '충북' THEN 10
                        WHEN CMN_CD_NM_KRN = '대구' THEN 11
                        WHEN CMN_CD_NM_KRN = '경남' THEN 12
                        WHEN CMN_CD_NM_KRN = '전남' THEN 13
                        WHEN CMN_CD_NM_KRN = '강원' THEN 14
                        WHEN CMN_CD_NM_KRN = '경북' THEN 15
                        WHEN CMN_CD_NM_KRN = '울산' THEN 16
                        WHEN CMN_CD_NM_KRN = '부산' THEN 17
                END)
        ]]>
    </select>

    <select id="getRegionProjectList" parameterType="regionProjectInput" resultType="regionProjectOutput">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.getRegionProjectList][jhkim]  */
        <![CDATA[
        SELECT
                (SELECT B.CMN_CD_NM_KRN FROM SM_COM_CODE B WHERE B.CMN_GRP_CD = #{cmnCd} AND A.RGN_CD = B.CMN_CD),
                (SELECT COUNT(*) FROM CN_PROJECT B WHERE B.DLT_YN = 'N' AND B.USE_YN = 'Y' AND B.CON_PSTATS <> '0601') as TOTAL_PROJECT_COUNT,
                A.PJT_NM,
                (CASE
                    WHEN COALESCE ( TO_CHAR(A.CNSTWK_CST / 100000000, 'FM999,999,999,999,990.00') || '억','') = ''
                        THEN '미등록'
                    ELSE TO_CHAR(A.CNSTWK_CST / 100000000, 'FM999,999,999,999,990.00') || '억'
                END) AS CNSTWK_CST,
                (CASE
                    WHEN COALESCE ( A.INSPTR_NM,'') = ''
                        THEN '미등록'
                    ELSE A.INSPTR_NM
                END) AS INSPTR_NM,
                (CASE
                    WHEN COALESCE ( A.DMINSTT_NM,'') = ''
                        THEN '미등록'
                    ELSE A.DMINSTT_NM
                END) AS DMINSTT_NM,
                (CASE
                    WHEN COALESCE ( A.CNTRCT_CORP_NM,'') = ''
                        THEN '미등록'
                    ELSE A.CNTRCT_CORP_NM
                END) AS CNTRCT_CORP_NM,
                (CASE
                    WHEN COALESCE ( A.CM_NM,'') = ''
                        THEN '미등록'
                    ELSE A.CM_NM
                END) AS CM_NM,
                (CASE
                    WHEN COALESCE ( A.SPVS_CORP_NM,'') = ''
                        THEN '미등록'
                    ELSE A.SPVS_CORP_NM
                END) AS SPVS_CORP_NM,
                (CASE
                    WHEN COALESCE ( TO_CHAR(A.NTP_DATE::DATE, 'YYYY-MM-DD'),'') = ''
                        THEN '미등록'
                    ELSE TO_CHAR(A.NTP_DATE::DATE, 'YYYY-MM-DD')
                END) AS NTP_DATE,
                (CASE
                    WHEN COALESCE ( TO_CHAR(A.PJT_END_DATE::DATE, 'YYYY-MM-DD'),'') = ''
                        THEN '미등록'
                    ELSE TO_CHAR(A.PJT_END_DATE::DATE, 'YYYY-MM-DD')
                END) AS PJT_END_DATE
        FROM
                CN_PROJECT A
        WHERE
                A.DLT_YN = 'N'
                AND A.USE_YN = 'Y'
                AND A.CON_PSTATS <> '0601'
        ]]>
        <if test="rgnCd != '' and rgnCd != null and rgnCd != 'null' ">
                AND A.RGN_CD = #{rgnCd}
        </if>
    </select>

    <select id="getRankProjectList" parameterType="rankProjectInput" resultType="rankProjectOutput">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.getRankProjectList][jhkim]  */
        <![CDATA[
        SELECT
                A.PJT_NM,
                (CASE
                    WHEN COALESCE ( A.DMINSTT_NM,'') = ''
                        THEN '미등록'
                    ELSE A.DMINSTT_NM
                END) AS DMINSTT_NM,
                (CASE
                    WHEN COALESCE ( A.CNTRCT_CORP_NM,'') = ''
                        THEN '미등록'
                    ELSE A.CNTRCT_CORP_NM
                END) AS CNTRCT_CORP_NM,
                (CASE
                    WHEN COALESCE ( A.CM_NM,'') = ''
                        THEN '미등록'
                    ELSE A.CM_NM
                END) AS CM_NM,
                (CASE
                    WHEN COALESCE ( A.SPVS_CORP_NM,'') = ''
                        THEN '미등록'
                    ELSE A.SPVS_CORP_NM
                END) AS SPVS_CORP_NM,   
                (CASE
                        WHEN COALESCE (A.PJT_BGN_DATE,'') <> ''
                        AND COALESCE (A.PJT_END_DATE,'') <> ''
                        THEN CONCAT (TO_CHAR(A.PJT_BGN_DATE::TIMESTAMP ,'YYYY-MM-DD'),'~',TO_CHAR(A.PJT_END_DATE::TIMESTAMP ,'YYYY-MM-DD'))
                        ELSE '미등록'
                END) AS PERIOD_DATE,
                (CASE
                    WHEN COALESCE ( A.INSPTR_NM,'') = ''
                        THEN '미등록'
                    ELSE A.INSPTR_NM
                END) AS INSPTR_NM,
                (CASE
                        WHEN COALESCE (A.CNSTWK_CST,0) = 0
                        THEN 0
                        ELSE A.CNSTWK_CST
                END) AS CNSTWK_CST,
                 (CASE
                        WHEN COALESCE (A.CNSTWK_DAYNUM,0) = 0
                        THEN 0
                        ELSE A.CNSTWK_DAYNUM
                END) AS CNSTWK_DAYNUM,
                (CASE
                        WHEN COALESCE (A.NTP_DATE::INT,0) = 0
                        THEN 0
                        ELSE A.NTP_DATE::INT
                END) AS NTP_DATE
        FROM
                CN_PROJECT A
        WHERE
                A.DLT_YN = 'N'
                AND A.USE_YN = 'Y'
                AND A.CON_PSTATS <> '0601'
        ]]>
        <if test="rankOrder != null">
                <choose>
                        <when test="rankOrder == ''">
                            <!-- 공정률 임시 -->
                        </when>
                        <when test="rankOrder.contains('ntpDate')">
                                ORDER BY NTP_DATE
                        </when>
                        <when test="rankOrder.contains('cnstwkCst')">
                                ORDER BY CNSTWK_CST
                        </when>
                        <when test="rankOrder.contains('cnstwkDaynum')">
                                ORDER BY CNSTWK_DAYNUM
                        </when>
                </choose>
                <if test="rankOrder.contains('desc')">
                        DESC
                </if>
        </if>
        LIMIT 10;
    </select>

    <select id="getBigData" parameterType="String" resultType="bigDataOutput">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.getBigData][jhkim]  */
   
       SELECT
        (
                SELECT
                        TRUNC(SUM(ACTUAL_QTY))
                FROM
                        CN_PROJECT CP
                INNER JOIN CN_CONTRACT CC ON
                        CP.PJT_NO = CC.PJT_NO
                        AND CC.DLT_YN = 'N'
                INNER JOIN CW_DAILY_REPORT_RESOURCE CDRR ON
                        CC.CNTRCT_NO = CDRR.CNTRCT_NO
                        AND CDRR.DLT_YN = 'N'
                        AND CDRR.RSCE_TP_CD = 'L'
                        AND TO_CHAR(CDRR.RGST_DT, 'YYYY-MM-DD') = TO_CHAR(CURRENT_DATE,'YYYY-MM-DD')
                WHERE
                        CP.DLT_YN = 'N'
                        AND CP.USE_YN = 'Y'
                        <![CDATA[
                        AND CP.CON_PSTATS <> '0601'
                         ]]>
                        <if test="rgnCd != '' and rgnCd != null and rgnCd != 'null' ">
                        AND CP.RGN_CD = #{rgnCd}
                        </if>
        ) AS LABOR_COUNT,
        (
                SELECT
                        TRUNC(SUM(ACTUAL_QTY))
                FROM
                        CN_PROJECT CP
                INNER JOIN CN_CONTRACT CC ON
                        CP.PJT_NO = CC.PJT_NO
                        AND CC.DLT_YN = 'N'
                        INNER JOIN CW_DAILY_REPORT_RESOURCE CDRR ON
                        CC.CNTRCT_NO = CDRR.CNTRCT_NO
                        AND CDRR.DLT_YN = 'N'
                        AND CDRR.RSCE_TP_CD = 'M'
                        AND TO_CHAR(CDRR.RGST_DT, 'YYYY-MM-DD') = TO_CHAR(CURRENT_DATE,'YYYY-MM-DD')
                WHERE
                        CP.DLT_YN = 'N'
                        AND CP.USE_YN = 'Y'
                        <![CDATA[
                        AND CP.CON_PSTATS <> '0601'
                         ]]>
                        <if test="rgnCd != '' and rgnCd != null and rgnCd != 'null' ">
                        AND CP.RGN_CD = #{rgnCd}
                        </if>
        ) AS MATERIAL_COUNT,
	(       SELECT
                        COUNT(DISTINCT CP.DMINSTT_CD)
                FROM
                        CN_PROJECT CP
                WHERE
                        CP.DLT_YN = 'N'
                        AND CP.USE_YN = 'Y'
                        <![CDATA[
                        AND CP.CON_PSTATS <> '0601'
                        AND COALESCE (CP.DMINSTT_CD,'') <> ''
                         ]]>
                        <if test="rgnCd != '' and rgnCd != null and rgnCd != 'null' ">
                        AND CP.RGN_CD = #{rgnCd}
                        </if>
        ) AS DMINSTT_COUNT,
	(       SELECT
                        COUNT (DISTINCT CCC.CORP_NO)
                FROM
                        CN_PROJECT CP
                        INNER JOIN CN_CONTRACT CC ON
                                CP.PJT_NO = CC.PJT_NO
                                AND CC.DLT_YN = 'N'
                        INNER JOIN CN_CONTRACT_COMPANY CCC ON
                                CC.CNTRCT_NO = CCC.CNTRCT_NO
                                AND CCC.DLT_YN = 'N'
                                <![CDATA[
                                AND COALESCE (CCC.CORP_NO,'') <> ''
                                 ]]>
                WHERE
                        CP.DLT_YN = 'N'
                        AND CP.USE_YN = 'Y'
                        <![CDATA[
                        AND CP.CON_PSTATS <> '0601'
                        ]]>
                         <if test="rgnCd != '' and rgnCd != null and rgnCd != 'null' ">
                        AND CP.RGN_CD = #{rgnCd}
                        </if>
        ) AS CORP_COUNT,
	(       SELECT
                        COUNT (DISTINCT CS.SCONTRCT_CORP_NO)
                FROM
                        CN_PROJECT CP
                        INNER JOIN CN_CONTRACT CC ON
                                CP.PJT_NO = CC.PJT_NO
                                AND CC.DLT_YN = 'N'
                        INNER JOIN CN_SUBCONTRACT CS ON
                                CS.CNTRCT_NO = CS.CNTRCT_NO
                                AND CS.DLT_YN = 'N'
                                <![CDATA[
                                AND COALESCE (CS.SCONTRCT_CORP_NO,'') <> ''
                                ]]>
                WHERE
                        CP.DLT_YN = 'N'
                        AND CP.USE_YN = 'Y'
                         <![CDATA[
                        AND CP.CON_PSTATS <> '0601'
                        ]]>
                        <if test="rgnCd != '' and rgnCd != null and rgnCd != 'null' ">
                        AND CP.RGN_CD = #{rgnCd}
                        </if>
                        ) AS SCONTRCT_CORP_COUNT
        <!-- SELECT
	(
	SELECT
		COUNT(DISTINCT CP.DMINSTT_CD)
	FROM
		CN_PROJECT CP
	WHERE
		 CP.DLT_YN = 'N'
		AND CP.USE_YN = 'Y'
		AND CP.CON_PSTATS <> '0601'
		AND COALESCE (CP.DMINSTT_CD,'') <> ''
		AND	CP.RGN_CD = '07') AS DMINSTT_COUNT,
	(
	SELECT
		COUNT (DISTINCT CCC.CORP_NO)
	FROM
		CN_PROJECT CP
	INNER JOIN CN_CONTRACT CC ON
		CP.PJT_NO = CC.PJT_NO
		AND CC.DLT_YN = 'N'
	INNER JOIN CN_CONTRACT_COMPANY CCC ON
		CC.CNTRCT_NO = CCC.CNTRCT_NO
		AND CCC.DLT_YN = 'N'
		AND COALESCE (CCC.CORP_NO,'') <> ''
	WHERE
		CP.DLT_YN = 'N'
		AND CP.USE_YN = 'Y'
		AND CP.CON_PSTATS <> '0601'
		AND	CP.RGN_CD = '07') AS CORP_COUNT,
	(
	SELECT
		COUNT (DISTINCT CS.SCONTRCT_CORP_NO)
	FROM
		CN_PROJECT CP
	INNER JOIN CN_CONTRACT CC ON
		CP.PJT_NO = CC.PJT_NO
		AND CC.DLT_YN = 'N'
	INNER JOIN CN_SUBCONTRACT CS ON
		CS.CNTRCT_NO = CC.CNTRCT_NO
		AND CS.DLT_YN = 'N'
		AND COALESCE (CS.SCONTRCT_CORP_NO,'') <> ''
	WHERE
		CP.DLT_YN = 'N'
		AND CP.USE_YN = 'Y'
		AND CP.CON_PSTATS <> '0601'
		AND	CP.RGN_CD = '07' ) AS SCONTRCT_CORP_COUNT -->
    </select>

    <select id="getBigDataPhotoList" parameterType="String" resultType="bigDataPhotoOutput">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.getBigDataPhotoList][jhkim]  */
        <![CDATA[
        SELECT
                CDRP.TITL_NM,
                CDRP.DSCRPT, 
                CA.FILE_NM,
                CA.FILE_DISK_PATH,
                CA.FILE_DISK_NM 
        FROM
                CN_PROJECT CP
        INNER JOIN CN_CONTRACT CC ON
                CP.PJT_NO = CC.PJT_NO
                AND CC.DLT_YN = 'N'
        INNER JOIN CW_DAILY_REPORT_PHOTO CDRP ON
                CC.CNTRCT_NO = CDRP.CNTRCT_NO
                AND CDRP.DLT_YN = 'N'
        LEFT JOIN CW_ATTACHMENTS CA ON
                CDRP.ATCH_FILE_NO = CA.FILE_NO 
                AND CA.DLT_YN = 'N'
        WHERE
                CP.DLT_YN = 'N'
                AND CP.USE_YN = 'Y'
                AND CP.CON_PSTATS <> '0601'
        ]]>
        <if test="rgnCd != '' and rgnCd != null and rgnCd != 'null' ">
                AND CP.RGN_CD = #{rgnCd}
        </if>
        ORDER BY CA.CHG_DT
        LIMIT 10
    </select>

    <select id="selectPopupMsgList" parameterType="input" resultType="map">
            /* [kr.co.ideait.biz.service.portal.sqlx.selectPopupMsgList][gwlee]  */
            SELECT 	DISTINCT        A.POP_MSG_CD,
    				A.POP_DIV,
    				A.TO_DEPT,
    				A.POP_TITLE,
    				A.POP_CONTENT,
    				A.LINK_NM,
    				A.LINK_URL,
    				A.POP_START_DT,
    				A.POP_END_DT,
    				A.SHARE_YN
    		FROM 	( 	SELECT 	A.POP_MSG_SEQ,
                                                            A.POP_MSG_CD,
    							A.PJT_NO,
    							A.CNTRCT_NO,
    							A.POP_DIV,
    							A.TO_DEPT,
    							A.POP_TITLE,
    							A.POP_CONTENT,
    							A.LINK_NM,
    							A.LINK_URL,
    							A.POP_START_DT,
    							A.POP_END_DT,
    							A.SHARE_YN
    					FROM 	SM_POPUP_MSG A
    					WHERE 	A.POP_DIV = '1'
    					AND 	A.USE_YN = 'Y'
    					AND 	A.DLT_YN = 'N'
    					AND 	TO_CHAR(NOW(), 'YYYY-MM-DD') BETWEEN TO_CHAR(A.POP_START_DT, 'YYYY-MM-DD') AND TO_CHAR(A.POP_END_DT, 'YYYY-MM-DD')
    					UNION ALL
    					SELECT 	D.POP_MSG_SEQ,
                                                            D.POP_MSG_CD,
    							D.PJT_NO,
    							D.CNTRCT_NO,
    							D.POP_DIV,
    							D.TO_DEPT,
    							D.POP_TITLE,
    							D.POP_CONTENT,
    							D.LINK_NM,
    							D.LINK_URL,
    							D.POP_START_DT,
    							D.POP_END_DT,
    							D.SHARE_YN
    					FROM 	SM_USER_INFO A,
    							SM_ORGANIZATION B,
    							SM_DEPARTMENT C,
    							SM_POPUP_MSG D
    					WHERE 	A.USR_ID = B.USR_ID
    					AND 	B.DEPT_NO = C.DEPT_NO
    					AND 	C.PJT_NO = ANY(STRING_TO_ARRAY(D.PJT_NO, ','))
    					AND 	A.USR_ID = #{usrId}
    					AND 	( D.PJT_TYPE = #{pjtType} OR ( D.PJT_TYPE != #{pjtType} AND D.SHARE_YN = 'Y') )
    					AND 	A.USE_YN = 'Y'
    					AND 	A.DLT_YN = 'N'
    					AND 	(B.FLAG = 'I' OR B.FLAG = 'T')
    					AND 	B.DLT_YN = 'N'
    					AND 	C.USE_YN = 'Y'
    					AND 	C.DLT_YN = 'N'
    					AND 	D.POP_DIV = '2'
    					AND 	D.USE_YN = 'Y'
    					AND 	D.DLT_YN = 'N'
    					AND 	TO_CHAR(NOW(), 'YYYY-MM-DD') BETWEEN TO_CHAR(D.POP_START_DT, 'YYYY-MM-DD') AND TO_CHAR(D.POP_END_DT, 'YYYY-MM-DD')
    					UNION ALL
    					SELECT 	D.POP_MSG_SEQ,
                                                            D.POP_MSG_CD,
    							D.PJT_NO,
    							D.CNTRCT_NO,
    							D.POP_DIV,
    							D.TO_DEPT,
    							D.POP_TITLE,
    							D.POP_CONTENT,
    							D.LINK_NM,
    							D.LINK_URL,
    							D.POP_START_DT,
    							D.POP_END_DT,
    							D.SHARE_YN
    					FROM 	SM_USER_INFO A,
    							SM_ORGANIZATION B,
    							SM_DEPARTMENT C,
    							SM_POPUP_MSG D
    					WHERE 	A.USR_ID = B.USR_ID
    					AND 	B.DEPT_NO = C.DEPT_NO
    					AND 	C.PJT_NO = ANY(STRING_TO_ARRAY(D.PJT_NO, ','))
    					AND 	C.CNTRCT_NO = ANY(STRING_TO_ARRAY(D.CNTRCT_NO, ','))
    					AND 	A.USR_ID = #{usrId}
    					AND 	( D.PJT_TYPE = #{pjtType} OR ( D.PJT_TYPE != #{pjtType} AND D.SHARE_YN = 'Y') )
    					AND 	A.USE_YN = 'Y'
    					AND 	A.DLT_YN = 'N'
    					AND 	(B.FLAG = 'I' OR B.FLAG = 'T')
    					AND 	B.DLT_YN = 'N'
    					AND 	C.USE_YN = 'Y'
    					AND 	C.DLT_YN = 'N'
    					AND 	D.POP_DIV = '3'
    					AND 	D.USE_YN = 'Y'
    					AND 	D.DLT_YN = 'N'
    					AND TO_CHAR(NOW(), 'YYYY-MM-DD') BETWEEN TO_CHAR(D.POP_START_DT, 'YYYY-MM-DD') AND TO_CHAR(D.POP_END_DT, 'YYYY-MM-DD')
    					UNION ALL
    					SELECT 	D.POP_MSG_SEQ,
                                                            D.POP_MSG_CD,
    							D.PJT_NO,
    							D.CNTRCT_NO,
    							D.POP_DIV,
    							D.TO_DEPT,
    							D.POP_TITLE,
    							D.POP_CONTENT,
    							D.LINK_NM,
    							D.LINK_URL,
    							D.POP_START_DT,
    							D.POP_END_DT,
    							D.SHARE_YN
    					FROM 	SM_USER_INFO A,
    							SM_ORGANIZATION B,
    							SM_DEPARTMENT C,
    							SM_POPUP_MSG D
    					WHERE 	A.USR_ID = B.USR_ID
    					AND 	B.DEPT_NO = C.DEPT_NO
    					AND 	C.PJT_NO = ANY(STRING_TO_ARRAY(D.PJT_NO, ','))
    					AND 	C.CNTRCT_NO = ANY(STRING_TO_ARRAY(D.CNTRCT_NO, ','))
    					AND 	A.USR_ID = #{usrId}
    					AND 	( D.PJT_TYPE = #{pjtType} OR ( D.PJT_TYPE != #{pjtType} AND D.SHARE_YN = 'Y') )
    					AND 	A.USE_YN = 'Y'
    					AND 	A.DLT_YN = 'N'
    					AND 	(B.FLAG = 'I' OR B.FLAG = 'T')
    					AND 	B.DLT_YN = 'N'
    					AND 	C.USE_YN = 'Y'
    					AND 	C.DLT_YN = 'N'
    					AND 	D.POP_DIV = '4'
    					AND 	D.USE_YN = 'Y'
    					AND 	D.DLT_YN = 'N'
    					AND 	CAST(C.DEPT_NO AS TEXT) = ANY(STRING_TO_ARRAY(D.TO_DEPT, ','))
    					AND TO_CHAR(NOW(), 'YYYY-MM-DD') BETWEEN TO_CHAR(D.POP_START_DT, 'YYYY-MM-DD') AND TO_CHAR(D.POP_END_DT, 'YYYY-MM-DD')
    				) AS A
    </select>
    
	<select id="selectPjtNmCntrctNm" parameterType="input" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectPjtNmCntrctNm][gwlee]  */
		<choose>
			<when test="sarchType == 'GAIA'">
				SELECT 	A.PJT_NO AS PJT_NO, 
						A.PJT_NM AS PJT_NM, 
						A.PJT_NO AS CNTRCT_NO, 
						A.PJT_NM AS CNTRCT_NM,
				        A.PJT_DIV AS PJT_DIV
				FROM 	CN_PROJECT A 
				WHERE 	A.PJT_NO = #{pjt_no}
			</when>
			<otherwise>
				SELECT 	A.PJT_NO AS PJT_NO, 
						A.PJT_NM AS PJT_NM, 
						B.CNTRCT_NO AS CNTRCT_NO, 
						B.CNTRCT_NM AS CNTRCT_NM,
                        A.PJT_DIV AS PJT_DIV
				FROM 	CN_PROJECT A, 
						CN_CONTRACT B 
				WHERE 	A.PJT_NO = B.PJT_NO
				AND 	A.PJT_NO = #{pjt_no}
				AND 	B.CNTRCT_NO = #{cntrct_no}
			</otherwise>
		</choose>
    </select>
	
	<!--
	<select id="selectApiYn" parameterType="String" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectApiYn][gwlee] */
		SELECT 	COALESCE ( 	(	SELECT 	COALESCE(NULLIF(MENU_API, ''), 'N') AS MENU_API 
								FROM 	SM_MENU 
								WHERE 	NULLIF(TRIM(MENU_URL),'') IS NOT NULL 
								AND 	MENU_USE_YN = 'Y' 
								AND 	DLT_YN = 'N' 
								AND 	REPLACE(#{url}, '/api/' , '/') LIKE MENU_URL||'%'
							), 'N')
    </select>
	-->
	
	<!--API 사용여부 가져오는 쿼리-->
	<select id="selectApiYn" parameterType="String" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectApiYn][gwlee] */   
		SELECT 	COALESCE(NULLIF(B.MENU_API, ''), 'N') AS MENU_API
		FROM 	SM_RESOURCES A, 
				SM_MENU B 
		WHERE 	A.MENU_CD = B.MENU_CD 
		AND 	#{url} LIKE REPLACE(A.RESC_URL, '{}', '%')
		AND 	(LENGTH(A.RESC_URL) - LENGTH(REPLACE(A.RESC_URL, '/' , ''))) = (LENGTH(#{url}) - LENGTH(REPLACE(#{url}, '/' , '')))
		ORDER BY (LENGTH(A.RESC_URL) - LENGTH(REPLACE(A.RESC_URL, '{}' , '')))
		LIMIT 1
    </select>

	<!-- 퀵메뉴 결재 카운트 조회 -->
	<select id="selectQuickMenuApprovalCount" parameterType="input" resultType="map"> 
		/*[kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectQuickMenuApprovalCount][jhkim] */
		SELECT  COUNT 	(
							CASE 
								WHEN AD.AP_TYPE = '01' THEN B.AP_USR_ID 
							END
						) AS DRAT_COUNT,
				COUNT 	(
							CASE 
								WHEN AD.AP_TYPE = '02' THEN B.AP_USR_ID 
							END
						) AS WORK_COUNT,
				COUNT 	(
							CASE 
								WHEN AD.AP_TYPE NOT IN ('01', '02') THEN B.AP_USR_ID 
							END
						) AS ETC_COUNT
		FROM 	AP_DOC AD
		LEFT JOIN 	( 	SELECT 	AL.AP_DOC_NO, 
								AL.AP_DOC_ID, 
								(
									SELECT 	AA.AP_USR_ID 
									FROM  	AP_LINE AA 
									WHERE  	AA.AP_DOC_NO = AL.AP_DOC_NO 
									AND 	AA.AP_DOC_ID = AL.AP_DOC_ID 
									AND 	AA.AP_ORDER = MIN(AL.AP_ORDER)
								) AS AP_USR_ID
						FROM 	AP_LINE AL
						WHERE  	AL.AP_DIV = 'A'
						AND 	AL.AP_STATS = 'I'
						GROUP BY AL.AP_DOC_NO, AL.AP_DOC_ID
					) AS B  ON  	AD.AP_DOC_NO = B.AP_DOC_NO 
							AND 	AD.AP_DOC_ID = B.AP_DOC_ID
		WHERE  	AD.AP_DOC_STATS IN ('I', 'W')
		AND 	AD.DLT_YN = 'N'
		AND 	B.AP_USR_ID = #{usrId}
		AND 	AD.PJT_NO = #{pjtNo}
		<if test="pjtType == 'CAIROS' and userType != 'ADMIN'">
			AND AD.CNTRCT_NO = #{cntrctNo}
        </if>
	</select>

	<!--감리 여부 확인-->
	<select id="selectSupervisionCheck" parameterType="input" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectSupervisionCheck][gwlee] */   
		SELECT 	CASE 
					WHEN 	COUNT(*) <![CDATA[>]]> 0 
						THEN 'Y' 
					ELSE 	'N' 
				END AS CHECKYN
		FROM 	SM_DEPARTMENT A,
				SM_ORGANIZATION B,
				SM_USER_INFO C
		WHERE 	A.DEPT_UUID = B.DEPT_UUID
		AND 	B.USR_ID = C.USR_ID
		AND 	A.DEPT_ID = 'C'||#{cntrctNo}||'.m3'
		AND 	A.USE_YN = 'Y'
		AND 	A.DLT_YN = 'N'
		AND 	B.DLT_YN = 'N'
		AND 	C.USE_YN = 'Y'
		AND 	C.DLT_YN = 'N'
		AND 	A.PJT_NO = #{pjtNo}
		AND 	A.CNTRCT_NO = #{cntrctNo}
		AND 	A.PJT_TYPE = #{pjtType}
		AND 	C.USR_ID = #{usrId}
    </select>

	<!--감리한테 온 업무 요청건수 조회-->
	<select id="selectRequestAppCnt" parameterType="input" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.portal.portal.selectRequestAppCnt][gwlee] */
		SELECT 	A.CMN_CD_NM_KRN AS APP_NM,
				REPLACE(REPLACE(REPLACE(A.ATTRBT_CD1, 'pjtNo={}', 'pjtNo='||#{pjtNo}),'cntrctNo={}', 'cntrctNo='||#{cntrctNo}), 'urlSearchValue={}', 'urlSearchValue='||(SELECT USR_NM FROM SM_USER_INFO WHERE USR_ID = #{usrId})) AS URI,
				COALESCE(B.CNT, 0) AS CNT
		FROM 	SM_COM_CODE A
		LEFT JOIN 	(   SELECT 	REQ_APP_DIV,
                                    COUNT(*) AS CNT
                        FROM    CW_REQUEST_ITEM CRI
                        LEFT JOIN
                                CW_QUALITY_INSPECTION CQI
                        ON      CRI.REQ_INS_ID = CQI.QLTY_ISP_ID
                                AND     CQI.CQC_ID IS NOT NULL
                                AND     CQI.RSLT_CD IS NULL
                        LEFT JOIN
                                CW_SAFETY_INSPECTION CSI
                        ON      CRI.REQ_INS_ID = CSI.INSPECTION_NO
                                AND     CSI.ISP_ID IS NOT NULL
                                AND     CSI.RSLT_YN = 'N'
                        LEFT JOIN
                                CW_MAINMTRL_REQFRM CMR
                        ON      CRI.REQ_INS_ID = CMR.REQFRM_NO
                                AND     CMR.CM_ID IS NOT NULL
                                AND     CMR.RSLT_CD IS NULL
                        WHERE   CRI.END_YN = 'N'
                                AND     CRI.DLT_YN = 'N'
                                AND     CRI.TO_USR_ID = #{usrId}
                                AND     CRI.PJT_NO = #{pjtNo}
                                AND     CRI.CNTRCT_NO = #{cntrctNo}
                                AND     (
                                          (CRI.REQ_APP_DIV = 'QUA' AND CQI.QLTY_ISP_ID IS NOT NULL)
                                          OR    (CRI.REQ_APP_DIV = 'MMR' AND CMR.REQFRM_NO IS NOT NULL)
                                          OR    (CRI.REQ_APP_DIV = 'SAF' AND CSI.INSPECTION_NO IS NOT NULL)
                                        )
                          GROUP BY cri.REQ_APP_DIV
					) AS B ON A.CMN_CD = B.REQ_APP_DIV
		WHERE 	A.CMN_GRP_CD = #{cmnGrpCd}
		AND 	A.USE_YN = 'Y'
		AND 	A.DLT_YN = 'N';
    </select>
</mapper>