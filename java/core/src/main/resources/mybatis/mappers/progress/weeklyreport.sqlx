<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport">
	<delete id="deleteWeeklyreportToApi">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.deleteWeeklyreportToApi][dhjung]  */
		DELETE
		FROM pr_weekly_report
		WHERE cntrct_chg_id = #{cntrctChgId}
		AND weekly_report_id = #{weeklyReportId}
	</delete>

	<delete id="deleteWeeklyProgressToApi">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.deleteWeeklyProgressToApi][dhjung]  */
		DELETE
		FROM pr_weekly_report_progress
		WHERE cntrct_chg_id = #{cntrctChgId}
		AND weekly_report_id = #{weeklyReportId}
	</delete>

	<delete id="deleteWeeklyActivityToApi">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.deleteWeeklyActivityToApi][dhjung]  */
		DELETE
		FROM pr_weekly_report_activity
		WHERE cntrct_chg_id = #{cntrctChgId}
		AND weekly_report_id = #{weeklyReportId}
	</delete>

	<update id="updateWeeklyProgressAll" parameterType="input">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.updateWeeklyProgressAll][dhjung]  */
		UPDATE pr_weekly_report_progress
		SET dlt_yn = 'Y'
		, chg_dt = now()
		, chg_id = #{usrId}
		, dlt_dt = now()
		, dlt_id = #{usrId}
		WHERE cntrct_chg_id = #{cntrctChgId}
		AND weekly_report_id = #{weeklyReportId}
		AND dlt_yn = 'N'
	</update>

	<update id="updateWeeklyActivityAll" parameterType="input">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.updateWeeklyActivityAll][dhjung]  */
		UPDATE pr_weekly_report_activity
		SET dlt_yn = 'Y'
		, chg_dt = now()
		, chg_id = #{usrId}
		, dlt_dt = now()
		, dlt_id = #{usrId}
		WHERE cntrct_chg_id = #{cntrctChgId}
		AND weekly_report_id = #{weeklyReportId}
		AND dlt_yn = 'N'
	</update>

	<update id="updateWeeklyActivity" parameterType="list">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.updateWeeklyActivity][dhjung]  */
		<foreach collection="list" item="item">
			UPDATE pr_weekly_report_activity
			SET dlt_yn = 'Y'
			, chg_dt = now()
			, chg_id = #{item.chgId}
			, dlt_dt = now()
			, dlt_id = #{item.dltId}
			WHERE cntrct_chg_id = #{item.cntrctChgId}
			AND weekly_report_id = #{item.weeklyReportId}
			AND weekly_activity_id = #{item.weeklyActivityId};
		</foreach>
	</update>

	<update id="updateWeeklyNextActivity" parameterType="list">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.updateWeeklyNextActivity][dhjung]  */
		<foreach collection="list" item="item">
			UPDATE pr_weekly_report_activity
			SET pstats = #{item.pstats}, chg_dt = now(), chg_id = #{item.chgId}
			WHERE cntrct_chg_id = #{item.cntrctChgId}
			AND weekly_report_id = #{item.weeklyReportId}
			AND weekly_activity_id = #{item.weeklyActivityId}
			AND dlt_yn = 'N';
		</foreach>
	</update>

	<update id="updateWeeklyDelayActivity" parameterType="list">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.updateWeeklyDelayActivity][dhjung]  */
		<foreach collection="list" item="item">
			UPDATE pr_weekly_report_activity
			SET dly_div = #{item.dlyDiv}, major_prcs_yn = #{item.majorPrcsYn}, dly_rsn = #{item.dlyRsn}, chg_dt = now(), chg_id = #{item.chgId}
			WHERE cntrct_chg_id = #{item.cntrctChgId}
			AND weekly_report_id = #{item.weeklyReportId}
			AND activity_id = #{item.activityId}
			AND work_dt_type IN ('T', 'D')
			AND dlt_yn = 'N';
		</foreach>
	</update>

	<insert id="insertWeeklyProgress" parameterType="input">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.insertWeeklyProgress][dhjung]  */
		INSERT INTO pr_weekly_report_progress (
		cntrct_chg_id
		, weekly_report_id
		, cnstty_cd
		, cnstty_nm
		, cntrct_am
		, cntrct_bohal_rate
		, acmlt_plan_bohal_rate
		, acmlt_arslt_bohal_rate
		, thismth_plan_bohal_rate
		, thismth_arslt_bohal_rate
		, lsmth_plan_bohal_rate
		, lsmth_arslt_bohal_rate
		, dlt_yn
		, rgst_dt
		, rgstr_id
		, chg_dt
		, chg_id)
		SELECT cntrct_chg_id
		, #{weeklyReportId}
		, cnstty_cd
		, cnstty_nm
		, cnt_cost
		, bohal
		, acmlt_plan_bohal_rate
		, acmlt_arslt_bohal_rate
		, thismth_plan_bohal_rate
		, thismth_arslt_bohal_rate
		, lsmth_plan_bohal_rate
		, lsmth_arslt_bohal_rate
		, 'N'
		, NOW()
		, #{rgstrId}
		, NOW()
		, #{rgstrId}
		FROM (
		WITH RECURSIVE
		base_data AS (
		SELECT #{cntrctChgId} AS cntrct_chg_id
		, #{reportDate} AS this_start
		, TO_CHAR(#{reportDate}::DATE +6, 'YYYY-MM-DD') AS this_end
		, TO_CHAR(#{reportDate}::DATE +7, 'YYYY-MM-DD') AS next_start
		, TO_CHAR(#{reportDate}::DATE -1, 'YYYY-MM-DD') AS prev_end
		, (SELECT SUM(mtrl_am + lbr_am + gnrlexpns_am ) AS sum_cost FROM ct_cbs WHERE cnstty_lvl_num = '1'AND cntrct_chg_id = #{cntrctChgId} AND dlt_yn = 'N')
		),
		cbs_tbl AS (
		SELECT DISTINCT
		cc.cntrct_chg_id
		, cc.unit_cnst_type
		, cc.cnstty_cd
		, cc.cnstty_sn
		, cc.cnstty_nm
		, (mtrl_am + lbr_am + gnrlexpns_am) AS cnt_cost
		, COALESCE(pmrp.acmlt_plan_bohal_rate, 0) AS lsmth_plan_bohal_rate
		, COALESCE(pmrp.acmlt_arslt_bohal_rate, 0) AS lsmth_arslt_bohal_rate
		, ((cc.mtrl_am + cc.lbr_am + cc.gnrlexpns_am) / bd.sum_cost) * 100 AS bohal
		FROM ct_cbs cc
		INNER JOIN base_data bd ON cc.cntrct_chg_id = bd.cntrct_chg_id
		LEFT JOIN ( SELECT DISTINCT
		cntrct_chg_id
		, cnstty_cd
		, cnstty_nm
		, weekly_report_id
		, acmlt_plan_bohal_rate
		, acmlt_arslt_bohal_rate
		FROM pr_weekly_report_progress
		WHERE dlt_yn = 'N'
		AND weekly_report_id = (SELECT weekly_report_id
		FROM pr_weekly_report
		WHERE dlt_yn = 'N'
		AND cntrct_chg_id = #{cntrctChgId}
		AND (apprvl_stats != 'R' OR apprvl_stats IS NULL)
		AND report_date = TO_CHAR(#{reportDate}::DATE -7, 'YYYY-MM-DD'))
		) pmrp ON pmrp.cntrct_chg_id = cc.cntrct_chg_id
		AND pmrp.cnstty_cd = cc.cnstty_cd
		AND pmrp.cnstty_nm = cc.cnstty_nm
		WHERE cc.cnstty_lvl_num = 1
		),
		<![CDATA[
					plan_data AS (
						SELECT cc.unit_cnst_type
							 , cc.up_cnstty_cd AS cnstty_cd
							 , cc.cnstty_sn
							 , cc.cnstty_nm
							 , SUM(plc.rsce_qty / plc.duration * plc.this_week * plc.amt) AS plan_amt
							 , SUM(actual_sch) AS actual_amt
						  FROM ct_cbs cc
					INNER JOIN (SELECT ccd.cnstty_sn
									 , pa.cntrct_chg_id
									 , pq.cnstty_cd
									 , pq.rsce_qty
									 , pa.plan_start
									 , pa.plan_finish
									 , (TO_DATE(pa.plan_finish, 'YYYY-MM-DD') - TO_DATE(pa.plan_start, 'YYYY-MM-DD') + 1) AS duration
									 , (TO_DATE(CASE WHEN pa.plan_finish > bd.next_start THEN bd.this_end ELSE pa.plan_finish END, 'YYYY-MM-DD') - TO_DATE(CASE WHEN pa.plan_start > bd.prev_end THEN pa.plan_start ELSE bd.this_start END, 'YYYY-MM-DD') + 1) AS this_week
									 , (ccd.mtrl_uprc + ccd.lbr_uprc + ccd.gnrlexpns_uprc) AS amt
								  FROM pr_activity pa
							INNER JOIN pr_qdb pq ON pa.cntrct_chg_id = pq.cntrct_chg_id
									AND pa.revision_id = pq.revision_id
									AND pa.activity_id = pq.activity_id
							INNER JOIN ct_cbs_detail ccd ON pq.cntrct_chg_id = ccd.cntrct_chg_id
									AND pq.dtl_cnstty_sn = ccd.dtl_cnstty_sn
							INNER JOIN base_data bd ON ccd.cntrct_chg_id = bd.cntrct_chg_id
								 WHERE pa.cntrct_chg_id = bd.cntrct_chg_id
								   AND pa.revision_id in (SELECT revision_id
								   							FROM pr_revision
								   						   WHERE cntrct_chg_id = pa.cntrct_chg_id
								   							 AND dlt_yn = 'N'
								   							 AND last_revision_yn = 'Y')
								   AND pa.dlt_yn = 'N'
								   AND pa.expt_cost <> 0
								   AND pa.plan_start < bd.next_start
								   AND pa.plan_finish > bd.prev_end
								) plc ON cc.cnstty_sn = plc.cnstty_sn
					INNER JOIN (SELECT ccd.cnstty_sn
									 , SUM(cdrq.work_qty * (ccd.mtrl_uprc + ccd.lbr_uprc + ccd.gnrlexpns_uprc)) AS actual_sch
								  FROM cw_daily_report_qdb cdrq
							INNER JOIN ct_cbs_detail ccd ON cdrq.cntrct_chg_id = ccd.cntrct_chg_id
								   AND cdrq.dtl_cnstty_sn = ccd.dtl_cnstty_sn
								   AND cdrq.rsce_cd = ccd.rsce_cd
								   AND ccd.dlt_yn = 'N'
							INNER JOIN base_data td ON ccd.cntrct_chg_id = td.cntrct_chg_id
								 WHERE cdrq.daily_report_id IN (SELECT daily_report_id
								 								  FROM cw_daily_report cdr
								 								 WHERE cdr.cntrct_no = #{cntrctNo}
								 								   AND cdr.daily_report_date BETWEEN td.this_start AND td.this_end
								 								   AND cdrq.dlt_yn = 'N')
							  GROUP BY ccd.cnstty_sn
								) act ON cc.cnstty_sn = act.cnstty_sn
					     WHERE cc.cntrct_chg_id = #{cntrctChgId}
					  GROUP BY cc.unit_cnst_type, cc.up_cnstty_cd, cc.cnstty_sn, cc.cnstty_nm
					)
					]]>
		SELECT DISTINCT
		ccb.cntrct_chg_id
		, ccb.cnstty_cd
		, ccb.cnstty_nm
		, ccb.cnt_cost
		, ccb.bohal
		, CASE WHEN SUM(plan_c.plan_amt) IS NULL AND ccb.lsmth_plan_bohal_rate IS NULL THEN 0
		ELSE COALESCE(SUM(plan_c.plan_amt) / ccb.cnt_cost, 0) + COALESCE(ccb.lsmth_plan_bohal_rate, 0)
		END AS acmlt_plan_bohal_rate
		, CASE WHEN SUM(plan_c.actual_amt) IS NULL AND ccb.lsmth_arslt_bohal_rate IS NULL THEN 0
		ELSE COALESCE(SUM(plan_c.actual_amt) / ccb.cnt_cost, 0) + COALESCE(ccb.lsmth_arslt_bohal_rate, 0)
		END AS acmlt_arslt_bohal_rate
		, COALESCE((SUM(plan_amt) / ccb.cnt_cost), 0) AS thismth_plan_bohal_rate
		, COALESCE((SUM(actual_amt) / ccb.cnt_cost), 0) AS thismth_arslt_bohal_rate
		, COALESCE(ccb.lsmth_plan_bohal_rate, 0) AS lsmth_plan_bohal_rate
		, COALESCE(ccb.lsmth_arslt_bohal_rate, 0) AS lsmth_arslt_bohal_rate
		FROM cbs_tbl ccb
		LEFT JOIN plan_data plan_c ON ccb.unit_cnst_type = plan_c.unit_cnst_type
		AND ccb.cnstty_cd = LEFT(plan_c.cnstty_cd, LENGTH(ccb.cnstty_cd))
		GROUP BY ccb.cntrct_chg_id, ccb.cnstty_cd, ccb.cnstty_nm, ccb.cnt_cost, ccb.bohal, ccb.lsmth_plan_bohal_rate, ccb.lsmth_arslt_bohal_rate
		) sub_tbl;
	</insert>

	<insert id="insertNextWeekActivity" parameterType="input">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.insertNextWeekActivity][dhjung]  */
		INSERT INTO pr_weekly_report_activity (
		cntrct_chg_id
		, weekly_report_id
		, wbs_cd
		, activity_id
		, work_dt_type
		, plan_bgn_date
		, plan_end_date
		, actual_bgn_date
		, actual_end_date
		, pstats
		, dly_div
		, revision_id
		, dlt_yn
		, rgst_dt
		, rgstr_id
		, chg_dt
		, chg_id)
		SELECT #{cntrctChgId}
		, #{weeklyReportId}
		, wbs_cd
		, activity_id
		, work_dt_type
		, plan_bgn_date
		, plan_end_date
		, actual_bgn_date
		, actual_end_date
		, pstats
		, dly_div
		, revision_id
		, dlt_yn
		, NOW()
		, #{rgstrId}
		, NOW()
		, #{rgstrId}
		FROM (
		WITH RECURSIVE
		pstats_tbl AS (
		SELECT cdra.cntrct_chg_id
		, cdra.wbs_cd
		, cdra.activity_id
		, cdra.pstats
		, ROW_NUMBER() OVER (PARTITION BY cdra.activity_id, cdra.cntrct_chg_id, cdra.wbs_cd ORDER BY cdra.pstats ASC, drt.daily_report_date desc) AS rn
		FROM cw_daily_report_activity cdra
		JOIN cw_daily_report drt ON drt.daily_report_id = cdra.daily_report_id
		WHERE cdra.dlt_yn = 'N'
		AND cdra.cntrct_chg_id = #{cntrctChgId}
		AND cdra.revision_id = (SELECT revision_id
		FROM pr_revision
		WHERE dlt_yn = 'N'
		AND last_revision_yn = 'Y'
		AND cntrct_chg_id = cdra.cntrct_chg_id)
		AND drt.dlt_yn = 'N'
		AND cdra.work_dt_type = 'TD'
		GROUP BY cdra.cntrct_chg_id, cdra.wbs_cd, cdra.activity_id, cdra.pstats, drt.daily_report_date
		)
		SELECT pt.cntrct_chg_id
		, pt.wbs_cd
		, pt.activity_id
		, 'N' AS work_dt_type
		, pa.plan_start AS plan_bgn_date
		, pa.plan_finish AS plan_end_date
		, pa.actual_start AS actual_bgn_date
		, pa.actual_finish AS actual_end_date
		, pt.pstats
		, CASE
		<![CDATA[
								WHEN COALESCE(NULLIF(pa.plan_start, '')::DATE, CURRENT_DATE) < COALESCE(NULLIF(pa.actual_start, '')::DATE, CURRENT_DATE) THEN 'ST'
								WHEN COALESCE(NULLIF(pa.plan_finish, '')::DATE, CURRENT_DATE) < COALESCE(NULLIF(pa.actual_finish, '')::DATE, CURRENT_DATE) THEN 'FN'
								ELSE NULL
							]]>
		END AS dly_div
		, pa.revision_id
		, 'N' AS dlt_yn
		FROM pstats_tbl pt
		JOIN pr_activity pa ON pt.cntrct_chg_id = pa.cntrct_chg_id
		AND pt.wbs_cd = pa.wbs_cd
		AND pt.activity_id = pa.activity_id
		WHERE rn = 1
		AND ((TO_DATE(pa.plan_start, 'YYYY-MM-DD') BETWEEN #{reportDate}::DATE+7 AND #{reportDate}::DATE+13)
		OR
		(TO_DATE(pa.plan_finish, 'YYYY-MM-DD') BETWEEN #{reportDate}::DATE+7 AND #{reportDate}::DATE+13))
		ORDER BY wbs_cd, activity_id
		) sub_tbl;
	</insert>

	<insert id="insertThisWeekDelayActivity" parameterType="input">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.insertThisWeekDelayActivity][dhjung]  */
		INSERT INTO pr_weekly_report_activity (
		cntrct_chg_id
		, weekly_report_id
		, wbs_cd
		, activity_id
		, work_dt_type
		, plan_bgn_date
		, plan_end_date
		, actual_bgn_date
		, actual_end_date
		, pstats
		, dly_div
		, revision_id
		, dlt_yn
		, rgst_dt
		, rgstr_id
		, chg_dt
		, chg_id)
		SELECT #{cntrctChgId}
		, #{weeklyReportId}
		, wbs_cd
		, activity_id
		, work_dt_type
		, plan_bgn_date
		, plan_end_date
		, actual_bgn_date
		, actual_end_date
		, pstats
		, dly_div
		, revision_id
		, dlt_yn
		, NOW()
		, #{rgstrId}
		, NOW()
		, #{rgstrId}
		FROM (
		WITH RECURSIVE
		pstats_tbl AS (
		SELECT cdra.cntrct_chg_id
		, cdra.wbs_cd
		, cdra.activity_id
		, cdra.pstats
		, ROW_NUMBER() OVER (PARTITION BY cdra.activity_id, cdra.cntrct_chg_id, cdra.wbs_cd	ORDER BY cdra.pstats ASC, drt.daily_report_date desc) AS rn
		FROM cw_daily_report_activity cdra
		JOIN cw_daily_report drt ON drt.daily_report_id = cdra.daily_report_id
		WHERE cdra.dlt_yn = 'N'
		AND cdra.cntrct_chg_id = #{cntrctChgId}
		AND cdra.revision_id = (SELECT revision_id
		FROM pr_revision
		WHERE dlt_yn = 'N'
		AND last_revision_yn = 'Y'
		AND cntrct_chg_id = cdra.cntrct_chg_id)
		AND drt.dlt_yn = 'N'
		AND drt.daily_report_date::DATE BETWEEN #{reportDate}::DATE AND #{reportDate}::DATE +6
		AND cdra.work_dt_type = 'TD'
		GROUP BY cdra.cntrct_chg_id, cdra.wbs_cd, cdra.activity_id, cdra.pstats, drt.daily_report_date
		),
		delay_tbl AS (
		SELECT pt.cntrct_chg_id
		, pt.wbs_cd
		, pt.activity_id
		, 'D' AS work_dt_type
		, pa.plan_start AS plan_bgn_date
		, pa.plan_finish AS plan_end_date
		, pa.actual_start AS actual_bgn_date
		, pa.actual_finish AS actual_end_date
		, pt.pstats
		, CASE
		<![CDATA[
							 		WHEN COALESCE(NULLIF(pa.plan_start, '')::DATE, CURRENT_DATE) < COALESCE(NULLIF(pa.actual_start, '')::DATE, CURRENT_DATE) THEN 'ST'
							 		WHEN COALESCE(NULLIF(pa.plan_finish, '')::DATE, CURRENT_DATE) < COALESCE(NULLIF(pa.actual_finish, '')::DATE, CURRENT_DATE) THEN 'FN'
							 		ELSE NULL
							 	]]>
		END AS dly_div
		, pa.revision_id
		, 'N' AS dlt_yn
		FROM pstats_tbl pt
		JOIN pr_activity pa ON pt.cntrct_chg_id = pa.cntrct_chg_id
		AND pt.wbs_cd = pa.wbs_cd
		AND pt.activity_id = pa.activity_id
		WHERE rn = 1
		ORDER BY wbs_cd, activity_id
		)
		SELECT cntrct_chg_id
		, wbs_cd
		, activity_id
		, work_dt_type
		, plan_bgn_date
		, plan_end_date
		, actual_bgn_date
		, actual_end_date
		, pstats
		, dly_div
		, revision_id
		, dlt_yn
		FROM delay_tbl
		WHERE dly_div IS NOT NULL
		) sub_tbl;
	</insert>

	<insert id="insertThisWeekActivity" parameterType="input">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.insertThisWeekActivity][dhjung]  */
		INSERT INTO pr_weekly_report_activity (
		cntrct_chg_id
		, weekly_report_id
		, wbs_cd
		, activity_id
		, work_dt_type
		, plan_bgn_date
		, plan_end_date
		, actual_bgn_date
		, actual_end_date
		, pstats
		, dly_div
		, revision_id
		, dlt_yn
		, thismth_plan_rate
		, thismth_exe_rate
		, rgst_dt
		, rgstr_id
		, chg_dt
		, chg_id
		)
		SELECT #{cntrctChgId}
		, #{weeklyReportId}
		, wbs_cd
		, activity_id
		, work_dt_type
		, plan_bgn_date
		, plan_end_date
		, actual_bgn_date
		, actual_end_date
		, pstats
		, dly_div
		, revision_id
		, dlt_yn
		, thismth_plan_rate
		, thismth_exe_rate
		, NOW()
		, #{rgstrId}
		, NOW()
		, #{rgstrId}
		FROM (
		WITH RECURSIVE
		pstats_tbl AS (
		SELECT cdra.cntrct_chg_id
		, cdra.wbs_cd
		, cdra.activity_id
		, cdra.pstats
		, ROW_NUMBER() OVER (PARTITION BY cdra.activity_id, cdra.cntrct_chg_id, cdra.wbs_cd	ORDER BY cdra.pstats ASC, drt.daily_report_date desc) AS rn
		FROM cw_daily_report_activity cdra
		JOIN cw_daily_report drt ON drt.daily_report_id = cdra.daily_report_id
		WHERE cdra.dlt_yn = 'N'
		AND cdra.cntrct_chg_id = #{cntrctChgId}
		AND cdra.revision_id = (SELECT revision_id
		FROM pr_revision
		WHERE dlt_yn = 'N'
		AND last_revision_yn = 'Y'
		AND cntrct_chg_id = cdra.cntrct_chg_id)
		AND drt.dlt_yn = 'N'
		AND drt.daily_report_date::DATE BETWEEN #{reportDate}::DATE AND #{reportDate}::DATE +6
		AND cdra.work_dt_type = 'TD'
		GROUP BY cdra.cntrct_chg_id, cdra.wbs_cd, cdra.activity_id, cdra.pstats, drt.daily_report_date
		),
		main_query AS (
		SELECT pt.cntrct_chg_id
		, pt.wbs_cd
		, pt.activity_id
		, 'T' AS work_dt_type
		, pa.plan_start AS plan_bgn_date
		, pa.plan_finish AS plan_end_date
		, pa.actual_start AS actual_bgn_date
		, pa.actual_finish AS actual_end_date
		, pt.pstats
		, CASE
		<![CDATA[
						 		WHEN COALESCE(NULLIF(pa.plan_start, '')::DATE, CURRENT_DATE) < COALESCE(NULLIF(pa.actual_start, '')::DATE, CURRENT_DATE) THEN 'ST'
						 		WHEN COALESCE(NULLIF(pa.plan_finish, '')::DATE, CURRENT_DATE) < COALESCE(NULLIF(pa.actual_finish, '')::DATE, CURRENT_DATE) THEN 'FN'
						 		ELSE NULL
							]]>
		END AS dly_div
		, pa.revision_id
		, 'N' AS dlt_yn
		, pa.activity_kind
		, CASE WHEN COALESCE(pa.actual_start, '') != '' AND COALESCE(pa.actual_finish, '') != '' THEN TO_DATE(pa.actual_finish, 'YYYY-MM-DD') - TO_DATE(pa.actual_start, 'YYYY-MM-DD') +1
		ELSE TO_DATE(COALESCE(NULLIF(pa.plan_finish, ''), pa.plan_start), 'YYYY-MM-DD') - TO_DATE(COALESCE(NULLIF(pa.plan_start, ''), pa.plan_finish), 'YYYY-MM-DD') +1
		END AS thiswkl_total_duration
		, (TO_DATE(COALESCE(NULLIF(pa.actual_finish, ''), TO_CHAR(#{reportDate}::DATE + 6, 'YYYY-MM-DD')), 'YYYY-MM-DD')) - TO_DATE(pa.actual_start, 'YYYY-MM-DD') + 1 AS thiswkl_duration
		, TO_DATE(COALESCE(NULLIF(pa.plan_finish, ''), pa.plan_start), 'YYYY-MM-DD') - TO_DATE(COALESCE(NULLIF(pa.plan_start, ''), pa.plan_finish), 'YYYY-MM-DD') +1  AS plan_total_duration
		, (TO_DATE(COALESCE(NULLIF(pa.plan_finish, ''), TO_CHAR(#{reportDate}::DATE + 6, 'YYYY-MM-DD')), 'YYYY-MM-DD')) - TO_DATE(COALESCE(NULLIF(pa.plan_start, ''), pa.plan_finish), 'YYYY-MM-DD') +1 AS plan_duration
		FROM pstats_tbl pt
		JOIN pr_activity pa ON pt.cntrct_chg_id = pa.cntrct_chg_id
		AND pt.wbs_cd = pa.wbs_cd
		AND pt.activity_id = pa.activity_id
		WHERE rn = 1
		ORDER BY wbs_cd, activity_id
		)
		SELECT cntrct_chg_id
		, wbs_cd
		, activity_id
		, work_dt_type
		, plan_bgn_date
		, plan_end_date
		, actual_bgn_date
		, actual_end_date
		, pstats
		, dly_div
		, revision_id
		, dlt_yn
		, thiswkl_total_duration
		, thiswkl_duration
		, plan_total_duration
		, plan_duration
		, CASE WHEN activity_kind IN ('SM', 'FN') AND (COALESCE(actual_bgn_date, '') != '' OR COALESCE(actual_end_date, '') != '') THEN 100.00
		ELSE (plan_duration::NUMERIC / plan_total_duration::NUMERIC) * 100
		END AS thismth_plan_rate
		, CASE WHEN activity_kind IN ('SM', 'FN') AND (COALESCE(actual_bgn_date, '') != '' OR COALESCE(actual_end_date, '') != '') THEN 100.00
		ELSE (thiswkl_duration::NUMERIC / thiswkl_total_duration::NUMERIC) * 100
		END AS thismth_exe_rate
		FROM main_query
		) sub_tbl;
	</insert>

	<insert id="insertWeeklyActivity" parameterType="list">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.insertWeeklyActivity][dhjung]  */
		INSERT INTO pr_weekly_report_activity (
		cntrct_chg_id
		, weekly_report_id
		, wbs_cd
		, activity_id
		, work_dt_type
		, plan_bgn_date
		, plan_end_date
		, actual_bgn_date
		, actual_end_date
		, pstats, dly_div
		, major_prcs_yn
		, dly_rsn
		, revision_id
		, dlt_yn
		, thismth_plan_rate
		, thismth_exe_rate
		, rgst_dt
		, rgstr_id
		, chg_dt
		, chg_id)
		VALUES
		<foreach collection="list" item="item" separator=",">
			(
			#{item.cntrctChgId}
			, #{item.weeklyReportId}
			, #{item.wbsCd}
			, #{item.activityId}
			, #{item.workDtType}
			, #{item.planBgnDate}
			, #{item.planEndDate}
			, #{item.actualBgnDate}
			, #{item.actualEndDate}
			, #{item.pstats}
			, #{item.dlyDiv}
			, #{item.majorPrcsYn}
			, #{item.dlyRsn}
			, #{item.revisionId}
			, 'N'
			, #{item.thismthPlanRate}::numeric
			, #{item.thismthExeRate}::numeric
			, now()
			, #{item.rgstrId}
			, now()
			, #{item.rgstrId}
			)
		</foreach>
	</insert>


	<select id="selectWeeklyreportList" parameterType="input" resultType="weeklyreportListOutput">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.selectWeeklyreportList][dhjung]  */
		WITH weeklyreport_tbl AS (
		SELECT pwr.cntrct_chg_id
		, pwr.weekly_report_id
		, pwr.report_date
		, pwr.weekly_report_date
		, pwr.apprvl_stats
		, pwr.rgstr_id
		, (SELECT usr_nm FROM sm_user_info  WHERE usr_id = pwr.rgstr_id) AS rgstr_nm
		, pwr.apprvl_id
		, (SELECT usr_nm FROM sm_user_info WHERE usr_id = pwr.apprvl_id) AS apprvl_nm
		, pwr.acmlt_plan_bohal_rate
		, pwr.acmlt_arslt_bohal_rate
		, pwr.thismth_plan_bohal_rate
		, pwr.thismth_arslt_bohal_rate
		, pwr.lsmth_plan_bohal_rate
		, pwr.lsmth_arslt_bohal_rate
		, scc.cmn_cd_nm_krn AS apprvl_stats_krn
		, pwr.rgst_dt
		, pwr.rmrk_cntnts
		, pwr.title
		FROM pr_weekly_report pwr
		LEFT JOIN sm_com_code scc ON pwr.apprvl_stats = scc.cmn_cd
		AND scc.cmn_grp_cd = 'f5a2c6ff-458b-8ef4-7219-12b06087a70f'
		WHERE pwr.dlt_yn = 'N'
		AND pwr.cntrct_chg_id IN (SELECT cntrct_chg_id FROM cn_contract_change WHERE cntrct_no = #{cntrctNo} AND dlt_yn = 'N')
		)
		SELECT *
		FROM weeklyreport_tbl
		WHERE 1 = 1
		<if test="searchText != null and searchText != ''">
			AND (weekly_report_date LIKE '%'||#{searchText}||'%' OR report_date LIKE '%'||#{searchText}||'%' OR rgstr_nm LIKE '%'||#{searchText}||'%')
		</if>
		<if test="apprvlStats != null and apprvlStats != ''">
			AND apprvl_stats = #{apprvlStats}
		</if>
		ORDER BY report_date DESC;
	</select>

	<select id="selectWeeklyMajorActivityList" parameterType="input" resultType="map">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.selectWeeklyMajorActivityList][dhjung]  */
		WITH RECURSIVE
		wbs_path_tbl AS (
		SELECT wbs_cd
		, wbs_nm
		, up_wbs_cd
		, 1 AS DEPTH
		, ARRAY[wbs_nm]::varchar[] AS PATH
		, cntrct_chg_id
		FROM pr_wbs
		WHERE wbs_level = '1'
		AND cntrct_chg_id = #{cntrctChgId}
		AND dlt_yn = 'N'
		UNION ALL
		SELECT pw.wbs_cd
		, pw.wbs_nm
		, pw.up_wbs_cd
		, wpt.depth + 1
		, wpt.path || pw.wbs_nm
		, pw.cntrct_chg_id
		FROM pr_wbs pw
		JOIN wbs_path_tbl wpt ON pw.up_wbs_cd = wpt.wbs_cd
		AND pw.cntrct_chg_id = wpt.cntrct_chg_id
		WHERE pw.dlt_yn = 'N'
		)
		SELECT DISTINCT
		array_to_string(wpt.path, ' / ') AS path_nm
		, pmra.cntrct_chg_id
		, pmra.weekly_report_id
		, pmra.weekly_activity_id
		, pmra.wbs_cd
		, pmra.activity_id
		, pa.activity_nm
		, pmr.report_date::DATE +6 AS this_end
		, pmra.plan_bgn_date
		, pmra.plan_end_date
		, pmra.actual_bgn_date
		, pmra.actual_end_date
		, (SELECT sc.cmn_cd_nm_krn FROM sm_com_code sc WHERE cmn_grp_cd = 'b5af6b1b-224f-3ce1-ab98-0c8db36c2955' AND sc.cmn_cd = pmra.pstats) AS pstats_nm
		, CASE WHEN COALESCE(pmra.plan_end_date, '') != '' AND COALESCE(pmra.plan_bgn_date, '') != ''
		THEN TO_DATE(pmra.plan_end_date, 'YYYY-MM-DD') - TO_DATE(pmra.plan_bgn_date, 'YYYY-MM-DD') + 1
		ELSE NULL
		END AS plan_reqre_daynum
		, CASE WHEN COALESCE(pmra.actual_end_date, '') != '' AND COALESCE(pmra.actual_bgn_date, '') != ''
		THEN TO_DATE(pmra.actual_end_date, 'YYYY-MM-DD') - TO_DATE(pmra.actual_bgn_date, 'YYYY-MM-DD') + 1
		ELSE NULL
		END AS actual_reqre_daynum
		, pmra.revision_id
		, pmra.dly_div
		, pmra.dly_rsn
		, pmra.pstats
		, pmra.thismth_plan_rate
		, pmra.thismth_exe_rate
		, TRUNC(pa.expt_cost) AS expt_cost
		FROM pr_weekly_report_activity pmra
		JOIN pr_weekly_report pmr ON pmr.weekly_report_id = pmra.weekly_report_id
		AND pmr.cntrct_chg_id = pmra.cntrct_chg_id
		AND pmr.dlt_yn = 'N'
		JOIN pr_activity pa ON pa.activity_id = pmra.activity_id
		AND pa.cntrct_chg_id = #{cntrctChgId}
		AND pa.revision_id = (SELECT revision_id
		FROM pr_revision
		WHERE dlt_yn = 'N'
		AND last_revision_yn = 'Y'
		AND cntrct_chg_id = #{cntrctChgId})
		JOIN wbs_path_tbl wpt ON wpt.wbs_cd = pmra.wbs_cd
		WHERE pmra.cntrct_chg_id = #{cntrctChgId}
		AND pmra.weekly_report_id = #{weeklyReportId}
		AND pmra.work_dt_type = 'T'
		AND pmra.dlt_yn = 'N'
		ORDER BY wbs_cd, activity_id;
	</select>

	<select id="selectWeeklyDelayActivityList" parameterType="input" resultType="map">
		WITH RECURSIVE
		wbs_path_tbl AS (
		SELECT wbs_cd
		, wbs_nm
		, up_wbs_cd
		, 1 AS DEPTH
		, ARRAY[wbs_nm]::varchar[] AS PATH
		, cntrct_chg_id
		FROM pr_wbs
		WHERE wbs_level = '1'
		AND cntrct_chg_id = #{cntrctChgId}
		AND dlt_yn = 'N'
		UNION ALL
		SELECT pw.wbs_cd
		, pw.wbs_nm
		, pw.up_wbs_cd
		, wpt.depth + 1
		, wpt.path || pw.wbs_nm
		, pw.cntrct_chg_id
		FROM pr_wbs pw
		JOIN wbs_path_tbl wpt ON pw.up_wbs_cd = wpt.wbs_cd
		AND pw.cntrct_chg_id = wpt.cntrct_chg_id
		WHERE pw.dlt_yn = 'N'
		)
		SELECT DISTINCT
		array_to_string(wpt.path, ' / ') AS path_nm
		, pmra.cntrct_chg_id
		, pmra.weekly_report_id
		, pmra.weekly_activity_id
		, pa.activity_nm
		, pmr.report_date::DATE +6 AS this_end
		, pmra.wbs_cd
		, pmra.activity_id
		, pmra.plan_bgn_date
		, pmra.plan_end_date
		, pmra.actual_bgn_date
		, pmra.actual_end_date
		, (SELECT sc.cmn_cd_nm_krn FROM sm_com_code sc WHERE cmn_grp_cd = 'b5af6b1b-224f-3ce1-ab98-0c8db36c2955' AND sc.cmn_cd = pmra.pstats) AS pstats_nm
		, CASE WHEN COALESCE(pmra.plan_end_date, '') != '' AND COALESCE(pmra.plan_bgn_date, '') != ''
		THEN TO_DATE(pmra.plan_end_date, 'YYYY-MM-DD') - TO_DATE(pmra.plan_bgn_date, 'YYYY-MM-DD') + 1
		ELSE NULL
		END AS plan_reqre_daynum
		, pmra.revision_id
		, pmra.pstats
		, pmra.dly_div
		, pmra.major_prcs_yn
		, COALESCE(pmra.dly_rsn, '') AS dly_rsn
		, TRUNC(pa.expt_cost) AS expt_cost
		FROM pr_weekly_report_activity pmra
		JOIN pr_weekly_report pmr ON pmr.weekly_report_id = pmra.weekly_report_id
		AND pmr.cntrct_chg_id = pmra.cntrct_chg_id
		AND pmr.dlt_yn = 'N'
		AND pmr.weekly_report_id = #{weeklyReportId}
		JOIN pr_activity pa ON pa.activity_id = pmra.activity_id
		AND pa.cntrct_chg_id = #{cntrctChgId}
		AND pa.revision_id = (SELECT revision_id
		FROM pr_revision
		WHERE dlt_yn = 'N'
		AND last_revision_yn = 'Y'
		AND cntrct_chg_id = #{cntrctChgId})
		JOIN wbs_path_tbl wpt ON wpt.wbs_cd = pmra.wbs_cd
		WHERE pmra.cntrct_chg_id = #{cntrctChgId}
		AND pmra.weekly_report_id = #{weeklyReportId}
		AND pmra.work_dt_type = 'D'
		AND pmra.dlt_yn = 'N'
		ORDER BY wbs_cd, activity_id;
	</select>

	<select id="selectNextWeekActivityList" parameterType="input" resultType="map">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.selectNextWeekActivityList][dhjung]  */
		WITH RECURSIVE
		wbs_path_tbl AS (
		SELECT wbs_cd
		, wbs_nm
		, up_wbs_cd
		, 1 AS DEPTH
		, ARRAY[wbs_nm]::varchar[] AS PATH
		, cntrct_chg_id
		FROM pr_wbs
		WHERE wbs_level = '1'
		AND cntrct_chg_id = #{cntrctChgId}
		AND dlt_yn = 'N'
		UNION ALL
		SELECT pw.wbs_cd
		, pw.wbs_nm
		, pw.up_wbs_cd
		, wpt.depth + 1
		, wpt.path || pw.wbs_nm
		, pw.cntrct_chg_id
		FROM pr_wbs pw
		JOIN wbs_path_tbl wpt ON pw.up_wbs_cd = wpt.wbs_cd AND pw.cntrct_chg_id = wpt.cntrct_chg_id
		WHERE pw.dlt_yn = 'N'
		)
		SELECT DISTINCT
		array_to_string(wpt.path, ' / ') AS path_nm
		, pmra.cntrct_chg_id
		, pmra.weekly_report_id
		, pmra.weekly_activity_id
		,	pa.activity_nm
		, pmra.wbs_cd
		, pmra.activity_id
		, pmra.plan_bgn_date
		, pmra.plan_end_date
		, pmra.actual_bgn_date
		, pmra.actual_end_date
		, (SELECT sc.cmn_cd_nm_krn FROM sm_com_code sc WHERE cmn_grp_cd = 'b5af6b1b-224f-3ce1-ab98-0c8db36c2955' AND sc.cmn_cd = pmra.pstats) AS pstats_nm
		, CASE WHEN COALESCE(pmra.plan_end_date, '') != '' AND COALESCE(pmra.plan_bgn_date, '') != ''
		THEN TO_DATE(pmra.plan_end_date, 'YYYY-MM-DD') - TO_DATE(pmra.plan_bgn_date, 'YYYY-MM-DD') + 1
		ELSE NULL
		END AS plan_reqre_daynum
		, pmra.revision_id
		, pmra.pstats
		, pmra.dly_div
		, pmra.dly_rsn
		, TRUNC(pa.expt_cost) AS expt_cost
		FROM pr_weekly_report_activity pmra
		JOIN pr_activity pa ON pa.activity_id = pmra.activity_id
		AND pa.cntrct_chg_id = #{cntrctChgId}
		AND pa.revision_id = (SELECT revision_id
		FROM pr_revision
		WHERE dlt_yn = 'N'
		AND last_revision_yn = 'Y'
		AND cntrct_chg_id = #{cntrctChgId})
		JOIN wbs_path_tbl wpt ON wpt.wbs_cd = pmra.wbs_cd
		WHERE pmra.cntrct_chg_id = #{cntrctChgId}
		AND pmra.weekly_report_id = #{weeklyReportId}
		AND pmra.work_dt_type = 'N'
		AND pmra.dlt_yn = 'N'
		ORDER BY wbs_cd, activity_id;
	</select>

	<select id="selectWeeklyProgress" parameterType="input" resultType="map">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.selectWeeklyProgress][dhjung]  */
		WITH RECURSIVE  main_tbl AS (
		SELECT pwr.cntrct_chg_id
		, pwr.weekly_report_id
		, pwrp.cnstty_cd
		, pwrp.cnstty_nm
		, pwrp.cntrct_am
		, pwrp.cntrct_bohal_rate
		, pwrp.weekly_cnstty_id
		, pwrp.lsmth_plan_bohal_rate
		, COALESCE((pwrp.cntrct_bohal_rate * pwrp.lsmth_plan_bohal_rate) / 100, 0) AS lsmth_p_cntrct_bohal
		, pwrp.thismth_plan_bohal_rate
		, COALESCE((pwrp.cntrct_bohal_rate * pwrp.thismth_plan_bohal_rate) / 100, 0) AS thismth_p_cntrct_bohal
		, pwrp.acmlt_plan_bohal_rate
		, COALESCE((pwrp.cntrct_bohal_rate * pwrp.acmlt_plan_bohal_rate) / 100, 0) AS acmlt_p_cntrct_bohal
		, pwrp.lsmth_arslt_bohal_rate
		, COALESCE((pwrp.cntrct_bohal_rate * pwrp.lsmth_arslt_bohal_rate) / 100, 0) AS lsmth_a_cntrct_bohal
		, pwrp.thismth_arslt_bohal_rate AS thismth_arslt_bohal_rate
		, COALESCE((pwrp.cntrct_bohal_rate * pwrp.thismth_arslt_bohal_rate) / 100, 0) AS thismth_a_cntrct_bohal
		, pwrp.acmlt_arslt_bohal_rate
		, COALESCE((pwrp.cntrct_bohal_rate * pwrp.acmlt_arslt_bohal_rate) / 100, 0) AS acmlt_a_cntrct_bohal
		, pwrp.rmk
		FROM pr_weekly_report pwr
		LEFT JOIN pr_weekly_report_progress pwrp ON pwr.cntrct_chg_id = pwrp.cntrct_chg_id
		AND pwrp.weekly_report_id = #{weeklyReportId}
		AND pwrp.dlt_yn = 'N'
		WHERE pwr.weekly_report_id = #{weeklyReportId}
		AND pwr.cntrct_chg_id = #{cntrctChgId}
		AND pwr.dlt_yn = 'N'
		ORDER BY cnstty_cd
		)
		SELECT cntrct_chg_id
		, weekly_report_id
		, cnstty_cd
		, cnstty_nm
		, cntrct_am
		, ROUND(cntrct_bohal_rate, 2)||'%' AS cntrct_bohal_rate
		, weekly_cnstty_id
		, ROUND(COALESCE(lsmth_plan_bohal_rate, 0), 2) ||'%' AS lsmth_plan_bohal_rate
		, ROUND(COALESCE(thismth_plan_bohal_rate, 0), 2) ||'%' AS thismth_plan_bohal_rate
		, ROUND(COALESCE(acmlt_plan_bohal_rate, 0), 2) ||'%' AS acmlt_plan_bohal_rate
		, ROUND(COALESCE(lsmth_arslt_bohal_rate, 0), 2) ||'%' AS lsmth_arslt_bohal_rate
		, ROUND(COALESCE(thismth_arslt_bohal_rate, 0), 2) ||'%' AS thismth_arslt_bohal_rate
		, ROUND(COALESCE(acmlt_arslt_bohal_rate, 0), 2) ||'%' AS acmlt_arslt_bohal_rate
		, COALESCE(rmk, '') as rmk
		FROM main_tbl
		UNION ALL
		SELECT NULL AS cntrct_chg_id
		, NULL AS weekly_report_id
		, 'TOTAL' AS cnstty_cd
		, '합계' AS cnstty_nm
		, SUM(cntrct_am) AS cntrct_am
		, ROUND(SUM(cntrct_bohal_rate), 2)||'%' AS cntrct_bohal_rate
		, NULL AS weekly_cnstty_id
		, ROUND(SUM(mt.lsmth_p_cntrct_bohal), 2) ||'%' AS lsmth_plan_bohal_rate
		, ROUND(SUM(mt.thismth_p_cntrct_bohal), 2) ||'%' AS thismth_plan_bohal_rate
		, ROUND(SUM(mt.acmlt_p_cntrct_bohal), 2) ||'%' AS acmlt_plan_bohal_rate
		, ROUND(SUM(mt.lsmth_a_cntrct_bohal), 2) ||'%' AS lsmth_arslt_bohal_rate
		, ROUND(SUM(mt.thismth_a_cntrct_bohal), 2) ||'%' AS thismth_arslt_bohal_rate
		, ROUND(SUM(mt.acmlt_a_cntrct_bohal), 2) ||'%' AS acmlt_arslt_bohal_rate
		, '' AS rmk
		FROM main_tbl mt;
	</select>

	<select id="selectSumWeeklyBohalRate" parameterType="input" resultType="weeklyBohalRate">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.selectSumWeeklyBohalRate][dhjung]  */
		SELECT COALESCE(SUM(lsmth_plan_bohal_rate), 0) AS lsmth_plan_bohal_rate
		, COALESCE(SUM(thismth_plan_bohal_rate), 0) AS thismth_plan_bohal_rate
		, COALESCE(SUM(acmlt_plan_bohal_rate), 0) AS acmlt_plan_bohal_rate
		, COALESCE(SUM(lsmth_arslt_bohal_rate), 0) AS lsmth_arslt_bohal_rate
		, COALESCE(SUM(thismth_arslt_bohal_rate), 0) AS thismth_arslt_bohal_rate
		, COALESCE(SUM(acmlt_arslt_bohal_rate),0) AS acmlt_arslt_bohal_rate
		FROM (
		SELECT (cntrct_bohal_rate * lsmth_plan_bohal_rate) / 100 AS lsmth_plan_bohal_rate
		, (cntrct_bohal_rate * thismth_plan_bohal_rate) / 100 AS thismth_plan_bohal_rate
		, (cntrct_bohal_rate * acmlt_plan_bohal_rate) / 100 AS acmlt_plan_bohal_rate
		, (cntrct_bohal_rate * lsmth_arslt_bohal_rate) / 100 AS lsmth_arslt_bohal_rate
		, (cntrct_bohal_rate * thismth_arslt_bohal_rate) / 100 AS thismth_arslt_bohal_rate
		, (cntrct_bohal_rate * acmlt_arslt_bohal_rate) / 100 AS acmlt_arslt_bohal_rate
		FROM pr_weekly_report_progress
		WHERE cntrct_chg_id = #{cntrctChgId}
		AND weekly_report_id = #{weeklyReportId}
		AND dlt_yn = 'N'
		) AS bohal_tbl;
	</select>

	<select id="selectWeeklyAddMajorActivityList" parameterType="input" resultType="map">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.selectWeeklyAddMajorActivityList][dhjung]  */
		WITH RECURSIVE wbs_path_tbl AS (
		SELECT wbs_cd
		, wbs_nm
		, up_wbs_cd
		, 1 AS DEPTH
		, ARRAY[wbs_nm]::varchar[] AS PATH
		, cntrct_chg_id
		FROM pr_wbs
		WHERE wbs_level = '1'
		AND cntrct_chg_id = #{cntrctChgId}
		UNION ALL
		SELECT pw.wbs_cd
		, pw.wbs_nm
		, pw.up_wbs_cd
		, wpt.depth + 1
		, wpt.path || pw.wbs_nm
		, pw.cntrct_chg_id
		FROM pr_wbs pw
		JOIN wbs_path_tbl wpt ON pw.up_wbs_cd = wpt.wbs_cd
		AND pw.cntrct_chg_id = wpt.cntrct_chg_id
		WHERE pw.dlt_yn = 'N'
		),
		pstats_tbl AS (
		SELECT cdra.cntrct_chg_id
		, cdra.wbs_cd
		, cdra.activity_id
		, cdra.pstats
		, ROW_NUMBER() OVER (PARTITION BY cdra.activity_id, cdra.cntrct_chg_id, cdra.wbs_cd ORDER BY drt.daily_report_date desc) AS rn
		FROM cw_daily_report_activity cdra
		JOIN cw_daily_report drt ON drt.daily_report_id = cdra.daily_report_id
		WHERE cdra.dlt_yn = 'N'
		AND cdra.cntrct_chg_id = #{cntrctChgId}
		AND cdra.revision_id = (SELECT revision_id
		FROM pr_revision
		WHERE dlt_yn = 'N'
		AND last_revision_yn = 'Y'
		AND cntrct_chg_id = cdra.cntrct_chg_id)
		AND drt.dlt_yn = 'N'
		AND cdra.work_dt_type = 'TD'
		AND drt.daily_report_date::DATE BETWEEN #{reportDate}::DATE AND #{reportDate}::DATE +6
		GROUP BY cdra.cntrct_chg_id, cdra.wbs_cd, cdra.activity_id, cdra.pstats, drt.daily_report_date
		),
		pr_activity_tbl AS (
		SELECT pa.cntrct_chg_id
		, pa.revision_id
		, pa.wbs_cd
		, pa.activity_id
		, pa.activity_nm
		, pa.expt_cost
		, pa.plan_start
		, pa.plan_finish
		, pa.actual_start
		, pa.actual_finish
		, CASE WHEN COALESCE(pa.plan_finish, '') != '' AND COALESCE(pa.plan_start, '') != '' THEN TO_DATE(pa.plan_finish, 'YYYY-MM-DD') - TO_DATE(pa.plan_start, 'YYYY-MM-DD') + 1
		ELSE NULL
		END AS plan_reqre_daynum
		, CASE WHEN COALESCE(pa.actual_finish, '') != '' AND COALESCE(pa.actual_start, '') != '' THEN TO_DATE(pa.actual_finish, 'YYYY-MM-DD') - TO_DATE(pa.actual_start, 'YYYY-MM-DD') + 1
		ELSE NULL
		END AS actual_reqre_daynum
		<![CDATA[
					 , CASE	WHEN COALESCE(NULLIF(pa.plan_start, '')::DATE, CURRENT_DATE) < COALESCE(NULLIF(pa.actual_start, '')::DATE, CURRENT_DATE) THEN 'ST'
					 		WHEN COALESCE(NULLIF(pa.plan_finish, '')::DATE, CURRENT_DATE) < COALESCE(NULLIF(pa.actual_finish, '')::DATE, CURRENT_DATE) THEN 'FN'
					 		ELSE ''
					   END AS dly_div
					]]>
		, pst.pstats
		, (SELECT sc.cmn_cd_nm_krn FROM sm_com_code sc WHERE cmn_grp_cd = 'b5af6b1b-224f-3ce1-ab98-0c8db36c2955' AND sc.cmn_cd = pst.pstats) AS pstats_nm
		, pa.activity_kind
		, CASE WHEN COALESCE(pa.actual_start, '') != '' AND COALESCE(pa.actual_finish, '') != '' THEN TO_DATE(pa.actual_finish, 'YYYY-MM-DD') - TO_DATE(pa.actual_start, 'YYYY-MM-DD') +1
		ELSE TO_DATE(COALESCE(NULLIF(pa.plan_finish, ''), pa.plan_start), 'YYYY-MM-DD') - TO_DATE(COALESCE(NULLIF(pa.plan_start, ''), pa.plan_finish), 'YYYY-MM-DD') +1
		END AS thismth_total_duration
		, COALESCE(NULLIF(pa.actual_finish, '')::DATE, #{reportDate}::DATE + 6) - TO_DATE(pa.actual_start, 'YYYY-MM-DD') + 1 AS thiswkl_duration
		, TO_DATE(COALESCE(NULLIF(pa.plan_finish, ''), pa.plan_start), 'YYYY-MM-DD') - TO_DATE(COALESCE(NULLIF(pa.plan_start, ''), pa.plan_finish), 'YYYY-MM-DD') +1  AS plan_total_duration
		, COALESCE(NULLIF(pa.plan_finish, '')::DATE, #{reportDate}::DATE + 6) -TO_DATE(COALESCE(NULLIF(pa.plan_start, ''), pa.plan_finish), 'YYYY-MM-DD') +1 AS plan_duration
		, (SELECT COUNT(*)
		FROM pr_weekly_report pwr
		JOIN pr_weekly_report_activity pwra ON pwr.weekly_report_id = pwra.weekly_report_id
		WHERE 1=1
		AND pwra.activity_id = pa.activity_id
		AND pwra.cntrct_chg_id = #{cntrctChgId}
		AND pwra.weekly_report_id = #{weeklyReportId}
		AND pwra.work_dt_type = 'T'
		AND pwr.dlt_yn = 'N'
		AND pwra.dlt_yn = 'N') AS chk
		FROM pr_activity pa
		LEFT JOIN pstats_tbl pst ON pa.cntrct_chg_id = pst.cntrct_chg_id
		AND pa.activity_id = pst.activity_id
		and rn = 1
		WHERE pa.cntrct_chg_id = #{cntrctChgId}
		AND COALESCE(pa.actual_start, '') != ''
		AND ((TO_DATE(COALESCE(NULLIF(pa.actual_finish, ''), TO_CHAR(NOW(), 'YYYY-MM-DD')), 'YYYY-MM-DD') BETWEEN #{reportDate}::DATE AND #{reportDate}::DATE + 6)
		OR
		(COALESCE(pa.actual_finish, '') = ''))
		AND pa.revision_id = (SELECT revision_id
		FROM pr_revision
		WHERE dlt_yn = 'N'
		AND last_revision_yn = 'Y'
		AND cntrct_chg_id = #{cntrctChgId})
		)
		SELECT DISTINCT
		array_to_string(wpt.path, ' / ') AS path_nm
		, pat.cntrct_chg_id
		, pat.revision_id
		, pat.wbs_cd
		, pat.activity_id
		, pat.activity_nm
		, TRUNC(pat.expt_cost) AS expt_cost
		, pat.plan_start
		, pat.plan_finish
		, pat.actual_start
		, pat.actual_finish
		, pat.plan_reqre_daynum
		, pat.actual_reqre_daynum
		, pat.dly_div
		, pat.pstats
		, pat.pstats_nm
		, pat.chk
		, CASE WHEN activity_kind IN ('SM', 'FN') AND (COALESCE(actual_start, '') != '' OR COALESCE(actual_finish, '') != '') THEN 100.00
		ELSE ROUND((plan_duration::NUMERIC / plan_total_duration::NUMERIC) * 100, 2)
		END AS thismth_plan_rate
		, CASE WHEN activity_kind IN ('SM', 'FN') AND (COALESCE(actual_start, '') != '' OR COALESCE(actual_finish, '') != '') THEN 100.00
		ELSE ROUND((thiswkl_duration::NUMERIC / thismth_total_duration::NUMERIC) * 100, 2)
		END AS thismth_exe_rate
		FROM pr_activity_tbl pat
		JOIN wbs_path_tbl wpt ON pat.wbs_cd = wpt.wbs_cd
		WHERE pat.chk = 0
		ORDER BY pat.wbs_cd;
	</select>

	<select id="selectWeeklyAddDelayActivityList" parameterType="input" resultType="map">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.selectWeeklyAddDelayActivityList][dhjung]  */
		WITH RECURSIVE wbs_path_tbl AS (
		SELECT wbs_cd
		, wbs_nm
		, up_wbs_cd
		, 1 AS DEPTH
		, ARRAY[wbs_nm]::varchar[] AS PATH
		, cntrct_chg_id
		FROM pr_wbs
		WHERE wbs_level = '1'
		AND cntrct_chg_id = #{cntrctChgId}
		UNION ALL
		SELECT pw.wbs_cd
		, pw.wbs_nm
		, pw.up_wbs_cd
		, wpt.depth + 1
		, wpt.path || pw.wbs_nm
		, pw.cntrct_chg_id
		FROM pr_wbs pw
		JOIN wbs_path_tbl wpt ON pw.up_wbs_cd = wpt.wbs_cd
		AND pw.cntrct_chg_id = wpt.cntrct_chg_id
		WHERE pw.dlt_yn = 'N'
		),
		pstats_tbl AS (
		SELECT cdra.cntrct_chg_id
		, cdra.wbs_cd
		, cdra.activity_id
		, cdra.pstats
		, ROW_NUMBER() OVER (PARTITION BY cdra.activity_id, cdra.cntrct_chg_id, cdra.wbs_cd ORDER BY drt.daily_report_date desc) AS rn
		FROM cw_daily_report_activity cdra
		JOIN cw_daily_report drt ON drt.daily_report_id = cdra.daily_report_id
		WHERE cdra.dlt_yn = 'N'
		AND cdra.cntrct_chg_id = #{cntrctChgId}
		AND cdra.revision_id = (SELECT revision_id
		FROM pr_revision
		WHERE dlt_yn = 'N'
		AND last_revision_yn = 'Y'
		AND cntrct_chg_id = cdra.cntrct_chg_id)
		AND drt.dlt_yn = 'N'
		AND cdra.work_dt_type = 'TD'
		AND drt.daily_report_date::DATE BETWEEN #{reportDate}::DATE AND #{reportDate}::DATE +6
		GROUP BY cdra.cntrct_chg_id, cdra.wbs_cd, cdra.activity_id, cdra.pstats, drt.daily_report_date
		),
		pr_activity_tbl AS (
		SELECT pa.cntrct_chg_id
		, pa.revision_id
		, pa.wbs_cd
		, pa.activity_id
		, pa.activity_nm
		, pa.expt_cost
		, pa.plan_start
		, pa.plan_finish
		, pa.actual_start
		, pa.actual_finish
		, CASE WHEN COALESCE(pa.plan_finish, '') != '' AND COALESCE(pa.plan_start, '') != '' THEN TO_DATE(pa.plan_finish, 'YYYY-MM-DD') - TO_DATE(pa.plan_start, 'YYYY-MM-DD') + 1
		ELSE NULL
		END AS plan_reqre_daynum
		, CASE WHEN COALESCE(pa.actual_finish, '') != '' AND COALESCE(pa.actual_start, '') != '' THEN TO_DATE(pa.actual_finish, 'YYYY-MM-DD') - TO_DATE(pa.actual_start, 'YYYY-MM-DD') + 1
		ELSE NULL
		END AS actual_reqre_daynum
		<![CDATA[
				 , CASE	WHEN COALESCE(NULLIF(pa.plan_start, '')::DATE, CURRENT_DATE) < COALESCE(NULLIF(pa.actual_start, '')::DATE, CURRENT_DATE) THEN 'ST'
				 		WHEN COALESCE(NULLIF(pa.plan_finish, '')::DATE, CURRENT_DATE) < COALESCE(NULLIF(pa.actual_finish, '')::DATE, CURRENT_DATE) THEN 'FN'
				 		ELSE ''
				   END AS dly_div
				]]>
		, pst.pstats
		, (SELECT COUNT(*)
		FROM pr_weekly_report pwr
		JOIN pr_weekly_report_activity pwra ON pwr.weekly_report_id = pwra.weekly_report_id
		WHERE 1=1
		AND pwra.activity_id = pa.activity_id
		AND pwra.cntrct_chg_id = #{cntrctChgId}
		AND pwra.weekly_report_id = #{weeklyReportId}
		AND pwra.work_dt_type = 'D'
		AND pwr.dlt_yn = 'N'
		AND pwra.dlt_yn = 'N') AS chk
		FROM pr_activity pa
		LEFT JOIN pstats_tbl pst ON pa.cntrct_chg_id = pst.cntrct_chg_id
		AND pa.activity_id = pst.activity_id
		and rn = 1
		WHERE pa.cntrct_chg_id = #{cntrctChgId}
		AND COALESCE(pa.actual_finish, '') = ''
		AND pa.revision_id = (SELECT revision_id
		FROM pr_revision
		WHERE dlt_yn = 'N'
		AND last_revision_yn = 'Y'
		AND cntrct_chg_id = #{cntrctChgId})
		)
		SELECT DISTINCT
		array_to_string(wpt.path, ' / ') AS path_nm
		, pat.*
		FROM pr_activity_tbl pat
		JOIN wbs_path_tbl wpt ON pat.wbs_cd = wpt.wbs_cd
		WHERE pat.chk = 0
		ORDER BY pat.wbs_cd;
	</select>

	<select id="selectAddNextWeekActivityList" parameterType="input" resultType="map">
		/* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.progress.weeklyreport.selectAddNextWeekActivityList][dhjung]  */
		WITH RECURSIVE wbs_path_tbl AS (
		SELECT wbs_cd
		, wbs_nm
		, up_wbs_cd
		, 1 AS DEPTH
		, ARRAY[wbs_nm]::varchar[] AS PATH
		, cntrct_chg_id
		FROM pr_wbs
		WHERE wbs_level = '1'
		AND cntrct_chg_id = #{cntrctChgId}
		UNION ALL
		SELECT pw.wbs_cd
		, pw.wbs_nm
		, pw.up_wbs_cd
		, wpt.depth + 1
		, wpt.path || pw.wbs_nm
		, pw.cntrct_chg_id
		FROM pr_wbs pw
		JOIN wbs_path_tbl wpt ON pw.up_wbs_cd = wpt.wbs_cd
		AND pw.cntrct_chg_id = wpt.cntrct_chg_id
		WHERE pw.dlt_yn = 'N'
		),
		pr_activity_tbl AS (
		SELECT pa.cntrct_chg_id
		, pa.revision_id
		, pa.wbs_cd
		, pa.activity_id
		, pa.activity_nm
		, pa.expt_cost
		, pa.plan_start
		, pa.plan_finish
		, pa.actual_start
		, CASE WHEN pa.actual_finish IS NOT NULL or pa.actual_finish != '' THEN actual_finish
		ELSE ''
		END AS actual_finish
		, CASE WHEN COALESCE(pa.plan_finish, '') != '' AND COALESCE(pa.plan_start, '') != '' THEN TO_DATE(pa.plan_finish, 'YYYY-MM-DD') - TO_DATE(pa.plan_start, 'YYYY-MM-DD') + 1
		ELSE NULL
		END AS plan_reqre_daynum
		<![CDATA[
				 , CASE	WHEN COALESCE(NULLIF(pa.plan_start, '')::DATE, CURRENT_DATE) < COALESCE(NULLIF(pa.actual_start, '')::DATE, CURRENT_DATE) THEN 'ST'
				 		WHEN COALESCE(NULLIF(pa.plan_finish, '')::DATE, CURRENT_DATE) < COALESCE(NULLIF(pa.actual_finish, '')::DATE, CURRENT_DATE) THEN 'FN'
				 		ELSE ''
				   END AS dly_div
				]]>
		, (SELECT COUNT(*)
		FROM pr_weekly_report pwr
		JOIN pr_weekly_report_activity pwra ON pwr.weekly_report_id = pwra.weekly_report_id
		WHERE 1=1
		AND pwra.activity_id = pa.activity_id
		AND pwra.cntrct_chg_id = #{cntrctChgId}
		AND pwra.weekly_report_id = #{weeklyReportId}
		AND pwra.work_dt_type = 'N'
		AND pwr.dlt_yn = 'N'
		AND pwra.dlt_yn = 'N') AS chk
		FROM pr_activity pa
		WHERE pa.cntrct_chg_id = #{cntrctChgId}
		AND COALESCE(pa.actual_finish, '') = ''
		AND pa.revision_id = (SELECT revision_id
		FROM pr_revision
		WHERE dlt_yn = 'N'
		AND last_revision_yn = 'Y'
		AND cntrct_chg_id = #{cntrctChgId})
		)
		SELECT DISTINCT
		array_to_string(wpt.path, ' / ') AS path_nm
		, pat.*
		FROM pr_activity_tbl pat
		JOIN wbs_path_tbl wpt ON pat.wbs_cd = wpt.wbs_cd
		WHERE pat.chk = 0
		ORDER BY pat.wbs_cd;
	</select>

</mapper>