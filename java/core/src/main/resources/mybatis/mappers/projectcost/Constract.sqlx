<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.constract">

    <select id="selectContractChangeList" parameterType="constractformTypetSelectInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.selectContractChangeList][mjkang]  */
		WITH cntrct_dt AS
			(
				SELECT cntrct_chg_no
					 , rgst_dt
					 , last_chg_yn
					 , cntrct_chg_id
					 , cntrct_amt
				  FROM cn_contract_change
			  ORDER BY last_chg_yn desc, cntrct_chg_no desc
			)
				SELECT cntrct_chg_no
					 , rgst_dt
					 , last_chg_yn
					 , CASE WHEN last_chg_yn='Y' THEN ' 최종' ELSE '' END AS txt
					 , to_char(rgst_dt, 'YYYY-MM-DD') AS dt
					 , cntrct_chg_id
					 , COALESCE(cntrct_amt, cntrct_amt, 0) AS cntrct_amt
					 , (SELECT SUM(mtrl_uprc) + SUM(lbr_uprc) + SUM(gnrlexpns_uprc) AS tot
					 	  FROM ct_cbs_detail
						 WHERE cntrct_chg_id = cdt.cntrct_chg_id) AS tot
				  FROM cntrct_dt cdt
				 WHERE 1 = 1
					 ;
    </select>

    <select id="selectCbsList" parameterType="constractformTypetSelectInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.selectCbsList][mjkang]  */
		WITH tree AS
			(
				SELECT cntrct_chg_id
					 , cnstty_cd
					 , cnstty_sn
					 , up_cnstty_cd
					 , cnstty_lvl_num
					 , unit_cnst_type
					 , cnstty_nm
				  FROM ct_cbs
				 WHERE cntrct_chg_id = #{chgId}
			)
				SELECT cntrct_chg_id
					 , cnstty_sn
     				 , unit_cnst_type || cnstty_cd AS id
     				 , CASE WHEN cnstty_lvl_num='1' THEN '#' ELSE unit_cnst_type || up_cnstty_cd END AS parent
     				 , CASE WHEN cnstty_lvl_num='1' THEN '* ' || cnstty_nm ELSE 'ㄴ ' || cnstty_nm END AS text
  				  FROM tree
  					 ;
    </select>

    <select id="selectCbsDetailList" parameterType="constractformTypetSelectInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.selectCbsDetailList][mjkang]  */
        WITH chgData AS (
					SELECT * 
						 , (mtrl_uprc * rsce_qty) AS mtrl_cost
						 , (lbr_uprc * rsce_qty) AS lbr_cost
						 , (gnrlexpns_uprc * rsce_qty) AS gnrlexpns_cost
						 , (mtrl_uprc+lbr_uprc+gnrlexpns_uprc) AS cntrct_total
						 , ((mtrl_uprc+lbr_uprc+gnrlexpns_uprc) * rsce_qty) AS cntrct_total_cost
					     , 9999 AS sp_cost
					  FROM ct_cbs_detail
					 WHERE 1 = 1
					   AND cnstty_sn IN 
			               <foreach item="cnsttySn" collection="cnsttySnList" separator="," open="(" close=")">
			                  #{cnsttySn}
			               </foreach>
					   AND cntrct_chg_id = #{chgId}
		),
		cntrctData AS (
					SELECT * 
						 , (mtrl_uprc * rsce_qty) AS mtrl_cost
						 , (lbr_uprc * rsce_qty) AS lbr_cost
						 , (gnrlexpns_uprc * rsce_qty) AS gnrlexpns_cost
						 , (mtrl_uprc+lbr_uprc+gnrlexpns_uprc) AS cntrct_total
						 , ((mtrl_uprc+lbr_uprc+gnrlexpns_uprc) * rsce_qty) AS cntrct_total_cost
					     , 9999 AS sp_cost
					  FROM ct_cbs_detail
					 WHERE 1 = 1
					   AND cnstty_sn IN 
			               <foreach item="cnsttySn" collection="cnsttySnList" separator="," open="(" close=")">
			                  #{cnsttySn}
			               </foreach>
					   AND cntrct_chg_id = #{cntrctId}
		)
		SELECT chg.rsce_cd
			 , chg.dtl_cnstty_nm
			 , chg.spec_nm
			 , chg.unit
			 , chg.rsce_qty AS chg_rsce_qty
			 , COALESCE(cnt.rsce_qty, cnt.rsce_qty, 0) AS cnt_rsce_qty
			 , chg.mtrl_uprc AS chg_mtrl_uprc
			 , COALESCE(cnt.mtrl_uprc, cnt.mtrl_uprc, 0) AS cnt_mtrl_uprc
			 , (chg.mtrl_uprc * chg.rsce_qty) AS chg_mtrl_cost
			 , (COALESCE(cnt.mtrl_uprc, cnt.mtrl_uprc, 0) * COALESCE(cnt.rsce_qty, cnt.rsce_qty, 0)) AS cnt_mtrl_cost
			 , chg.lbr_uprc AS chg_lbr_uprc
			 , COALESCE(cnt.lbr_uprc, cnt.lbr_uprc, 0) AS cnt_lbr_uprc
			 , (chg.lbr_uprc * chg.rsce_qty) AS chg_lbr_cost
			 , (COALESCE(cnt.lbr_uprc, cnt.lbr_uprc, 0) * COALESCE(cnt.rsce_qty, cnt.rsce_qty, 0)) AS cnt_lbr_cost
			 , chg.gnrlexpns_uprc AS chg_gnrlexpns_uprc
			 , COALESCE(cnt.gnrlexpns_uprc, cnt.gnrlexpns_uprc, 0) AS cnt_gnrlexpns_uprc
			 , (chg.gnrlexpns_uprc * chg.rsce_qty) AS chg_gnrlexpns_cost
			 , (COALESCE(cnt.gnrlexpns_uprc, cnt.gnrlexpns_uprc, 0) * COALESCE(cnt.rsce_qty, cnt.rsce_qty, 0)) AS cnt_gnrlexpns_cost
			 , (chg.mtrl_uprc+chg.lbr_uprc+chg.gnrlexpns_uprc) AS chg_uprc_total
			 , (COALESCE(cnt.mtrl_uprc, cnt.mtrl_uprc, 0)+COALESCE(cnt.lbr_uprc, cnt.lbr_uprc, 0)+COALESCE(cnt.gnrlexpns_uprc, cnt.gnrlexpns_uprc, 0)) AS cnt_uprc_total
			 , ((chg.mtrl_uprc+chg.lbr_uprc+chg.gnrlexpns_uprc) * chg.rsce_qty) AS chg_cost
			 , ((COALESCE(cnt.mtrl_uprc, cnt.mtrl_uprc, 0)+COALESCE(cnt.lbr_uprc, cnt.lbr_uprc, 0)+COALESCE(cnt.gnrlexpns_uprc, cnt.gnrlexpns_uprc, 0)) * COALESCE(cnt.rsce_qty, cnt.rsce_qty, 0)) AS cnt_cost
			 , ((chg.mtrl_uprc+chg.lbr_uprc+chg.gnrlexpns_uprc) * chg.rsce_qty) - ((COALESCE(cnt.mtrl_uprc, cnt.mtrl_uprc, 0)+COALESCE(cnt.lbr_uprc, cnt.lbr_uprc, 0)+COALESCE(cnt.gnrlexpns_uprc, cnt.gnrlexpns_uprc, 0)) * COALESCE(cnt.rsce_qty, cnt.rsce_qty, 0)) AS sp_cost
		  FROM chgData chg
	 LEFT JOIN cntrctData cnt 
	 	 	ON chg.dtl_cnstty_sn = cnt.dtl_cnstty_sn 
	 	 WHERE (chg.rsce_cd LIKE '%' || #{searchText} || '%') OR (chg.dtl_cnstty_nm LIKE '%' || #{searchText} || '%') OR (chg.spec_nm LIKE '%' || #{searchText} || '%')
    </select>
</mapper>