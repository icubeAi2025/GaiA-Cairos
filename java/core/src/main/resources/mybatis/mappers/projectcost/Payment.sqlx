<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.Payment">


    <update id="updateEurecaSendYn">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.Payment.updateEurecaSendYn][bjkim]  */
        UPDATE cw_pay_mng
        SET eureca_send_yn = #{eurecaSendYn}
        WHERE cntrct_no = #{cntrctNo}
        AND payprce_sno = #{payprceSno}
    </update>

    <select id="getCntrctChgInfo" parameterType="paymentformTypeSelectInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.Payment.getCntrctChgInfo][mjkang]  */
        SELECT CNTRCT_NO, CNTRCT_CHG_ID, CNTRCT_CHG_NO
        FROM CN_CONTRACT_CHANGE
        WHERE CNTRCT_NO = #{cntrctNo}
        AND DLT_YN = 'N'
        AND LAST_CHG_YN = 'Y'
    </select>

    <select id="selectPaymentList" parameterType="paymentformTypeSelectInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.Payment.selectPaymentList][mjkang]  */
		SELECT payprce_sno
			 , payprce_tmnum
	         , payprce_ym
	         , thtm_acom_amt
	         , ppaymny_caclt_amt
	  	     , thtm_paymnt_amt
	 	     , remndr_amt
	 	     , COALESCE(pay_apprvl_date, '') AS pay_apprvl_date
	  	     , COALESCE(inspct_date, '') AS inspct_date
	 	     , COALESCE(paymnt_date, '') AS paymnt_date 
	  	     , CAST(apprvl_req_dt AS date) AS apprvl_req_dt
	 	     , apprvl_req_id 
	 	     , (SELECT usr_nm FROM sm_user_info WHERE usr_id = apprvl_req_id) AS apprvl_req_nm
	  	     , CAST(apprvl_dt AS date) AS apprvl_dt
		     , apprvl_id 
	 	     , (SELECT usr_nm FROM sm_user_info WHERE usr_id = apprvl_id) AS apprvl_nm
	  	     , apprvl_stats 
	  	     , (SELECT cmn_cd_nm_krn FROM sm_com_code scc WHERE scc.cmn_grp_cd = 'f5a2c6ff-458b-8ef4-7219-12b06087a70f' AND scc.cmn_cd = apprvl_stats) AS apprvl_stats_txt
	 	     , * 
	 	  FROM cw_pay_mng
	 	 WHERE cntrct_no = #{cntrctNo}
	 	   AND dlt_yn = 'N'
	  ORDER BY payprce_sno desc
	 	     ;
    </select>

    <select id="selectPaymentDetail" parameterType="paymentformTypeSelectInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.Payment.selectPaymentDetail][mjkang]  */
        SELECT payprce_sno
	         , payprce_ym
	         , thtm_acom_amt
	         , ppaymny_caclt_amt
	  	     , thtm_paymnt_amt
	 	     , remndr_amt
	 	     , COALESCE(pay_apprvl_date, '') AS pay_apprvl_date
	  	     , COALESCE(inspct_date, '') AS inspct_date
	 	     , COALESCE(paymnt_date, '') AS paymnt_date 
	  	     , apprvl_req_dt
	 	     , apprvl_req_id 
	 	     , apprvl_dt 
		     , apprvl_id 
	  	     , apprvl_stats 
	  	     , (SELECT cmn_cd_nm_krn FROM sm_com_code scc WHERE scc.cmn_grp_cd = 'f5a2c6ff-458b-8ef4-7219-12b06087a70f' AND scc.cmn_cd = apprvl_stats) AS apprvl_stats_txt
	 	     , * 
	 	  FROM cw_pay_mng
	 	  <where>
	 	    <if test=' cntrctNo != null and !"".equals(cntrctNo) '>
                AND cntrct_no = #{cntrctNo}
                AND payprce_sno = CAST(#{payprceSno} AS INTEGER)
	 	    </if>
	 	    <if test=' cntrctChgId != null and !"".equals(cntrctChgId) '>
                AND cntrct_chg_id = #{cntrctChgId}
                AND payprce_tmnum = #{payprceSno, jdbcType=INTEGER}
	 	    </if>
	 	  </where>
    </select>
    
    <select id="selectPayprceTmnum" parameterType="paymentformTypeSelectInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.Payment.selectPaymentDetail][mjkang]  */
        SELECT (payprce_tmnum+1) as payprce_tmnum
	 	  FROM cw_pay_mng
	 	 WHERE cntrct_no = #{cntrctNo}
	 	   AND dlt_yn = 'N'
	  ORDER BY payprce_tmnum DESC
	 	 LIMIT 1
    </select>
    
    <select id="selectPaymentCbsList" parameterType="paymentformTypeSelectInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.Payment.selectPaymentCbsList][mjkang]*/
    WITH RECURSIVE CTE AS (
        SELECT (unit_cnst_type || cnstty_cd) as id
                , cnstty_nm as text
                , (unit_cnst_type || up_cnstty_cd) as parent
                , cnstty_sn
                , unit_cnst_type
                , 1 AS level
        FROM ct_cbs cc
        WHERE cntrct_chg_id = #{cntrctChgId}
        AND cnstty_lvl_num = 1
        UNION ALL
        SELECT (P.unit_cnst_type || P.cnstty_cd) AS id
                , P.cnstty_nm AS text
                , (P.unit_cnst_type || P.up_cnstty_cd) AS parent
                , P.cnstty_sn
                , P.unit_cnst_type
                , 1 + LEVEL AS LEVEL
        FROM ct_cbs P
        INNER JOIN CTE C ON (P.unit_cnst_type || P.up_cnstty_cd) = C.id -- 아래에서 위로 올라가면서 조회하므로 반대로 사용함
        WHERE P.cntrct_chg_id = #{cntrctChgId}
    )
        SELECT id
               , CASE WHEN parent=unit_cnst_type THEN '#' ELSE parent END AS parent
               , text
               , cnstty_sn
               , level
               , 'fa-solid fa-caret-right' AS icons
               , json_build_object('cnstty_sn', cnstty_sn, 'unit_cnst_type', unit_cnst_type) AS original
        FROM CTE
        ORDER BY cnstty_sn
    </select>
    <!--
        20250217 디버그 필요시 추가
        , (COALESCE(ccd.mtrl_uprc, 0) * COALESCE(ccd.rsce_qty, 0) ) MTRL_UPRC
        , (COALESCE(ccd.lbr_uprc, 0) * COALESCE(ccd.rsce_qty, 0) ) LBR_UPRC
        , (COALESCE(ccd.gnrlexpns_uprc, 0) * COALESCE(ccd.rsce_qty, 0) ) GNRLEXPNS_UPRC
    -->
    <select id="selectPaymentHistoryList" parameterType="paymentformTypeSelectInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.Payment.selectPaymentHistory][mjkang]  */
        WITH dt AS (
	        SELECT ccd.rsce_cd 
			     , ccd.cnstty_sn 
				 , cpd.dtl_cnstty_nm
				 , ccd.spec_nm
				 , ccd.unit
				 , ROUND(ccd.rsce_qty, 2) AS cntrct_qty
				 , ROUND(COALESCE(ccd.mtrl_uprc, 0) + COALESCE(ccd.lbr_uprc, 0) + COALESCE(ccd.gnrlexpns_uprc, 0)) as cntrct_uprc
				 , (
                    TRUNC(COALESCE(ccd.mtrl_uprc, 0) * COALESCE(ccd.rsce_qty, 0) )
                    + TRUNC(COALESCE(ccd.lbr_uprc, 0) * COALESCE(ccd.rsce_qty, 0) )
                    + TRUNC(COALESCE(ccd.gnrlexpns_uprc, 0) * COALESCE(ccd.rsce_qty, 0) )
                 ) AS cntrct_cost
				 , ROUND(cpd.prev_acmtl_qty, 2) AS prev_qty
				 , cpd.prev_acmtl_amt AS prev_cost
				 , ROUND(cpd.thtm_acom_qty, 2) AS thtm_qty
				 , cpd.thtm_acom_amt AS thtm_cost
				 , (ccd.rsce_qty - ROUND(cpd.prev_acmtl_qty, 2) - ROUND(cpd.thtm_acom_qty, 2)) AS remndr_qty
				 , (
                     (
                        TRUNC(COALESCE(ccd.mtrl_uprc, 0) * COALESCE(ccd.rsce_qty, 0) )
                        + TRUNC(COALESCE(ccd.lbr_uprc, 0) * COALESCE(ccd.rsce_qty, 0) )
                        + TRUNC(COALESCE(ccd.gnrlexpns_uprc, 0) * COALESCE(ccd.rsce_qty, 0) )
                     )
                    - cpd.prev_acmtl_amt - cpd.thtm_acom_amt
                 ) AS remndr_cost
			  FROM cw_pay_detail cpd 
		 LEFT JOIN ct_cbs_detail ccd ON cpd.rsce_cd = ccd.rsce_cd 
               AND cpd.dtl_cnstty_sn = ccd.dtl_cnstty_sn
			 WHERE 1=1
			   AND cpd.cntrct_no = #{cntrctNo} 
			   AND cpd.payprce_sno = #{payprceSno}
			   AND ccd.cntrct_chg_id = #{cntrctChgId}
			<if test="cnsttySnList!=null and cnsttySnList.size!=0"> 
			   AND ccd.cnstty_sn IN 
	               <foreach item="cnsttySn" collection="cnsttySnList" separator="," open="(" close=")">
	                  #{cnsttySn}
	               </foreach>
		    </if>
	    )
	    SELECT *
	      FROM dt
	     WHERE (LOWER(dtl_cnstty_nm) LIKE LOWER('%' || #{searchText} || '%')) 
	        OR (LOWER(spec_nm) LIKE LOWER('%' || #{searchText} || '%')) 
	        OR (LOWER(unit) LIKE LOWER('%' || #{searchText} || '%'))
    </select>

    <select id="selectPaymentHistoryListForEurecaTemp" parameterType="paymentHistorySelectInput" resultType="paymentHistory">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.Payment.selectPaymentHistoryListForEurecaTemp][bjkim]  */
        select dtl_cnstty_sn as dtls_sn, thtm_acom_qty
        from cw_pay_detail cpd
        where cntrct_no = #{cntrctNo}
        and payprce_sno = #{payprceSno}
        ORDER BY cpd.dtl_cnstty_sn
    </select>

    <select id="selectPaymentHistoryListForEureca" parameterType="paymentHistorySelectInput" resultType="paymentHistory">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.Payment.selectPaymentHistoryListForEureca][bjkim]  */
        SELECT
            ccd.dtl_cnstty_sn AS dtls_sn /* 내역식별번호 */
             , COALESCE(this_month.thtm_acom_qty, 0) AS thtm_acom_qty /* 금회기성수량 */
        FROM ct_cbs_detail ccd
        LEFT JOIN (
            /* 금월 집계 */
            SELECT cdrq.dtl_cnstty_sn
                , cdrq.rsce_cd
                , sum(cdrq.work_qty) AS thtm_acom_qty
                , cdrq.cntrct_chg_id
            FROM cw_daily_report_qdb cdrq
            INNER JOIN ct_cbs_detail ccd
            ON cdrq.dtl_cnstty_sn = ccd.dtl_cnstty_sn
            AND ccd.cntrct_chg_id = cdrq.cntrct_chg_id
            WHERE 1 = 1
            AND cdrq.cntrct_no = #{cntrctNo}
            AND cdrq.daily_report_id IN (
                SELECT daily_report_id
                FROM cw_daily_report
                WHERE cntrct_no = #{cntrctNo}
                AND daily_report_date LIKE TO_CHAR(TO_TIMESTAMP(#{dailyReportDate}, 'YYYYMM'), 'YYYY-MM') || '%' /*기성년월*/
                AND dlt_yn = 'N'
                AND apprvl_stats = 'A'
            )
            AND cdrq.dlt_yn = 'N'
            GROUP BY cdrq.dtl_cnstty_sn
                , cdrq.rsce_cd
                , cdrq.cntrct_chg_id
        ) AS this_month
            ON ccd.cntrct_chg_id = this_month.cntrct_chg_id
            AND ccd.rsce_cd = this_month.rsce_cd
            AND ccd.dtl_cnstty_sn = this_month.dtl_cnstty_sn
        WHERE ccd.cntrct_chg_id = (
            SELECT cntrct_chg_id
            FROM cn_contract_change ccc
            WHERE cntrct_no = #{cntrctNo}
            AND last_chg_yn ='Y'
        )
        ORDER BY ccd.dsply_ordr
    </select>

    <select id="selectPaymentCostCalculatorList" parameterType="contractformTypetSelectInput" resultType="map">
	    WITH RECURSIVE CODE_LIST(cst_calc_it_cd, cst_calc_it_nm, up_cst_calc_it_cd, cst_calc_mthd_nm, DEPTH, PATH, CYCLE, dsply_ordr, ovrhdcst_pt, drcnstcost_cmpr_pt, thtm_cost_am, prev_cost_am, ori_cost_am, remndr_am) AS (
			SELECT A.cst_calc_it_cd,
				A.cst_calc_it_nm,
				A.up_cst_calc_it_cd,
				A.cst_calc_mthd_nm,
				1,
				ARRAY[A.cst_calc_it_cd::text],
				false,
				A.dsply_ordr,
				A.ovrhdcst_pt,
				A.drcnstcost_cmpr_pt,
				A.thtm_cost_am,
				A.prev_cost_am,
				(SELECT cost_am 
					FROM ct_cost_calculator ori 
					WHERE ori.cntrct_chg_id = #{cntrctChgId} 
					AND ori.cst_calc_it_cd = A.cst_calc_it_cd) AS ori_cost_am,
				A.remndr_am
			FROM cw_pay_cost_calculator A
			WHERE A.up_cst_calc_it_cd = '' 
			AND A.cntrct_no = #{cntrctNo} 
			AND A.payprce_sno = #{payprceSno}
			UNION ALL
			SELECT A.cst_calc_it_cd,
				A.cst_calc_it_nm,
				A.up_cst_calc_it_cd,
				A.cst_calc_mthd_nm,
				B.DEPTH + 1,
				ARRAY_APPEND(B.PATH, A.cst_calc_it_cd::text),
				A.cst_calc_it_cd = ANY(B.PATH),
				A.dsply_ordr,
				A.ovrhdcst_pt,
				A.drcnstcost_cmpr_pt,
				A.thtm_cost_am,
				A.prev_cost_am,
				(SELECT cost_am 
					FROM ct_cost_calculator ori 
					WHERE A.up_cst_calc_it_cd = B.cst_calc_it_cd 
					AND ori.cntrct_chg_id = #{cntrctChgId} 
					AND ori.cst_calc_it_cd = A.cst_calc_it_cd) AS ori_cost_am,
				A.remndr_am
			FROM cw_pay_cost_calculator A, CODE_LIST B 
			WHERE A.up_cst_calc_it_cd = B.cst_calc_it_cd
			AND A.cntrct_no = #{cntrctNo} 
			AND A.payprce_sno = #{payprceSno}
			AND NOT CYCLE
		)
		SELECT cst_calc_it_cd,
			LPAD('', DEPTH) || cst_calc_it_nm AS cst_calc_it_nm,
			up_cst_calc_it_cd,
			LPAD('', DEPTH) || cst_calc_mthd_nm AS cst_calc_mthd_nm,
			DEPTH AS A_MENU_LEVEL,
			PATH,
			dsply_ordr,
			COALESCE(ovrhdcst_pt, 0) AS ovrhdcst_pt,
			COALESCE(drcnstcost_cmpr_pt, 0) AS drcnstcost_cmpr_pt,
			COALESCE(thtm_cost_am, 0) AS thtm_cost_am,
			(COALESCE(prev_cost_am, 0) + COALESCE(thtm_cost_am, 0)) AS total_cost_am,
			COALESCE(ori_cost_am, 0) AS ori_cost_am,
			COALESCE(remndr_am, 0) AS remndr_am
		FROM CODE_LIST
		ORDER BY dsply_ordr, PATH;
    </select>    
    
    <select id="selectPaymentHistoryRecountList" parameterType="paymentformTypeSelectInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.Payment.selectPaymentHistoryRecountList][mjkang]  */
        WITH dt AS (
	        SELECT ccd.rsce_cd 
			     , ccd.cnstty_sn 
				 , cpd.dtl_cnstty_nm
				 , ccd.spec_nm
				 , ccd.unit
				 , ROUND(ccd.rsce_qty, 2) AS cntrct_qty
                 , ROUND(COALESCE(ccd.mtrl_uprc, 0) + COALESCE(ccd.lbr_uprc, 0) + COALESCE(ccd.gnrlexpns_uprc, 0)) as cntrct_uprc
                 , (
                     TRUNC(COALESCE(ccd.mtrl_uprc, 0) * COALESCE(ccd.rsce_qty, 0) )
                     + TRUNC(COALESCE(ccd.lbr_uprc, 0) * COALESCE(ccd.rsce_qty, 0) )
                     + TRUNC(COALESCE(ccd.gnrlexpns_uprc, 0) * COALESCE(ccd.rsce_qty, 0) )
                 ) AS cntrct_cost
                 , ROUND(cpd.prev_acmtl_qty, 2) AS prev_qty
				 , cpd.prev_acmtl_amt AS prev_cost
				 , ROUND(cpd.thtm_acom_qty, 2) AS thtm_acom_qty
				 , ROUND(cpd.thtm_acom_qty, 2) + ROUND(cpd.prev_acmtl_qty, 2) AS thtm_tot_qty
				 , cpd.thtm_acom_amt + cpd.prev_acmtl_amt AS thtm_tot_cost
				 , cpd.thtm_acom_amt AS thtm_cost
				 , (ccd.rsce_qty - ROUND(cpd.prev_acmtl_qty, 2) - ROUND(cpd.thtm_acom_qty, 2)) AS remndr_qty
                 , (
                     (
                        TRUNC(COALESCE(ccd.mtrl_uprc, 0) * COALESCE(ccd.rsce_qty, 0) )
                         + TRUNC(COALESCE(ccd.lbr_uprc, 0) * COALESCE(ccd.rsce_qty, 0) )
                         + TRUNC(COALESCE(ccd.gnrlexpns_uprc, 0) * COALESCE(ccd.rsce_qty, 0) )
                     )
                    - cpd.prev_acmtl_amt - cpd.thtm_acom_amt
                 ) AS remndr_cost
				 , cpd.cntrct_no
				 , cpd.payprce_sno
				 , cpd.dtl_cnstty_sn
				 , ccd.dsply_ordr
			  FROM cw_pay_detail cpd 
		 LEFT JOIN ct_cbs_detail ccd ON cpd.rsce_cd = ccd.rsce_cd 
               AND cpd.dtl_cnstty_sn = ccd.dtl_cnstty_sn
			 WHERE 1=1
			   AND cpd.cntrct_no = #{cntrctNo} 
			   AND cpd.payprce_sno = #{payprceSno}
			   AND ccd.cntrct_chg_id = #{cntrctChgId}
	    )
	    SELECT *
	      FROM dt
	     WHERE (LOWER(rsce_cd) LIKE LOWER('%' || #{searchText} || '%')) 
	        OR (LOWER(dtl_cnstty_nm) LIKE LOWER('%' || #{searchText} || '%')) 
	        OR (LOWER(spec_nm) LIKE LOWER('%' || #{searchText} || '%')) 
	        OR (LOWER(unit) LIKE LOWER('%' || #{searchText} || '%'))
	  ORDER BY dsply_ordr
    </select>
    
    
    <select id="selectPaymentHistoryNewList" parameterType="hashMap" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.Payment.selectPaymentHistoryNewList][mjkang]  */
        SELECT ccd.dtl_cnstty_sn
			 , ccd.dtl_cnstty_nm 
			 , ccd.spec_nm 
			 , ccd.unit 
			 , ccd.rsce_tp_cd 
			 , ccd.rsce_cd
			 , ROUND(ccd.rsce_qty, 2) AS cntrct_qty
			 , COALESCE(this_month.thtm_acom_qty, 0) AS thtm_acom_qty
			 , COALESCE(this_month.thtm_acom_qty * (ccd.mtrl_uprc +ccd.lbr_uprc +ccd.gnrlexpns_uprc), 0) AS thtm_acom_amt
			 , COALESCE(prev_month.thtm_acom_qty, 0) + COALESCE(prev_month.prev_acmtl_qty, 0) AS prev_qty
			 , COALESCE(prev_month.thtm_acom_amt, 0) + COALESCE(prev_month.prev_acmtl_amt, 0) AS prev_acmtl_amt
			 , COALESCE(this_month.thtm_acom_qty * (ccd.mtrl_uprc +ccd.lbr_uprc +ccd.gnrlexpns_uprc), 0) + COALESCE(prev_month.thtm_acom_qty + prev_month.prev_acmtl_qty, 0) AS thtm_tot_qty
             , ROUND(COALESCE(ccd.mtrl_uprc, 0) + COALESCE(ccd.lbr_uprc, 0) + COALESCE(ccd.gnrlexpns_uprc, 0)) as cntrct_uprc
			 , COALESCE(this_month.thtm_acom_qty * (ccd.mtrl_uprc +ccd.lbr_uprc +ccd.gnrlexpns_uprc), 0) + COALESCE(prev_month.thtm_acom_amt + prev_month.prev_acmtl_amt, 0) as thtm_tot_cost
		  -- , ccd.cntrct_chg_id  
			 , 'N' as dlt_yn 
			 , #{cntrctNo} AS cntrct_no
			 , #{payprceSno} AS payprce_sno
		  FROM ct_cbs_detail ccd
     LEFT JOIN /*금월 집계*/
		 	   (SELECT cdrq.dtl_cnstty_sn
		  			 , cdrq.rsce_cd  
		  	 		 , sum(cdrq.work_qty) AS thtm_acom_qty	
		  	 		 , cdrq.cntrct_chg_id 
			 	  FROM cw_daily_report_qdb cdrq
			INNER JOIN ct_cbs_detail ccd 
			        ON cdrq.dtl_cnstty_sn = ccd.dtl_cnstty_sn 
			       AND ccd.cntrct_chg_id = cdrq.cntrct_chg_id 
			     WHERE 1 = 1
				   AND cdrq.cntrct_no = #{cntrctNo}
				   AND cdrq.daily_report_id IN (SELECT daily_report_id 
				                                  FROM cw_daily_report 
				   								 WHERE cntrct_no = #{cntrctNo}
				   								   AND daily_report_date LIKE #{dailyReportDate} || '%' /*기성년월*/
				   								   AND dlt_yn = 'N'
				   								   AND apprvl_stats = 'A')
                   AND cdrq.dlt_yn = 'N' 
	  		  GROUP BY cdrq.dtl_cnstty_sn
			         , cdrq.rsce_cd 
                     , cdrq.cntrct_chg_id
                ) AS this_month
		    ON ccd.cntrct_chg_id = this_month.cntrct_chg_id 
		   AND ccd.rsce_cd = this_month.rsce_cd 
		   AND ccd.dtl_cnstty_sn = this_month.dtl_cnstty_sn
	 LEFT JOIN /* 전월 누계*/
			   (SELECT * 
		   		  FROM cw_pay_detail cpd
			  	 WHERE exists (SELECT 1 
			  	                 FROM cw_pay_mng cpm 
			  	                WHERE cpm.cntrct_no = #{cntrctNo}
			  	                  AND cpm.payprce_ym = #{payprceYm}
			  	                  AND dlt_yn = 'N' 
			  	                  AND cpd.cntrct_no = cpm.cntrct_no 
			  	                  AND cpd.payprce_sno= cpm.payprce_sno)
			   ) AS prev_month
		    ON ccd.rsce_cd = prev_month.rsce_cd 
		   AND ccd.dtl_cnstty_nm = prev_month.dtl_cnstty_nm
	     WHERE ccd.cntrct_chg_id = (SELECT cntrct_chg_id 
	                                  FROM cn_contract_change ccc 
	                                 WHERE cntrct_no = #{cntrctNo}
	                                   AND last_chg_yn ='Y')
	  ORDER BY ccd.dsply_ordr ;
    </select>


    <insert id="addHistoryAuto" parameterType="hashMap">
    	INSERT INTO gaia_cmis.cw_pay_detail
		(cntrct_no, payprce_sno, dtl_cnstty_sn, rsce_tp_cd, rsce_cd, dtl_cnstty_nm, thtm_acom_qty, thtm_acom_amt, prev_acmtl_qty, prev_acmtl_amt, dlt_yn, rgst_dt, rgstr_id, chg_dt, chg_id)
	        SELECT #{cntrctNo}
	             , #{payprceSno}
	             , ccd.dtl_cnstty_sn
				 , ccd.rsce_tp_cd 
				 , ccd.rsce_cd
				 , ccd.dtl_cnstty_nm 
				 , COALESCE(this_month.thtm_acom_qty, 0) AS thtm_acom_qty
				 , COALESCE(this_month.thtm_acom_qty * (ccd.mtrl_uprc +ccd.lbr_uprc +ccd.gnrlexpns_uprc), 0) AS thtm_acom_amt
				 , COALESCE(prev_month.thtm_acom_qty, 0) + COALESCE(prev_month.prev_acmtl_qty, 0) AS prev_qty
				 , COALESCE(prev_month.thtm_acom_amt, 0) + COALESCE(prev_month.prev_acmtl_amt, 0) AS prev_acmtl_amt
				 , 'N'
			     , NOW()
			     , #{usrId}
			     , NOW()
			     , #{usrId}
			  FROM ct_cbs_detail ccd
	     LEFT JOIN /*금월 집계*/
			 	   (SELECT cdrq.dtl_cnstty_sn
			  			 , cdrq.rsce_cd  
			  	 		 , sum(cdrq.work_qty) AS thtm_acom_qty	
			  	 		 , cdrq.cntrct_chg_id 
				 	  FROM cw_daily_report_qdb cdrq
				INNER JOIN ct_cbs_detail ccd 
				        ON cdrq.dtl_cnstty_sn = ccd.dtl_cnstty_sn 
				       AND ccd.cntrct_chg_id = cdrq.cntrct_chg_id 
				     WHERE 1 = 1
					   AND cdrq.cntrct_no = #{cntrctNo}
					   AND cdrq.daily_report_id IN (SELECT daily_report_id 
					                                  FROM cw_daily_report 
					   								 WHERE cntrct_no = #{cntrctNo}
					   								   AND daily_report_date LIKE #{dailyReportDate} || '%' /*기성년월*/
					   								   AND dlt_yn = 'N'
					   								   AND apprvl_stats = 'A')
	                   AND cdrq.dlt_yn = 'N' 
		  		  GROUP BY cdrq.dtl_cnstty_sn
				         , cdrq.rsce_cd 
	                     , cdrq.cntrct_chg_id
	                ) AS this_month
			    ON ccd.cntrct_chg_id = this_month.cntrct_chg_id 
			   AND ccd.rsce_cd = this_month.rsce_cd 
			   AND ccd.dtl_cnstty_sn = this_month.dtl_cnstty_sn
		 LEFT JOIN /* 전월 누계*/
				   (SELECT * 
			   		  FROM cw_pay_detail cpd
				  	 WHERE exists (SELECT 1 
				  	                 FROM cw_pay_mng cpm 
				  	                WHERE cpm.cntrct_no = #{cntrctNo}
				  	                  AND cpm.payprce_ym = #{payprceYm}
				  	                  AND dlt_yn = 'N' 
				  	                  AND cpd.cntrct_no = cpm.cntrct_no 
				  	                  AND cpd.payprce_sno= cpm.payprce_sno)
				   ) AS prev_month
			    ON ccd.rsce_cd = prev_month.rsce_cd 
			   AND ccd.dtl_cnstty_nm = prev_month.dtl_cnstty_nm
		     WHERE ccd.cntrct_chg_id = (SELECT cntrct_chg_id 
		                                  FROM cn_contract_change ccc 
		                                 WHERE cntrct_no = #{cntrctNo}
		                                   AND last_chg_yn ='Y')
		  ORDER BY ccd.dsply_ordr ;
    </insert>

    <insert id="insertPaymentList">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.Payment.insertPaymentList][bjkim]  */
    	INSERT INTO gaia_cmis.cw_pay_detail (
		    cntrct_no
		    , payprce_sno
		    , dtl_cnstty_sn
		    , rsce_tp_cd
		    , rsce_cd
		    , dtl_cnstty_nm
		    , thtm_acom_qty
		    , thtm_acom_amt
		    , dlt_yn
		    , rgst_dt
		    , rgstr_id
		    , chg_dt
		    , chg_id
		)
		VALUES
        <foreach collection="payments" item="payment" separator=",">
        (
            #{cntrctNo}
            , #{payprceSno}
            , #{payment.dtlsSn}
            , #{payment.rsceTpCd}
            , #{payment.rsceCd}
            , #{payment.dtlCnsttyNm}
            , #{payment.thtmAcomQty}
            , #{payment.thtmAcomAmt}
            , 'N'
            , now()
            , #{usrId}
            , now()
            , #{usrId}
        )
        </foreach>
        ON CONFLICT (cntrct_no, payprce_sno, dtl_cnstty_sn)
        DO UPDATE SET
            rsce_tp_cd      = EXCLUDED.rsce_tp_cd,
            rsce_cd         = EXCLUDED.rsce_cd,
            dtl_cnstty_nm   = EXCLUDED.dtl_cnstty_nm,
            thtm_acom_qty   = EXCLUDED.thtm_acom_qty,
            thtm_acom_amt   = EXCLUDED.thtm_acom_amt,
            chg_dt          = now(),
            chg_id          = EXCLUDED.chg_id
    </insert>

    <delete id="deletePaymentList">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.Payment.deletePaymentList][bjkim]  */
        DELETE
        FROM gaia_cmis.cw_pay_detail
        WHERE cntrct_no = #{cntrctNo}
        AND payprce_sno = #{payprceSno}
    </delete>

    <insert id="insertPaymentCostList">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.Payment.insertPaymentCostList][bjkim]  */
    	INSERT INTO gaia_cmis.cw_pay_cost_calculator (
		    cntrct_no
            , payprce_sno
            , cst_calc_it_cd
            , up_cst_calc_it_cd
            , dsply_ordr
            , cst_calc_it_nm
            , cst_calc_mthd_nm
            , cst_calc_mthd_nomfrm_cntnts
            , cst_calcbll_dsply_val
            , drcnstcost_cmpr_pt
            , ovrhdcst_pt
            , thtm_cost_am
            , prev_cost_am
            , remndr_am
            , dlt_yn
            , rgstr_id
            , rgst_dt
            , chg_id
            , chg_dt
		)
		VALUES
        <foreach collection="costs" item="cost" separator=",">
        (
            #{cntrctNo}
            , #{payprceSno}
            , #{cost.cstCalcItCd}
            , #{cost.upCstCalcItCd}
            , #{cost.dsplySn}
            , #{cost.itemNm}
            , null
            , null
            , null
            , null
            , null
            , #{cost.costAmt}
            , null
            , null
            , 'N'
            , #{usrId}
            , now()
            , #{usrId}
            , now()
        )
        </foreach>
        ON CONFLICT (cntrct_no, payprce_sno, cst_calc_it_cd)
        DO UPDATE SET
            up_cst_calc_it_cd = EXCLUDED.up_cst_calc_it_cd,
            dsply_ordr = EXCLUDED.dsply_ordr,
            cst_calc_it_nm = EXCLUDED.cst_calc_it_nm,
            thtm_cost_am = EXCLUDED.thtm_cost_am,
            chg_id = EXCLUDED.chg_id,
            chg_dt = now();
    </insert>

    <delete id="deletePaymentCostList">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.projectcost.Payment.deletePaymentCostList][bjkim]  */
        DELETE
        FROM gaia_cmis.cw_pay_cost_calculator
        WHERE cntrct_no = #{cntrctNo}
        AND payprce_sno = #{payprceSno}
    </delete>
</mapper>