<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.ideait.platform.gaiacairos.mybatis.mappers.design.reviewcommentreport">

<select id="getReviewReport" parameterType="input" resultType="reviewReportOutput">
        /* [kr.co.ideait.platform.gaiacairos.mappers.design.reviewcommentreport.getReviewReportDsgn][jhkim]  */
        SELECT
            DDR.DSGN_NO,
            SUI.USR_NM AS RGSTR_NM,
            DDR.TITLE,
            DDP.DSGN_PHASE_NM,
            SCC1.CMN_CD_NM_KRN AS DSGN_NM,
            TO_CHAR(DR.CHG_DT::DATE, 'YYYY-MM-DD') AS RPLY_CHG_DT,
            SCC2.CMN_CD_NM_KRN AS RPLY_CD_NM,
            TO_CHAR(DDR.APPRER_RGST_DT::DATE, 'YYYY-MM-DD') AS APPRER_RGST_DT, 
            SCC3.CMN_CD_NM_KRN AS APPRER_CD_NM,
            TO_CHAR(DDR.BACKCHK_RGST_DT::DATE, 'YYYY-MM-DD') AS BACKCHK_RGST_DT, 
            SCC4.CMN_CD_NM_KRN AS BACKCHK_CD_NM,
            DDR.BACKCHK_CD,
            TO_CHAR(DDR.RGST_DT::DATE, 'YYYY-MM-DD') AS RGST_DT
        FROM
            DM_DESIGN_REVIEW DDR
        LEFT JOIN DM_DESIGN_PHASE DDP ON DDR.DSGN_PHASE_NO = DDP.DSGN_PHASE_NO
        LEFT JOIN DM_RESPONSE DR ON DDR.DSGN_NO = DR.DSGN_NO AND DR.DLT_YN = 'N'
        LEFT JOIN SM_USER_INFO SUI ON
            DDR.RGSTR_ID = SUI.USR_ID
        LEFT JOIN SM_COM_CODE SCC1 ON
            DDR.DSGN_CD = SCC1.CMN_CD
            AND SCC1.CMN_GRP_CD = #{dsgnCd}
            AND SCC1.DLT_YN = 'N'
        LEFT JOIN SM_COM_CODE SCC2 ON
            DR.RPLY_CD = SCC2.CMN_CD
            AND SCC2.CMN_GRP_CD = #{rplyStatus}
            AND SCC2.DLT_YN = 'N'
        LEFT JOIN SM_COM_CODE SCC3 ON
            DDR.APPRER_CD = SCC3.CMN_CD
            AND SCC3.CMN_GRP_CD = #{apprerStatus}
            AND SCC3.DLT_YN = 'N'
        LEFT JOIN SM_COM_CODE SCC4 ON
            DDR.BACKCHK_CD = SCC4.CMN_CD
            AND SCC4.CMN_GRP_CD = #{backchkStatus}
            AND SCC4.DLT_YN = 'N'
        WHERE DDR.CNTRCT_NO = #{cntrctNo} AND DDR.DLT_YN ='N'
        <if test="searchInput != null">
            <if test="searchInput.dsgnPhaseNoList != null and searchInput.dsgnPhaseNoList.size() > 0">
                AND DDR.DSGN_PHASE_NO IN
                <foreach item="item" collection="searchInput.dsgnPhaseNoList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="searchInput.rgstrIdList != null and searchInput.rgstrIdList.size() > 0">
                AND SUI.USR_ID IN
                <foreach item="item" collection="searchInput.rgstrIdList" open="(" separator="," close=")">
                    <if test="item == 'myDsgn'">
                        #{usrId}
                    </if>
                    <if test="item != 'myDsgn'">
                        #{item}
                    </if>
                </foreach>
            </if>
            <if test="searchInput.dsgnCdList != null and searchInput.dsgnCdList.size() > 0">
                AND SCC1.CMN_CD IN
                <foreach item="item" collection="searchInput.dsgnCdList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="searchInput.keyword != null and searchInput.keyword != ''">
                AND (
                    DDR.DSGN_NO::TEXT ILIKE CONCAT('%', #{searchInput.keyword}, '%')
                    OR DDR.TITLE ILIKE CONCAT('%', #{searchInput.keyword}, '%')
                    OR EXISTS (
                        SELECT 1 FROM SM_USER_INFO SUI
                        WHERE SUI.USR_ID = DDR.RGSTR_ID
                        AND SUI.USR_NM ILIKE CONCAT('%', #{searchInput.keyword}, '%')
                        LIMIT 1
                    )
                )
            </if>
            <if test="searchInput.dsgnCd != null and searchInput.dsgnCd != ''">
                AND DDR.DSGN_CD ILIKE CONCAT('%', #{searchInput.dsgnCd}, '%')
            </if>
            <if test="searchInput.rgstrNm != null and searchInput.rgstrNm != ''">
                AND EXISTS (
                        SELECT 1 FROM SM_USER_INFO SUI
                        WHERE SUI.USR_ID = DDR.RGSTR_ID
                        AND SUI.USR_NM ILIKE CONCAT('%', #{searchInput.rgstrNm}, '%')
                        LIMIT 1
                    )
            </if>
            <if test='searchInput.myRplyYn != null and searchInput.myRplyYn != "" and searchInput.myRplyYn.equals("Y")'>
                AND (DDR.BACKCHK_RGSTR_ID = #{usrId} OR DDR.APPRER_RGSTR_ID = #{usrId} OR DR.RGSTR_ID = #{usrId} OR DDR.RGSTR_ID = #{usrId})
            </if>
            <choose>
                <when test="searchInput.startDsgnNo != null and searchInput.startDsgnNo != '' and searchInput.endDsgnNo != null and searchInput.endDsgnNo != ''">
                    AND DDR.DSGN_NO::NUMERIC BETWEEN #{searchInput.startDsgnNo} AND #{searchInput.endDsgnNo}
                </when>
                <when test="searchInput.startDsgnNo == null and searchInput.endDsgnNo != null and searchInput.endDsgnNo != ''">
                    AND DDR.DSGN_NO::NUMERIC &lt;= #{searchInput.endDsgnNo}
                </when>
                <when test="searchInput.startDsgnNo != null and searchInput.startDsgnNo != '' and searchInput.endDsgnNo == null">
                    AND DDR.DSGN_NO::NUMERIC &gt;= #{searchInput.startDsgnNo}
                </when>
            </choose>
            <if test="searchInput.rplyStatus != null and searchInput.rplyStatus != ''">
				AND DR.RPLY_CD = #{searchInput.rplyStatus}
			</if>
			<if test="searchInput.apprerCd != null and searchInput.apprerCd != ''">
				AND DDR.APPRER_CD = #{searchInput.apprerCd}
			</if>
			<if test="searchInput.backchkCd != null and searchInput.backchkCd != ''">
				AND DDR.BACKCHK_CD = #{searchInput.backchkCd}
			</if>
            <if test="searchInput.startRecentDt != null and searchInput.startRecentDt != ''">
                AND DATE(DDR.RGST_DT) &gt;= DATE(#{searchInput.startRecentDt})
            </if>
            <if test="searchInput.endRecentDt != null and searchInput.endRecentDt != ''">
                AND DATE(DDR.RGST_DT) &lt;= DATE(#{searchInput.endRecentDt})
            </if>
            <if test="searchInput.isuYn != null and searchInput.isuYn != ''">
                AND DDR.ISU_YN = #{searchInput.isuYn}
            </if>
            <if test="searchInput.lesnYn != null and searchInput.lesnYn != ''">
                AND DDR.LESN_YN = #{searchInput.lesnYn}
            </if>
            <if test='searchInput.atachYn != null and searchInput.atachYn != "" and searchInput.atachYn.equals("Y")'>
                AND DDR.ATCH_FILE_NO IS NOT NULL AND DDR.ATCH_FILE_NO != ''
            </if>
        </if>
        ;

    </select>

    <select id="getReviewReportDetail" parameterType="input" resultType="reviewReportDetailOutput">
        /* [kr.co.ideait.platform.gaiacairos.mappers.design.reviewcommentreport.getReviewReportDsgn][jhkim]  */
        SELECT
            DDR.DSGN_NO,
            DDR.TITLE ,
            SCC1.CMN_CD_NM_KRN AS DSGN_NM,
            DDR.RVW_OPNIN,
            DDR.ISU_YN,
            DDR.LESN_YN,
            SUI.USR_NM AS RGSTR_NM,
            TO_CHAR(DDR.RGST_DT::DATE, 'YYYY-MM-DD') AS RGST_DT,
            DDR.DOC_NO,
            DDR.DWG_NO,
            DDR.DWG_NM,
            DDR.ATCH_FILE_NO,
            DDR.RVW_DWG_NO,
	        DDR.CHG_DWG_NO,
	        DDR.RGST_DT,
            RVWDD.ATCH_FILE_NO AS RVW_ATCH_FILE_NO,
			RVWDD.SNO AS RVW_SNO,
			RVWDD.DWG_DSCRPT AS RVW_DWG_DSCRPT, 
			CHGDD.ATCH_FILE_NO AS CHG_ATCH_FILE_NO,
			CHGDD.SNO AS CHG_SNO,
			CHGDD.DWG_DSCRPT AS CHG_DWG_DSCRPT,
            SUI2.USR_NM AS RPLY_RGSTR_NM,
            TO_CHAR(DR.CHG_DT::DATE, 'YYYY-MM-DD') AS RPLY_CHG_DT,
            SCC2.CMN_CD_NM_KRN AS RPLY_CD_NM,
            DR.RPLY_CNTNTS,
            DR.DWG_NO AS RPLY_DWG_NO,
            DR.ATCH_FILE_NO AS RPLY_ATCH_FILE_NO,
            RPLYDD.ATCH_FILE_NO AS RPLY_DWG_ATCH_NO,
			RPLYDD.SNO AS RPLY_DWG_SNO,
			RPLYDD.DWG_DSCRPT AS RPLY_DWG_DSCRPT,
            TO_CHAR(DDR.APPRER_RGST_DT::DATE, 'YYYY-MM-DD') AS APPRER_RGST_DT, 
            SCC3.CMN_CD_NM_KRN AS APPRER_STATUS,
            SUI3.USR_NM AS APPRER_RGSTR_NM,
            TO_CHAR(DDR.BACKCHK_RGST_DT::DATE, 'YYYY-MM-DD') AS BACKCHK_RGST_DT, 
            SCC4.CMN_CD_NM_KRN AS BACKCHK_STATUS,
            SUI4.USR_NM AS BACKCHK_RGSTR_NM
        FROM
            DM_DESIGN_REVIEW DDR
        LEFT JOIN DM_RESPONSE DR ON DDR.DSGN_NO = DR.DSGN_NO AND DR.DLT_YN = 'N'
        LEFT JOIN 
                SM_USER_INFO SUI 
        ON      DDR.RGSTR_ID = SUI.USR_ID
        LEFT JOIN 
                SM_USER_INFO SUI2 
        ON      DR.RGSTR_ID = SUI2.USR_ID
        LEFT JOIN 
                SM_USER_INFO SUI3 
        ON      DDR.APPRER_RGSTR_ID = SUI3.USR_ID
        LEFT JOIN 
                SM_USER_INFO SUI4
        ON      DDR.BACKCHK_RGSTR_ID = SUI4.USR_ID
        LEFT JOIN 
                SM_COM_CODE SCC1 
        ON      DDR.DSGN_CD = SCC1.CMN_CD
        AND     SCC1.CMN_GRP_CD = #{dsgnCd}
        AND     SCC1.DLT_YN = 'N'
        LEFT JOIN 
                SM_COM_CODE SCC2 
        ON      DR.RPLY_CD = SCC2.CMN_CD
        AND     SCC2.CMN_GRP_CD = #{rplyStatus}
        AND     SCC2.DLT_YN = 'N'
        LEFT JOIN SM_COM_CODE SCC3 ON
                DDR.APPRER_CD = SCC3.CMN_CD
                AND SCC3.CMN_GRP_CD = #{apprerStatus}
                AND SCC3.DLT_YN = 'N'
        LEFT JOIN SM_COM_CODE SCC4 
        ON      DDR.BACKCHK_CD = SCC4.CMN_CD
        AND     SCC4.CMN_GRP_CD = #{backchkStatus}
        AND     SCC4.DLT_YN = 'N'
        LEFT JOIN 
				DM_DWG RVWDD 
		ON 		RVWDD.DWG_NO  = DDR.RVW_DWG_NO 
		AND 	RVWDD.DWG_CD = '0501'
		AND 	RVWDD.DLT_YN = 'N'
		LEFT JOIN 
				DM_DWG CHGDD 
		ON 		CHGDD.DWG_NO  = DDR.CHG_DWG_NO 
		AND 	CHGDD.DWG_CD = '0502'
		AND 	CHGDD.DLT_YN = 'N'
        LEFT JOIN 
				DM_DWG RPLYDD 
		ON 		RPLYDD.DWG_NO  = DR.DWG_NO 
		AND 	RPLYDD.DWG_CD = '0503'
		AND 	RPLYDD.DLT_YN = 'N'
        WHERE 
                DDR.CNTRCT_NO = #{cntrctNo} 
        AND     DDR.DSGN_NO = #{dsgnNo} 
        AND     DDR.DLT_YN = 'N'
    </select>

    <select id="getReviewReportApprerDetail" parameterType="input" resultType="apprerOutput">
        /* [kr.co.ideait.platform.gaiacairos.mappers.design.reviewcommentreport.getReviewReportApprerDetail][leejw]  */
        SELECT  SUI.USR_NM AS APPRER_RGSTR_NM,
                TO_CHAR(DE.CHG_DT::DATE,'YYYY-MM-DD') AS APPRER_CHG_DT,
                DE.EVL_OPNIN,
                DE.ATCH_FILE_NO AS APPRER_ATCH_FILE_NO 
        FROM    DM_EVALUATION DE
        LEFT JOIN 
                SM_USER_INFO SUI 
        ON      DE.RGSTR_ID = SUI.USR_ID
        WHERE
                DE.CNTRCT_NO = #{cntrctNo} 
        AND     DE.DSGN_NO = #{dsgnNo} 
        AND     DE.DLT_YN = 'N'
    </select>

    <select id="getReviewReportBackchkDetail" parameterType="input" resultType="backchkOutput">
        /* [kr.co.ideait.platform.gaiacairos.mappers.design.reviewcommentreport.getReviewReportBackchkDetail][leejw]  */
        SELECT  SUI.USR_NM AS BACKCHK_RGSTR_NM,
                TO_CHAR(DB.CHG_DT::DATE,'YYYY-MM-DD') AS BACKCHK_CHG_DT,
                DB.BCKCHK_OPNIN,
                DB.ATCH_FILE_NO AS BACKCHK_ATCH_FILE_NO
        FROM
                DM_BACKCHECK DB
        LEFT JOIN 
                SM_USER_INFO SUI 
        ON      DB.RGSTR_ID = SUI.USR_ID
        WHERE   DB.CNTRCT_NO = #{cntrctNo} 
        AND     DB.DSGN_NO = #{dsgnNo} 
        AND     DB.DLT_YN = 'N'
    </select>

    <select id="getReviewReportRgstrList" parameterType="String" resultType="reviewReportRgstrListOutput">
        /* [kr.co.ideait.platform.gaiacairos.mappers.design.reviewsummary.getReviewsummaryRgstrList][leejw]  */
		SELECT	SUI.USR_ID,
				SUI.USR_NM
		FROM	DM_DESIGN_REVIEW DDR
		LEFT JOIN 
				SM_USER_INFO SUI  
		ON		SUI.USR_ID = DDR.RGSTR_ID
		WHERE
				DDR.CNTRCT_NO = #{cntrctNo}
		GROUP BY
				SUI.USR_ID;
    </select>


</mapper>