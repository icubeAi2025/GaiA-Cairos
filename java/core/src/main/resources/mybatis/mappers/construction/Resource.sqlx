<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.ideait.platform.gaiacairos.mybatis.mappers.construction.resource">

    <select id="selectContractChgId" parameterType="resourceFormTypeSelectInput" resultType="String">
        /* [kr.co.ideait.platform.gaiacairos.mappers.construction.resource.selectContractChgId][srchoi]  */
        WITH GET_CNTRCT_CHG_ID AS (
             SELECT CNTRCT_CHG_ID
             FROM CN_CONTRACT_CHANGE
             WHERE CNTRCT_NO = #{cntrctNo}
             AND LAST_CHG_YN = 'Y'
         )
        SELECT CNTRCT_CHG_ID
        FROM PR_REVISION PR
        WHERE PR.CNTRCT_CHG_ID = (SELECT CNTRCT_CHG_ID FROM GET_CNTRCT_CHG_ID)
        AND LAST_REVISION_YN = 'Y'
    </select>


    <select id="selectResourceActivityList" parameterType="resourceActivity" resultType="resourceActivity">
        /* [kr.co.ideait.platform.gaiacairos.mappers.construction.resource.selectResourceActivityList][srchoi]  */
        WITH WBS AS (
            WITH RECURSIVE CODE_LIST(WBS_CD, WBS_NM, UP_WBS_CD, DEPTH, PATH, CYCLE) AS (
                SELECT A.WBS_CD,
                    A.WBS_NM,
                    A.UP_WBS_CD,
                    1,
                    ARRAY [''],
                    FALSE,
                    A.CNTRCT_CHG_ID,
                    A.REVISION_ID
                FROM PR_WBS A
                WHERE A.WBS_LEVEL = 0
                    AND A.CNTRCT_CHG_ID = #{cntrctChgId}
                    AND A.REVISION_ID = (SELECT REVISION_ID FROM PR_REVISION WHERE CNTRCT_CHG_ID = #{cntrctChgId} AND LAST_REVISION_YN = 'Y')
                UNION ALL
                SELECT A.WBS_CD,
                    A.WBS_NM,
                    A.UP_WBS_CD,
                    B.DEPTH + 1,
                    ARRAY_APPEND(B.PATH, A.WBS_NM::TEXT),
                    A.WBS_CD = ANY (B.PATH),
                    A.CNTRCT_CHG_ID,
                    A.REVISION_ID
                FROM PR_WBS A,
                      CODE_LIST B
                WHERE A.UP_WBS_CD = B.WBS_CD
                    AND A.CNTRCT_CHG_ID = #{cntrctChgId}
                    AND A.REVISION_ID = (SELECT REVISION_ID FROM PR_REVISION WHERE CNTRCT_CHG_ID = #{cntrctChgId} AND LAST_REVISION_YN = 'Y')
            AND NOT CYCLE)
            SELECT WBS_CD,
                LPAD('', DEPTH) || WBS_NM                  AS WBS_NM,
                UP_WBS_CD,
                DEPTH                                      AS A_MENU_LEVEL,
                PATH,
                SUBSTRING(ARRAY_TO_STRING(PATH, ' / '), 4) AS PATH_NM,
                CNTRCT_CHG_ID,
                REVISION_ID
            FROM CODE_LIST
        )
        SELECT
            PA.CNTRCT_CHG_ID,
            PA.REVISION_ID,
            PA.WBS_CD,
            WBS.WBS_NM,
            PA.ACTIVITY_ID,
            PA.ACTIVITY_NM,
            PA.ACTIVITY_KIND,
            PA.PLAN_START,
            PA.PLAN_FINISH,
            PA.DLT_YN,
            PA.RGST_DT,
            PA.RGSTR_ID

        FROM PR_ACTIVITY PA
            LEFT JOIN WBS WBS
            ON WBS.CNTRCT_CHG_ID = PA.CNTRCT_CHG_ID
            AND WBS.WBS_CD = PA.WBS_CD
            AND WBS.REVISION_ID = PA.REVISION_ID
        WHERE 1=1
            AND PA.CNTRCT_CHG_ID = #{cntrctChgId}
            AND PA.REVISION_ID = (SELECT REVISION_ID FROM PR_REVISION WHERE CNTRCT_CHG_ID = #{cntrctChgId} AND LAST_REVISION_YN = 'Y')
            AND (PA.PLAN_START IS NOT NULL AND PA.PLAN_START != '')
            AND (PA.PLAN_FINISH IS NOT NULL AND PA.PLAN_FINISH != '')
            AND DLT_YN = 'N'
        ORDER BY PA.PLAN_START
    </select>

    <!--
        20250219 QDB ~ QDB_RESOURCE 다르다.
        AND QDB.RSCE_CD = QR.GNRLEXPNS_CD 조건 제거
    -->
    <select id="selectResourceQdbList" parameterType="map" resultType="resourceQdb">
        /* [kr.co.ideait.platform.gaiacairos.mappers.construction.resource.selectResourceQdbList][srchoi]  */
        SELECT
            QDB.CNTRCT_CHG_ID,
            QDB.REVISION_ID,
            QDB.ACTIVITY_ID,
            QDB.CNSTTY_CD,
            QDB.DTL_CNSTTY_SN,
            QR.GNRLEXPNS_CD,
            QR.RSCE_TP_CD,
            QR.RSCE_NM,
            QR.SPEC_NM,
            QR.UNIT,
            QDB.RSCE_QTY,
            QR.QTY,
            (QDB.RSCE_QTY * QR.QTY) totalQty,
            QR.DLT_YN,
            QR.RGST_DT,
            QR.RGSTR_ID,
            QR.CHG_DT,
            QR.CHG_ID,
            QR.DLT_DT,
            QR.DLT_ID
        FROM PR_QDB QDB
        JOIN PR_QDB_RESOURCE QR
             ON QDB.CNTRCT_CHG_ID = QR.CNTRCT_CHG_ID
             AND QDB.ACTIVITY_ID = QR.ACTIVITY_ID
             AND QDB.REVISION_ID = QR.REVISION_ID
             AND QDB.CNSTTY_CD = QR.CNSTTY_CD
             AND QDB.DTL_CNSTTY_SN = QR.DTL_CNSTTY_SN
             /*AND QDB.RSCE_CD = QR.GNRLEXPNS_CD*/
        WHERE 1=1
            AND QDB.REVISION_ID = (SELECT REVISION_ID FROM PR_REVISION WHERE CNTRCT_CHG_ID = #{cntrctChgId} AND LAST_REVISION_YN = 'Y')
            <if test="cntrctChgId != null and cntrctChgId != ''">
                AND QDB.CNTRCT_CHG_ID = #{cntrctChgId}
            </if>
            AND QDB.DLT_YN = 'N'
            <choose>
                <when test="activityList != null and activityList.size() > 0">
                    AND QDB.ACTIVITY_ID IN
                    <foreach item="item" collection="activityList" separator="," open="(" close=")">
                        #{item.activityId}
                    </foreach>
                </when>
                <otherwise>
                    AND 1 = 0
                </otherwise>
            </choose>
    </select>

    <!--
        20250219 QDB ~ QDB_RESOURCE 다르다.
        AND QDB.RSCE_CD = QR.GNRLEXPNS_CD 조건 제거
    -->
    <select id="selectResourceList" parameterType="map" resultType="dailyResource">
        /* [kr.co.ideait.platform.gaiacairos.mappers.construction.resource.selectResourceList][srchoi]  */
        WITH ACTIVITY_RESOURCES AS (
            SELECT
                PA.CNTRCT_CHG_ID,
                PA.ACTIVITY_ID,
                PA.PLAN_START,
                PA.PLAN_FINISH,
                QR.RSCE_TP_CD,
                QDB.RSCE_CD,
                QR.RSCE_NM,
                QR.SPEC_NM,
                QR.UNIT,
                QDB.RSCE_QTY,
                (PLAN_FINISH::DATE - PLAN_START::DATE + 1) AS DAYS_COUNT
            FROM PR_ACTIVITY PA
            JOIN PR_QDB QDB ON PA.ACTIVITY_ID = QDB.ACTIVITY_ID AND PA.CNTRCT_CHG_ID = QDB.CNTRCT_CHG_ID
            JOIN PR_QDB_RESOURCE QR
            ON QDB.CNTRCT_CHG_ID = QR.CNTRCT_CHG_ID
                AND QDB.ACTIVITY_ID = QR.ACTIVITY_ID
                AND QDB.REVISION_ID = QR.REVISION_ID
                AND QDB.CNSTTY_CD = QR.CNSTTY_CD
                AND QDB.DTL_CNSTTY_SN = QR.DTL_CNSTTY_SN
                /*AND QDB.RSCE_CD = QR.GNRLEXPNS_CD*/
            <where>
            1 = 1
                <if test="activityList != null and activityList.size() > 0">
                    AND PA.ACTIVITY_ID = ANY (
                        ARRAY[
                            <foreach item="item" collection="activityList" separator=",">
                                #{item.activityId}
                            </foreach>
                        ]
                    )
                </if>

                <if test="activityList == null or activityList.size() == 0">
                    AND 1 = 0
                </if>

                AND PA.CNTRCT_CHG_ID = #{cntrctChgId}
                AND QR.RSCE_TP_CD LIKE CONCAT(#{rsceTpCd}, '%')
            </where>
            <if test="searchText != null and searchText != ''">
                AND (QR.RSCE_NM LIKE CONCAT('%', UPPER(#{searchText}), '%') OR QR.UNIT LIKE CONCAT('%', UPPER(#{searchText}), '%'))
            </if>
        ),
        DAILY_ACTIVITY_RESOURCES AS (
            SELECT
                AR.CNTRCT_CHG_ID,
                AR.ACTIVITY_ID,
                DAILY_DATE,
                AR.RSCE_TP_CD,
                AR.RSCE_CD,
                AR.RSCE_NM,
                AR.SPEC_NM,
                AR.UNIT,
                AR.RSCE_QTY,
                TRUNC((AR.RSCE_QTY / AR.DAYS_COUNT)::NUMERIC, 5) AS DAILY_QUANTITY
            FROM ACTIVITY_RESOURCES AR
            JOIN GENERATE_SERIES(AR.PLAN_START::DATE, AR.PLAN_FINISH::DATE, INTERVAL '1 DAY') AS DAILY_DATE ON TRUE
        ),
        CUMULATIVE_DAILY_ACTIVITY_RESOURCES AS (
            SELECT
                CNTRCT_CHG_ID,
                ACTIVITY_ID,
                TO_CHAR(DATE_TRUNC('month', DAILY_DATE), 'YYYY-MM') GROUP_MONTH,
                TO_CHAR(DAILY_DATE, 'YYYY-MM-DD') AS DAILY_DATE,
                RSCE_TP_CD,
                RSCE_CD,
                RSCE_NM,
                SPEC_NM,
                UNIT,
                RSCE_QTY,
                ROUND(DAILY_QUANTITY, 2) DAILY_QUANTITY,
                SUM(ROUND(DAILY_QUANTITY, 2)) OVER (PARTITION BY ACTIVITY_ID, RSCE_CD ORDER BY DAILY_DATE) AS CUMULATIVE_QUANTITY
                FROM DAILY_ACTIVITY_RESOURCES
                WHERE 1=1
            <if test="conditionDate != null and conditionDate != ''">
                AND (DATE_TRUNC('month', DAILY_DATE)) = TO_DATE(#{conditionDate}, 'YYYY-MM-DD')
            </if>

        ),
        REPORT_ACTIVITY_RESOURCE AS (
            SELECT
                RR.RSCE_CD,
                RR.MAIN_RSCE_DSPLY,
                RR.PLAN_QTY,
                RR.ACTUAL_QTY,
                RR.TOTAL_QTY,
                RR.ACMTL_QTY,
                RR.REMNDR_QTY,
                EA.CNTRCT_NO,
                EA.CNTRCT_CHG_ID,
                EA.ACTIVITY_ID,
                EA.PLAN_BGN_DATE,
                EA.PLAN_END_DATE,
                EA.PLAN_REQRE_DAYNUM,
                EA.TODAY_PLAN_RATE,
                EA.ACTUAL_BGN_DATE,
                EA.ACTUAL_END_DATE,
                EA.ACTUAL_REQRE_DAYNUM
            FROM (
                SELECT DISTINCT ON (DRA.ACTIVITY_ID)
                DRA.CNTRCT_NO, DRA.CNTRCT_CHG_ID, DRA.DAILY_REPORT_ID, DRA.DAILY_ACTIVITY_ID, DRA.WBS_CD, DRA.ACTIVITY_ID, DRA.ACTIVITY_NM, DRA.WORK_DT_TYPE
                    , DRA.PLAN_BGN_DATE, DRA.PLAN_END_DATE, DRA.PLAN_REQRE_DAYNUM
                    , DRA.ACTUAL_BGN_DATE, DRA.ACTUAL_END_DATE, DRA.ACTUAL_REQRE_DAYNUM, DRA.TODAY_PLAN_RATE, DRA.TODAY_EXE_RATE, DRA.PSTATS
                    , DRA.REVISION_ID, DRA.DLT_YN, DRA.RGST_DT, DRA.RGSTR_ID, DRA.CHG_DT, DRA.CHG_ID, DRA.DLT_DT, DRA.DLT_ID
                FROM CW_DAILY_REPORT_ACTIVITY DRA
                WHERE DRA.CNTRCT_CHG_ID = #{cntrctChgId}
                ORDER BY ACTIVITY_ID, DAILY_REPORT_ID DESC
            ) EA
            JOIN (
                SELECT DISTINCT ON (QDB.RSCE_CD)
                QDB.CNTRCT_NO, QDB.DAILY_REPORT_ID, QDB.CNTRCT_CHG_ID, QDB.REVISION_ID, QDB.ACTIVITY_ID, QDB.CNSTTY_CD, QDB.DTL_CNSTTY_SN, QDB.RSCE_TP_CD, QDB.RSCE_CD
                    , QDB.WORK_QTY, QDB.ORGNL_RSCE_CD, QDB.RMRK, QDB.DLT_YN, QDB.RGST_DT, QDB.RGSTR_ID, QDB.CHG_DT, QDB.CHG_ID, QDB.DLT_DT, QDB.DLT_ID
                FROM CW_DAILY_REPORT_QDB QDB
                WHERE QDB.CNTRCT_CHG_ID = #{cntrctChgId}
                ORDER BY QDB.RSCE_CD, QDB.DAILY_REPORT_ID DESC
            ) QDB
            ON EA.CNTRCT_CHG_ID = QDB.CNTRCT_CHG_ID AND EA.ACTIVITY_ID = QDB.ACTIVITY_ID AND EA.REVISION_ID = QDB.REVISION_ID
            JOIN (
                SELECT DISTINCT ON (RSCE_CD)
                AR.CNTRCT_NO, AR.DAILY_REPORT_ID, AR.RSCE_TP_CD, AR.RSCE_SNO, AR.RSCE_CD
                    , AR.TOTAL_QTY, AR.PLAN_QTY, AR.ACTUAL_QTY, AR.ACMTL_QTY, AR.REMNDR_QTY
                    , AR.GOVSPLY_MTRL_YN, AR.CNTRCT_CHG_ID, AR.DLT_YN, AR.RGST_DT, AR.RGSTR_ID, AR.CHG_DT, AR.CHG_ID
                    , AR.DLT_DT, AR.DLT_ID, AR.MAIN_RSCE_DSPLY
                FROM CW_DAILY_REPORT_RESOURCE AR
                ORDER BY AR.RSCE_CD, AR.DAILY_REPORT_ID DESC
            ) RR
            ON QDB.CNTRCT_CHG_ID = RR.CNTRCT_CHG_ID AND QDB.RSCE_TP_CD = RR.RSCE_TP_CD AND QDB.RSCE_CD = RR.RSCE_CD
        )
        <if test="returnType == 'list'">
            SELECT
                COALESCE(RAR.MAIN_RSCE_DSPLY, 'N') MAIN_RSCE_DSPLY,
                CDAR.CNTRCT_CHG_ID,
                CDAR.ACTIVITY_ID,
                CDAR.DAILY_DATE,
                CDAR.RSCE_TP_CD,
                CDAR.RSCE_CD,
                CDAR.RSCE_NM,
                CDAR.SPEC_NM,
                CDAR.UNIT,
                CDAR.RSCE_QTY,
                CDAR.DAILY_QUANTITY,
                CDAR.CUMULATIVE_QUANTITY
            FROM CUMULATIVE_DAILY_ACTIVITY_RESOURCES CDAR
            LEFT JOIN REPORT_ACTIVITY_RESOURCE RAR
            ON CDAR.CNTRCT_CHG_ID = RAR.CNTRCT_CHG_ID AND CDAR.ACTIVITY_ID = RAR.ACTIVITY_ID AND CDAR.RSCE_CD = RAR.RSCE_CD
            ORDER BY ACTIVITY_ID, DAILY_DATE, RSCE_CD
        </if>
        <if test="returnType == 'group'">
         ,MONTHLY_ACTIVITY_RESOURCE AS (
            <![CDATA[
            SELECT CNTRCT_CHG_ID, ACTIVITY_ID, RSCE_CD, RSCE_TP_CD, RSCE_NM, SPEC_NM, UNIT, RSCE_QTY, GROUP_MONTH
            FROM CUMULATIVE_DAILY_ACTIVITY_RESOURCES
            GROUP BY CNTRCT_CHG_ID, ACTIVITY_ID, RSCE_CD, RSCE_TP_CD, RSCE_NM, SPEC_NM, UNIT, RSCE_QTY, GROUP_MONTH
            HAVING GROUP_MONTH = #{monthlyDetailCurrentDate}
            ORDER BY RSCE_CD
            ]]>
        )

        SELECT
            MR.CNTRCT_CHG_ID,
            MR.ACTIVITY_ID,
            MR.RSCE_CD,
            MR.RSCE_TP_CD,
            MR.RSCE_NM,
            MR.SPEC_NM,
            MR.UNIT,
            ROUND(MR.RSCE_QTY, 3) RSCE_QTY,
            MR.GROUP_MONTH,
            AR.MAIN_RSCE_DSPLY,
            AR.ACTUAL_QTY,
            AR.TOTAL_QTY,
            AR.ACMTL_QTY,
            AR.REMNDR_QTY,
            AR.PLAN_BGN_DATE,
            AR.PLAN_END_DATE,
            AR.PLAN_REQRE_DAYNUM,
            AR.TODAY_PLAN_RATE,
            AR.ACTUAL_BGN_DATE,
            AR.ACTUAL_END_DATE,
            AR.ACTUAL_REQRE_DAYNUM
        FROM MONTHLY_ACTIVITY_RESOURCE MR
        LEFT JOIN REPORT_ACTIVITY_RESOURCE AR
        ON AR.CNTRCT_CHG_ID = MR.CNTRCT_CHG_ID AND AR.ACTIVITY_ID = MR.ACTIVITY_ID AND AR.RSCE_CD = MR.RSCE_CD
        ORDER BY MR.RSCE_CD
        </if>
    </select>
    <!--
        20250219 QDB ~ QDB_RESOURCE 다르다.
        AND QDB.RSCE_CD = QR.GNRLEXPNS_CD 조건 제거
    -->
    <select id="selectDailyResourceDetail" parameterType="map" resultType="dailyResource">
        /* [kr.co.ideait.platform.gaiacairos.mappers.construction.resource.selectDailyResourceDetail][srchoi]  */
        WITH WBS AS (
            WITH RECURSIVE CODE_LIST(WBS_CD, WBS_NM, UP_WBS_CD, DEPTH, PATH, CYCLE) AS (
                SELECT A.WBS_CD,
                    A.WBS_NM,
                    A.UP_WBS_CD,
                    1,
                    ARRAY [''],
                    FALSE,
                    A.CNTRCT_CHG_ID,
                    A.REVISION_ID
                FROM PR_WBS A
                WHERE A.UP_WBS_CD = ''
                    AND A.CNTRCT_CHG_ID = #{cntrctChgId}
                UNION ALL
                SELECT A.WBS_CD,
                    A.WBS_NM,
                    A.UP_WBS_CD,
                    B.DEPTH + 1,
                    ARRAY_APPEND(B.PATH, A.WBS_NM::TEXT),
                    A.WBS_CD = ANY (B.PATH),
                    A.CNTRCT_CHG_ID,
                    A.REVISION_ID
                FROM PR_WBS A, CODE_LIST B
                WHERE A.UP_WBS_CD = B.WBS_CD
                        AND A.CNTRCT_CHG_ID = #{cntrctChgId}
               AND NOT CYCLE
            )
            SELECT WBS_CD,
                LPAD('', DEPTH) || WBS_NM                  AS WBS_NM,
                UP_WBS_CD,
                DEPTH                                      AS A_MENU_LEVEL,
                PATH,
                SUBSTRING(ARRAY_TO_STRING(PATH, ' / '), 4) AS PATH_NM,
                CNTRCT_CHG_ID,
                REVISION_ID
            FROM CODE_LIST
        ),
        CBS AS (
             SELECT
                 CD.CNTRCT_CHG_ID,
                 CD.CNSTTY_SN,
                 CBS.UNIT_CNST_TYPE,
                 CBS.CNSTTY_CD,
                 CD.DTL_CNSTTY_SN,
                 CD.DTL_CNSTTY_NM,
                 CD.DTL_CNSTTY_TP_CD,
                 CD.RSCE_TP_CD,
                 CD.RSCE_CD,
                 CD.SPEC_NM,
                 CD.UNIT,
                 CD.RSCE_QTY AS CBS_RSCE_QTY,
                 CCR.UNIT_QTY AS CBS_UNIT_QTY,
                 CD.MTRL_UPRC,
                 CD.LBR_UPRC,
                 CD.GNRLEXPNS_UPRC,
                 RSC.MTRL_UPRC ORIGIN_MTRL_UPRC,
                 RSC.LBR_UPRC ORIGIN_LBR_UPRC,
                 RSC.GNRLEXPNS_UPRC ORIGIN_GNRLEXPNS_UPRC,
                 CASE
                     WHEN CD.RSCE_TP_CD = 'M' THEN RSC.MTRL_UPRC
                     WHEN CD.RSCE_TP_CD = 'L' THEN RSC.LBR_UPRC
                 ELSE RSC.GNRLEXPNS_UPRC
                 END AS ORIGIN_UPRC,
                 CD.ORGNL_RSCE_CD,
                 CD.DLT_YN
             FROM CT_CBS_DETAIL CD
             LEFT JOIN CT_CBS_RESOURCE CCR
             ON CD.CNTRCT_CHG_ID = CCR.CNTRCT_CHG_ID AND CD.CNSTTY_SN = CCR.CNSTTY_SN AND CD.DTL_CNSTTY_SN = CCR.DTL_CNSTTY_SN AND CD.RSCE_CD = CCR.GNRLEXPNS_CD
             LEFT JOIN CT_CBS CBS
             ON CD.CNTRCT_CHG_ID = CBS.CNTRCT_CHG_ID AND CD.CNSTTY_SN = CBS.CNSTTY_SN
             LEFT JOIN CT_RESOURCE RSC
             ON CD.CNTRCT_CHG_ID = RSC.CNTRCT_CHG_ID AND CD.RSCE_CD = RSC.GNRLEXPNS_CD AND CD.RSCE_TP_CD = RSC.RSCE_TP_CD AND CBS.UNIT_CNST_TYPE = RSC.UNIT_CNST_TYPE
             WHERE CD.DLT_YN = 'N'
                 AND CD.CNTRCT_CHG_ID = #{cntrctChgId}
                 AND  NULLIF(CD.RSCE_CD, '') IS NOT NULL
        ),
        PR AS (
            SELECT
                PA.WBS_CD,
                WBS.WBS_NM,
                PA.CNTRCT_CHG_ID,
                PA.ACTIVITY_ID,
                PA.ACTIVITY_NM,
                PA.PLAN_START,
                PA.PLAN_FINISH,
                (PLAN_FINISH::DATE - PLAN_START::DATE + 1) AS PLAN_DAYS_COUNT,
                PA.ACTUAL_START,
                PA.ACTUAL_FINISH,
                (CASE
                    WHEN ACTUAL_START IS NOT NULL AND ACTUAL_START != ''
                    AND ACTUAL_FINISH IS NOT NULL AND ACTUAL_FINISH != ''
                THEN ACTUAL_FINISH::DATE - ACTUAL_START::DATE + 1
                ELSE 0 END) ACTUAL_DAYS_COUNT,
                QR.RSCE_TP_CD,
                QDB.RSCE_CD,
                QR.RSCE_NM,
                QR.SPEC_NM,
                QR.UNIT,
                QDB.RSCE_QTY,
                QR.QTY AS UNIT_QTY,
                ROUND(QDB.RSCE_QTY * QR.QTY, 2) AS MULTIPLIED_QTY,
                PA.DLT_YN
            FROM PR_ACTIVITY PA
            LEFT JOIN WBS WBS
                ON WBS.CNTRCT_CHG_ID = PA.CNTRCT_CHG_ID
                AND WBS.WBS_CD = PA.WBS_CD
                AND WBS.REVISION_ID = PA.REVISION_ID
            JOIN PR_QDB QDB
                ON PA.ACTIVITY_ID = QDB.ACTIVITY_ID
                AND PA.CNTRCT_CHG_ID = QDB.CNTRCT_CHG_ID
            JOIN PR_QDB_RESOURCE QR ON QDB.CNTRCT_CHG_ID = QR.CNTRCT_CHG_ID AND
                                       QDB.ACTIVITY_ID = QR.ACTIVITY_ID AND
                                       QDB.REVISION_ID = QR.REVISION_ID AND
                                       QDB.CNSTTY_CD = QR.CNSTTY_CD AND
                                       QDB.DTL_CNSTTY_SN = QR.DTL_CNSTTY_SN
                                       /*  AND QDB.RSCE_CD = QR.GNRLEXPNS_CD */
            WHERE 1=1
                AND (PLAN_START IS NOT NULL AND PLAN_START != '')
                AND (PLAN_FINISH IS NOT NULL AND PLAN_FINISH != '')
            <if test="planStart != null and planStart != ''">
            <![CDATA[
                AND TO_DATE(PA.PLAN_START, 'YYYY-MM-DD') <= TO_DATE(#{planStart}, 'YYYY-MM-DD')
            ]]>
            </if>
                AND PA.CNTRCT_CHG_ID = #{cntrctChgId}
                AND QDB.RSCE_CD = #{rsceCd}
            <if test="searchText != null and searchText != ''">
                AND (UPPER(QR.RSCE_NM) LIKE CONCAT('%', UPPER(#{searchText}), '%') OR UPPER(QR.UNIT) LIKE CONCAT('%', UPPER(#{searchText}), '%'))
            </if>
            ORDER BY PA.PLAN_START
        )
        SELECT
            PR.WBS_CD,
            PR.WBS_NM,
            PR.CNTRCT_CHG_ID,
            PR.ACTIVITY_ID,
            PR.ACTIVITY_NM,
            PR.PLAN_START,
            PR.PLAN_FINISH,
            PR.PLAN_DAYS_COUNT,
            PR.ACTUAL_START,
            PR.ACTUAL_FINISH,
            PR.ACTUAL_DAYS_COUNT,
            PR.RSCE_TP_CD,
            PR.RSCE_CD,
            PR.RSCE_NM,
            PR.SPEC_NM,
            PR.UNIT,
            PR.RSCE_QTY,
            PR.UNIT_QTY,
            PR.MULTIPLIED_QTY ,
            CBS.CBS_RSCE_QTY,
            CBS.CBS_UNIT_QTY,
            ROUND(PR.MULTIPLIED_QTY * CBS.CBS_UNIT_QTY * CBS.ORIGIN_UPRC, 2) AS CBS_COST,
            CBS.ORIGIN_UPRC,
            CBS.MTRL_UPRC,
            CBS.LBR_UPRC,
            CBS.GNRLEXPNS_UPRC,
            CBS.ORIGIN_MTRL_UPRC,
            CBS.ORIGIN_LBR_UPRC,
            CBS.ORIGIN_GNRLEXPNS_UPRC,
            PR.DLT_YN
        FROM PR LEFT JOIN CBS
        ON PR.CNTRCT_CHG_ID = CBS.CNTRCT_CHG_ID
        AND PR.RSCE_CD = CBS.RSCE_CD
        AND PR.RSCE_TP_CD = CBS.RSCE_TP_CD
    </select>

    <select id="selectDeprecatedResourceList" parameterType="resourceFormTypeSelectInput" resultType="map">
    /* [Deprecated][kr.co.ideait.platform.gaiacairos.mappers.construction.resource.selectDeprecatedResourceList][srchoi]  */
    <![CDATA[
     WITH RANKED_DATA AS (
         SELECT
             RGST_DT,
             CHG_DT,
             GNRLEXPNS_CD AS RSCE_CD,
             RSCE_TP_CD,
             ROW_NUMBER() OVER (
                 PARTITION BY DATE_TRUNC('MONTH', CHG_DT), RSCE_TP_CD
                 ORDER BY CHG_DT DESC
             ) AS ROW_NUM
         FROM CT_CBS_RESOURCE
         WHERE CNTRCT_CHG_ID = #{cntrctNo}
    )
    SELECT
        RD.RSCE_CD,
        CR.RSCE_NM,
        CR.MTRL_UPRC,
        CR.LBR_UPRC,
        CR.GNRLEXPNS_UPRC,
        TO_CHAR(DATE_TRUNC('MONTH', RD.RGST_DT), 'YYYY-MM') AS MONTH,
        RD.RSCE_TP_CD,
        RD.RGST_DT,
        RD.CHG_DT
    FROM RANKED_DATA RD
    JOIN (
        SELECT
            DISTINCT ON (GNRLEXPNS_CD) GNRLEXPNS_CD,
            CNTRCT_CHG_ID,
            UNIT_CNST_TYPE,
            RSCE_NM,
            RSCE_TP_CD,
            MTRL_UPRC,
            LBR_UPRC,
            GNRLEXPNS_UPRC,
            RGST_DT
        FROM CT_RESOURCE
        WHERE DLT_YN = 'N'
        ORDER BY RSCE_CD, RGST_DT DESC) CR
    ON RD.RSCE_CD = CR.RSCE_CD
    WHERE
        ROW_NUM <= 3
    ORDER BY
        MONTH, RSCE_TP_CD, ROW_NUM

    ]]>
    </select>

    <!-- 착공계 관급자재수급계획서 조회 -->
    <select id="getGovsplyMtrlList" parameterType="String" resultType="rawGovsplyMtrlList">
        /* [kr.co.ideait.platform.gaiacairos.mappers.construction.resource.getGovsplyMtrlList][jhkim]  */
        WITH ACTIVITY_RESOURCES AS (
            SELECT
                    PA.CNTRCT_CHG_ID,
                    PA.ACTIVITY_ID,
                    PA.PLAN_START,
                    PA.PLAN_FINISH,
                    QR.RSCE_TP_CD,
                    QDB.RSCE_CD,
                    QR.RSCE_NM,
                    QR.SPEC_NM,
                    QR.UNIT,
                    QDB.RSCE_QTY,
                    QDB.UNIT_CNST_TYPE,
                    QDB.CNSTTY_CD,
                    (PLAN_FINISH::DATE - PLAN_START::DATE + 1) AS DAYS_COUNT
            FROM    PR_ACTIVITY PA
            JOIN    PR_QDB QDB 
                    ON      PA.ACTIVITY_ID = QDB.ACTIVITY_ID
                    AND     PA.CNTRCT_CHG_ID = QDB.CNTRCT_CHG_ID
            JOIN PR_QDB_RESOURCE QR
                    ON      QDB.CNTRCT_CHG_ID = QR.CNTRCT_CHG_ID
                    AND     QDB.ACTIVITY_ID = QR.ACTIVITY_ID
                    AND     QDB.REVISION_ID = QR.REVISION_ID
                    AND     QDB.CNSTTY_CD = QR.CNSTTY_CD
                    AND     QDB.DTL_CNSTTY_SN = QR.DTL_CNSTTY_SN
            WHERE   PA.CNTRCT_CHG_ID LIKE #{cntrctNo} || '%'
                    AND QR.RSCE_TP_CD LIKE CONCAT('M', '%')
        ),
        DAILY_DATA AS (
            SELECT  AR.CNTRCT_CHG_ID,
                    AR.ACTIVITY_ID,
                    TO_CHAR(DAILY_DATE, 'YYYY') AS YEAR,
                    TO_CHAR(DAILY_DATE, 'MM') AS MONTH,
                    AR.RSCE_TP_CD,
                    AR.RSCE_CD,
                    AR.RSCE_NM,
                    AR.SPEC_NM,
                    AR.UNIT,
                    AR.UNIT_CNST_TYPE,
                    AR.CNSTTY_CD,
                    AR.RSCE_QTY,
                    (AR.RSCE_QTY / AR.DAYS_COUNT)::NUMERIC AS DAILY_QUANTITY
            FROM    ACTIVITY_RESOURCES AR
            JOIN    GENERATE_SERIES(
                        AR.PLAN_START::DATE, 
                        AR.PLAN_FINISH::DATE, 
                        INTERVAL '1 DAY'
                    ) AS DAILY_DATE ON TRUE
        )
        SELECT  DD.UNIT_CNST_TYPE,
                SCC.CMN_CD_NM_KRN AS UNIT_CNST_TYPE_NM,
                DD.CNSTTY_CD,
                DD.RSCE_TP_CD,
                DD.RSCE_CD,
                DD.RSCE_NM,
                DD.SPEC_NM,
                DD.UNIT,
                DD.YEAR,
                DD.MONTH,
                TRUNC(DD.RSCE_QTY,2) AS RSCE_QTY,
                ROUND(SUM(DD.DAILY_QUANTITY), 3) AS MONTHLY_QUANTITY
        FROM    DAILY_DATA DD
        LEFT JOIN 
                SM_COM_CODE SCC 
                ON  DD.UNIT_CNST_TYPE = SCC.CMN_CD 
                AND SCC.CMN_GRP_CD = 'ce229e27-98c6-8c89-7be7-cbc27b0b1fc8'
        <if test='unitCnstType == "A"'>
        WHERE DD.UNIT_CNST_TYPE LIKE 'A%' OR DD.UNIT_CNST_TYPE IN ('C', 'F')
        </if>
        <if test='unitCnstType == "B"'>
        WHERE DD.UNIT_CNST_TYPE IN ('M')
        </if>
        GROUP BY
                DD.UNIT_CNST_TYPE,
                SCC.CMN_CD_NM_KRN,
                DD.CNSTTY_CD,
                DD.CNTRCT_CHG_ID,
                DD.ACTIVITY_ID,
                YEAR,
                MONTH,
                DD.RSCE_TP_CD,
                DD.RSCE_CD,
                DD.RSCE_NM,
                DD.SPEC_NM,
                DD.UNIT,
                DD.RSCE_QTY
        ORDER BY
                DD.RSCE_NM,
                DD.CNTRCT_CHG_ID,
                ACTIVITY_ID;
    </select>

    <select id="getGovsplyMtrlDate" parameterType="String" resultType="rawGovsplyMtrlItem">
        /* [kr.co.ideait.platform.gaiacairos.mappers.construction.resource.getGovsplyMtrlDate][jhkim]  */
        SELECT
            TO_CHAR(MIN(PA.PLAN_START::TIMESTAMP), 'YYYY') AS MIN_YEAR,
            TO_CHAR(MIN(PA.PLAN_START::TIMESTAMP), 'MM') AS MIN_MONTH,
            TO_CHAR(MAX(PA.PLAN_FINISH::TIMESTAMP), 'YYYY') AS MAX_YEAR,
            TO_CHAR(MAX(PA.PLAN_FINISH::TIMESTAMP), 'MM') AS MAX_MONTH
        FROM
            PR_ACTIVITY PA
        JOIN PR_QDB QDB ON
            PA.ACTIVITY_ID = QDB.ACTIVITY_ID
            AND PA.CNTRCT_CHG_ID = QDB.CNTRCT_CHG_ID
        JOIN PR_QDB_RESOURCE QR
            ON  QDB.CNTRCT_CHG_ID = QR.CNTRCT_CHG_ID
            AND QDB.ACTIVITY_ID = QR.ACTIVITY_ID
            AND QDB.REVISION_ID = QR.REVISION_ID
            AND QDB.CNSTTY_CD = QR.CNSTTY_CD
            AND QDB.DTL_CNSTTY_SN = QR.DTL_CNSTTY_SN
            AND PA.CNTRCT_CHG_ID LIKE #{cntrctNo} || '%'
            AND QR.RSCE_TP_CD LIKE CONCAT('M', '%')
        <if test='unitCnstType == "A"'>
        WHERE QDB.UNIT_CNST_TYPE LIKE 'A%' OR QDB.UNIT_CNST_TYPE IN ('C', 'F')
        </if>
        <if test='unitCnstType == "B"'>
        WHERE QDB.UNIT_CNST_TYPE IN ('M')
        </if>
    </select>

    <select id="getLbrEqItem" parameterType="map" resultType="rawLbrEqItem">
        /* [kr.co.ideait.platform.gaiacairos.mappers.construction.resource.getLbrEqItem][leejw]  */
        WITH RESOURCEDATA AS (
            SELECT 
                CC.CNTRCT_CHG_ID,
                CC.CNSTTY_LVL_NUM,
                CC.CNSTTY_CD,
                CC.UP_CNSTTY_CD,
                CC.UNIT_CNST_TYPE,
                SCC.CMN_CD_NM_KRN,
                CC.CNSTTY_NM,
                CC.CNSTTY_SN,
                PQ.ACTIVITY_ID,
                MAX(CASE WHEN PQR.RSCE_TP_CD = 'E1' THEN PQR.RSCE_NM END) AS EQ_RSCE_NM,
                MAX(CASE WHEN PQR.RSCE_TP_CD = 'E1' THEN PQR.QTY END) AS EQ_QTY,
                MAX(CASE WHEN PQR.RSCE_TP_CD = 'L' THEN PQR.RSCE_NM END) AS LBR_RSCE_NM,
                MAX(CASE WHEN PQR.RSCE_TP_CD = 'L' THEN PQR.QTY END) AS LBR_QTY
            FROM CT_CBS CC
            JOIN SM_COM_CODE SCC 
                ON SUBSTRING(CC.UNIT_CNST_TYPE FROM 1 FOR 1) = SCC.CMN_CD
                AND SCC.CMN_GRP_CD = #{majorcode}
            LEFT JOIN PR_QDB PQ
                ON CAST(PQ.CNSTTY_CD AS NUMERIC) = CC.CNSTTY_SN
                AND PQ.CNTRCT_CHG_ID LIKE #{cntrctNo} || '%'
            LEFT JOIN PR_QDB_RESOURCE PQR
                ON PQ.DTL_CNSTTY_SN = PQR.DTL_CNSTTY_SN
                AND PQR.RSCE_TP_CD IN ('E1', 'L')
            WHERE CC.CNTRCT_CHG_ID LIKE #{cntrctNo} || '%'
            GROUP BY 
                CC.CNTRCT_CHG_ID, 
                CC.CNSTTY_SN, 
                CC.UNIT_CNST_TYPE, 
                CC.CNSTTY_LVL_NUM, 
                CC.CNSTTY_NM, 
                SCC.CMN_CD_NM_KRN, 
                PQ.ACTIVITY_ID
        ),
        PLANRANGE AS (
            SELECT 
                CHILD.UP_CNSTTY_CD AS PARENT_CNSTTY_CD,
                CHILD.UNIT_CNST_TYPE,
                MIN(PA.PLAN_START) AS PLAN_START,
                MAX(PA.PLAN_FINISH) AS PLAN_FINISH
            FROM RESOURCEDATA CHILD
            JOIN PR_ACTIVITY PA ON PA.ACTIVITY_ID = CHILD.ACTIVITY_ID
            WHERE CHILD.CNSTTY_LVL_NUM = 3
            GROUP BY CHILD.UP_CNSTTY_CD, CHILD.UNIT_CNST_TYPE
        ),
        EQDETAIL AS (
            SELECT
                PARENT.CNSTTY_CD AS PARENT_CNSTTY_CD,
                PARENT.UNIT_CNST_TYPE,
                CHILD.EQ_RSCE_NM,
                ROUND(SUM(CHILD.EQ_QTY))::INTEGER AS EQ_QTY
            FROM RESOURCEDATA PARENT
            LEFT JOIN RESOURCEDATA CHILD
                ON CHILD.UP_CNSTTY_CD = PARENT.CNSTTY_CD
                AND CHILD.UNIT_CNST_TYPE = PARENT.UNIT_CNST_TYPE
                AND CHILD.CNSTTY_LVL_NUM = 3
            WHERE PARENT.CNSTTY_LVL_NUM = 2
            AND CHILD.EQ_RSCE_NM IS NOT NULL
            GROUP BY PARENT.CNSTTY_CD, PARENT.UNIT_CNST_TYPE, CHILD.EQ_RSCE_NM
        ),
        EQDETAILAGG AS (
            SELECT
                PARENT_CNSTTY_CD,
                UNIT_CNST_TYPE,
                STRING_AGG(EQ_RSCE_NM || ': ' || EQ_QTY, ', ') AS TOTAL_EQ_RSCE_DETAIL
            FROM EQDETAIL
            GROUP BY PARENT_CNSTTY_CD, UNIT_CNST_TYPE
        )
        SELECT 
            PARENT.CNTRCT_CHG_ID,
            PARENT.CNSTTY_LVL_NUM,
            PARENT.CNSTTY_CD, 
            PARENT.UP_CNSTTY_CD, 
            PARENT.UNIT_CNST_TYPE,
            PARENT.CMN_CD_NM_KRN,
            PARENT.CNSTTY_NM,
            PARENT.CNSTTY_SN,
            ROUND(SUM(CASE WHEN CHILD.EQ_RSCE_NM IS NOT NULL THEN CHILD.EQ_QTY ELSE 0 END))::INTEGER AS TOTAL_EQ_QTY,
            ROUND(SUM(CASE WHEN CHILD.LBR_RSCE_NM IS NOT NULL THEN CHILD.LBR_QTY ELSE 0 END))::INTEGER AS TOTAL_LBR_QTY,
            EDA.TOTAL_EQ_RSCE_DETAIL,
            PR.PLAN_START,
            PR.PLAN_FINISH
        FROM RESOURCEDATA PARENT
        LEFT JOIN RESOURCEDATA CHILD
            ON CHILD.UP_CNSTTY_CD = PARENT.CNSTTY_CD
            AND CHILD.UNIT_CNST_TYPE = PARENT.UNIT_CNST_TYPE
            AND CHILD.CNSTTY_LVL_NUM = 3
        LEFT JOIN PLANRANGE PR
            ON PR.PARENT_CNSTTY_CD = PARENT.CNSTTY_CD
            AND PR.UNIT_CNST_TYPE = PARENT.UNIT_CNST_TYPE
        LEFT JOIN EQDETAILAGG EDA
            ON EDA.PARENT_CNSTTY_CD = PARENT.CNSTTY_CD
            AND EDA.UNIT_CNST_TYPE = PARENT.UNIT_CNST_TYPE
        WHERE PARENT.CNSTTY_LVL_NUM = 2
        GROUP BY 
            PARENT.CNTRCT_CHG_ID,
            PARENT.CNSTTY_LVL_NUM,
            PARENT.CNSTTY_CD,
            PARENT.UP_CNSTTY_CD,
            PARENT.UNIT_CNST_TYPE,
            PARENT.CMN_CD_NM_KRN,
            PARENT.CNSTTY_NM,
            PARENT.CNSTTY_SN,
            PR.PLAN_START,
            PR.PLAN_FINISH,
            EDA.TOTAL_EQ_RSCE_DETAIL
        ORDER BY PARENT.CNSTTY_SN;
    </select>

     <select id="getLbrEqDate" parameterType="String" resultType="RawLbrEqDate">
        /* [kr.co.ideait.platform.gaiacairos.mappers.construction.resource.getLbrEqList][leejw]  */
        WITH DATERANGE AS (
            SELECT 
                MIN(TO_DATE(PLAN_START, 'YYYY-MM-DD')) AS MIN_PLAN_START,
                MAX(TO_DATE(PLAN_FINISH, 'YYYY-MM-DD')) AS MAX_PLAN_FINISH
            FROM (
                SELECT 
                    PA.PLAN_START,
                    PA.PLAN_FINISH
                FROM CT_CBS CC
                LEFT JOIN PR_QDB PQ
                    ON CAST(PQ.CNSTTY_CD AS NUMERIC) = CC.CNSTTY_SN 
                    AND PQ.CNTRCT_CHG_ID LIKE #{cntrctNo} || '%'
                LEFT JOIN PR_ACTIVITY PA
                    ON PA.ACTIVITY_ID = PQ.ACTIVITY_ID  
                WHERE CC.CNTRCT_CHG_ID LIKE #{cntrctNo} || '%'
            ) AS RESOURCEDATA
        ),
        ADJUSTEDDATES AS (
            SELECT 
                (MIN_PLAN_START - (EXTRACT(DOW FROM MIN_PLAN_START) - 1) * INTERVAL '1 DAY')::DATE AS START_MONDAY,
                (MAX_PLAN_FINISH - (EXTRACT(DOW FROM MAX_PLAN_FINISH) - 1) * INTERVAL '1 DAY')::DATE AS END_MONDAY
            FROM DATERANGE
        ),
        FIRSTANDLASTMONDAYS AS (
            SELECT 
                DATE_TRUNC('MONTH', START_MONDAY) + (1 - EXTRACT(DOW FROM DATE_TRUNC('MONTH', START_MONDAY))) * INTERVAL '1 DAY' AS FIRST_MONDAY_OF_MONTH,
                (DATE_TRUNC('MONTH', END_MONDAY) + INTERVAL '1 MONTH' - INTERVAL '1 DAY' - 
                (EXTRACT(DOW FROM (DATE_TRUNC('MONTH', END_MONDAY) + INTERVAL '1 MONTH' - INTERVAL '1 DAY')) - 1) * INTERVAL '1 DAY')::DATE AS LAST_MONDAY_OF_MONTH
            FROM ADJUSTEDDATES
        )
        SELECT TO_CHAR(WEEK_START, 'YYYY-MM-DD') AS WEEK_START
        FROM GENERATE_SERIES(
            (SELECT FIRST_MONDAY_OF_MONTH FROM FIRSTANDLASTMONDAYS),
            (SELECT LAST_MONDAY_OF_MONTH FROM FIRSTANDLASTMONDAYS),
            '1 WEEK'::INTERVAL
        ) AS WEEK_START;
     </select>
</mapper>