<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.ideait.platform.gaiacairos.mybatis.mappers.defecttracking.setting">
    <select	id="selectDeficientyPhaseList" parameterType="input" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.defecttracking.setting.selectDeficientyPhaseList][dhjung]  */
        <![CDATA[  
            SELECT ddp.dfccy_phase_no
                 , ddp.cntrct_no
                 , ddp.dfccy_phase_nm
                 , ddp.dsply_ordr
                 , MAX(dds.dfccy_phase_cd) FILTER (WHERE dds.dfccy_phase_cd = '0101') AS deficiency_cd 
                 , MAX(scc.cmn_cd_nm_krn) FILTER (WHERE dds.dfccy_phase_cd = '0101') AS deficiency_nm
                 , TO_CHAR(MAX(dds.bgn_date) FILTER (WHERE dds.dfccy_phase_cd = '0101'), 'YYYY-MM-DD') AS deficiency_bgn_date
                 , TO_CHAR(MAX(dds.end_date) FILTER (WHERE dds.dfccy_phase_cd = '0101'), 'YYYY-MM-DD') AS deficiency_end_date
                 , MAX(CASE WHEN CURRENT_DATE BETWEEN dds.bgn_date::DATE AND dds.end_date::DATE THEN 'ing'
                            WHEN CURRENT_DATE > dds.end_date::DATE THEN 'finish'
                            WHEN CURRENT_DATE < dds.bgn_date::DATE THEN 'waiting'
                       END) FILTER (WHERE dds.dfccy_phase_cd = '0101') AS deficiency_status
                 , MAX(dds.dfccy_phase_cd) FILTER (WHERE dds.dfccy_phase_cd = '0102') AS response_cd 
                 , MAX(scc.cmn_cd_nm_krn) FILTER (WHERE dds.dfccy_phase_cd = '0102') AS response_nm
                 , TO_CHAR(MAX(dds.bgn_date) FILTER (WHERE dds.dfccy_phase_cd = '0102'), 'YYYY-MM-DD') AS response_bgn_date
                 , TO_CHAR(MAX(dds.end_date) FILTER (WHERE dds.dfccy_phase_cd = '0102'), 'YYYY-MM-DD') AS response_end_date
                 , MAX(CASE WHEN CURRENT_DATE BETWEEN dds.bgn_date::DATE AND dds.end_date::DATE THEN 'ing'
                            WHEN CURRENT_DATE > dds.end_date::DATE THEN 'finish'
                            WHEN CURRENT_DATE < dds.bgn_date::DATE THEN 'waiting'
                       END) FILTER (WHERE dds.dfccy_phase_cd = '0102') AS response_status
                 , MAX(dds.dfccy_phase_cd) FILTER (WHERE dds.dfccy_phase_cd = '0103') AS confirm_cd  
                 , MAX(scc.cmn_cd_nm_krn) FILTER (WHERE dds.dfccy_phase_cd = '0103') AS confirm_nm
                 , TO_CHAR(MAX(dds.bgn_date) FILTER (WHERE dds.dfccy_phase_cd = '0103'), 'YYYY-MM-DD') AS confirm_bgn_date
                 , TO_CHAR(MAX(dds.end_date) FILTER (WHERE dds.dfccy_phase_cd = '0103'), 'YYYY-MM-DD') AS confirm_end_date
                 , MAX(CASE WHEN CURRENT_DATE BETWEEN dds.bgn_date::DATE AND dds.end_date::DATE THEN 'ing'
                            WHEN CURRENT_DATE > dds.end_date::DATE THEN 'finish'
                            WHEN CURRENT_DATE < dds.bgn_date::DATE THEN 'waiting'
                       END) FILTER (WHERE dds.dfccy_phase_cd = '0103') AS confirm_status
                 , MAX(dds.dfccy_phase_cd) FILTER (WHERE dds.dfccy_phase_cd = '0104') AS finish_cd  
                 , MAX(scc.cmn_cd_nm_krn) FILTER (WHERE dds.dfccy_phase_cd = '0104') AS finish_nm
                 , TO_CHAR(MAX(dds.bgn_date) FILTER (WHERE dds.dfccy_phase_cd = '0104'), 'YYYY-MM-DD') AS finish_bgn_date
                 , TO_CHAR(MAX(dds.end_date) FILTER (WHERE dds.dfccy_phase_cd = '0104'), 'YYYY-MM-DD') AS finish_end_date
                 , MAX(CASE WHEN CURRENT_DATE BETWEEN dds.bgn_date::DATE AND dds.end_date::DATE THEN 'ing'
                            WHEN CURRENT_DATE > dds.end_date::DATE THEN 'finish'
                            WHEN CURRENT_DATE < dds.bgn_date::DATE THEN 'waiting'
                       END) FILTER (WHERE dds.dfccy_phase_cd = '0104') AS finish_status
                 , CASE WHEN EXISTS (
                                SELECT 1
                                  FROM dt_deficiency d
                                 WHERE d.dfccy_phase_no = ddp.dfccy_phase_no
                                   AND d.dlt_yn = 'N'
                            ) THEN false
                        ELSE true
                   END AS delete_able
            ]]>
             FROM dt_deficiency_phase ddp
             JOIN dt_deficienty_schedule dds ON ddp.dfccy_phase_no = dds.dfccy_phase_no 
              AND dds.dlt_yn = 'N'
             JOIN sm_com_code scc ON scc.cmn_cd = dds.dfccy_phase_cd 
              AND scc.cmn_grp_cd = '4c3eda1d-3cdf-40a5-9874-1c70dfb6695d'
            WHERE ddp.dlt_yn = 'N'
              AND ddp.cntrct_no = #{cntrctNo}
          <if test="dfccyPhaseNo != null and dfccyPhaseNo != ''">
              AND ddp.dfccy_phase_no = #{dfccyPhaseNo}
          </if> 
         GROUP BY ddp.dfccy_phase_no, ddp.cntrct_no, ddp.dfccy_phase_nm, ddp.dsply_ordr
         ORDER BY dsply_ordr ASC;
    </select>     

     <select id="getDashboardList" parameterType="dashboardListInput" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.defecttracking.setting.getDashboardList][jhkim]  */
        <![CDATA[  
        SELECT 
                DDP.DFCCY_PHASE_NO,
                DDP.DFCCY_PHASE_NM,
                TO_CHAR(DDS.BGN_DATE::TIMESTAMP ,'YYYY-MM-DD') AS BGN_DATE,
                TO_CHAR(DDS.END_DATE::TIMESTAMP ,'YYYY-MM-DD') AS END_DATE,
                (SELECT COUNT(*) 
                FROM DT_DEFICIENCY DD2 
                WHERE DD2.RGSTR_ID = #{usrId}
                AND DDP.DFCCY_PHASE_NO = DD2.DFCCY_PHASE_NO 
                AND DD2.CNTRCT_NO = #{cntrctNo}
                AND DD2.DLT_YN = 'N') AS MY_COUNT,
                COUNT(DD.DFCCY_NO) AS TOTAL_COUNT,
                COALESCE(SUM(CASE WHEN DDR.RPLY_CD = '0201' THEN 1 ELSE 0 END), 0) AS REPLY_A_COUNT,
                COALESCE(SUM(CASE WHEN DDR.RPLY_CD = '0202' THEN 1 ELSE 0 END), 0) AS REPLY_D_COUNT,
                COALESCE(SUM(CASE WHEN DD.QA_CD = '0301' THEN 1 ELSE 0 END), 0) AS QA_P_COUNT,
                COALESCE(SUM(CASE WHEN DD.QA_CD = '0302' THEN 1 ELSE 0 END), 0) AS QA_H_COUNT,
                COALESCE(SUM(CASE WHEN DD.QA_CD = '0303' THEN 1 ELSE 0 END), 0) AS QA_C_COUNT,
                COALESCE(SUM(CASE WHEN DD.SPVS_CD = '0401' THEN 1 ELSE 0 END), 0) AS SPVS_P_COUNT,
                COALESCE(SUM(CASE WHEN DD.SPVS_CD = '0402' THEN 1 ELSE 0 END), 0) AS SPVS_H_COUNT,
                COALESCE(SUM(CASE WHEN DD.SPVS_CD = '0403' THEN 1 ELSE 0 END), 0) AS SPVS_C_COUNT,
                COALESCE(SUM(CASE WHEN DD.ED_CD = '0501' THEN 1 ELSE 0 END), 0) AS ED_P_COUNT,
                COALESCE(SUM(CASE WHEN DD.ED_CD = '0502' THEN 1 ELSE 0 END), 0) AS ED_C_COUNT,
                DDP.dsply_ordr
        FROM    DT_DEFICIENCY_PHASE DDP
        LEFT JOIN 
                DT_DEFICIENCY DD 
        ON      DDP.DFCCY_PHASE_NO = DD.DFCCY_PHASE_NO 
        AND     DD.CNTRCT_NO = #{cntrctNo}
        AND     DD.DLT_YN = 'N'
        LEFT JOIN 
                DT_DEFICIENTY_SCHEDULE DDS 
        ON      DDP.DFCCY_PHASE_NO = DDS.DFCCY_PHASE_NO
        AND     DDS.DFCCY_PHASE_CD = '0101'
        AND     DDS.DLT_YN = 'N'
        LEFT JOIN 
                DT_DEFICIENCY_REPLY DDR 
        ON      DD.DFCCY_NO = DDR.DFCCY_NO
        AND     DDR.DLT_YN = 'N' 
        WHERE   DDP.CNTRCT_NO = #{cntrctNo}
        AND     DDP.DLT_YN = 'N' 
        GROUP BY DDP.DFCCY_PHASE_NO, DDP.DFCCY_PHASE_NM, DDS.BGN_DATE, DDS.END_DATE, DDP.dsply_ordr
        ORDER BY DDP.dsply_ordr ASC
        ]]>
        <include refid="sqlx.commonPageable"></include>
    </select>   

    <select id="getDashboardListCount" parameterType="dashboardListInput" resultType="Long">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.defecttracking.setting.getDashboardListCount][jhkim]  */
        <![CDATA[  
        WITH dfccy_list AS (
                SELECT 
                        DDP.DFCCY_PHASE_NO,
                        DDP.DFCCY_PHASE_NM,
                        TO_CHAR(DDS.BGN_DATE::TIMESTAMP ,'YYYY-MM-DD') AS BGN_DATE,
                        TO_CHAR(DDS.END_DATE::TIMESTAMP ,'YYYY-MM-DD') AS END_DATE,
                        (SELECT COUNT(*) 
                        FROM DT_DEFICIENCY DD2 
                        WHERE DD2.RGSTR_ID = #{usrId}
                        AND DDP.DFCCY_PHASE_NO = DD2.DFCCY_PHASE_NO 
                        AND DD2.CNTRCT_NO = #{cntrctNo}
                        AND DD2.DLT_YN = 'N') AS MY_COUNT,
                        COUNT(DD.DFCCY_NO) AS TOTAL_COUNT,
                        COALESCE(SUM(CASE WHEN DDR.RPLY_CD = '0201' THEN 1 ELSE 0 END), 0) AS REPLY_A_COUNT,
                        COALESCE(SUM(CASE WHEN DDR.RPLY_CD = '0202' THEN 1 ELSE 0 END), 0) AS REPLY_D_COUNT,
                        COALESCE(SUM(CASE WHEN DD.QA_CD = '0301' THEN 1 ELSE 0 END), 0) AS QA_P_COUNT,
                        COALESCE(SUM(CASE WHEN DD.QA_CD = '0302' THEN 1 ELSE 0 END), 0) AS QA_H_COUNT,
                        COALESCE(SUM(CASE WHEN DD.QA_CD = '0303' THEN 1 ELSE 0 END), 0) AS QA_C_COUNT,
                        COALESCE(SUM(CASE WHEN DD.SPVS_CD = '0401' THEN 1 ELSE 0 END), 0) AS SPVS_P_COUNT,
                        COALESCE(SUM(CASE WHEN DD.SPVS_CD = '0402' THEN 1 ELSE 0 END), 0) AS SPVS_H_COUNT,
                        COALESCE(SUM(CASE WHEN DD.SPVS_CD = '0403' THEN 1 ELSE 0 END), 0) AS SPVS_C_COUNT,
                        COALESCE(SUM(CASE WHEN DD.ED_CD = '0403' THEN 1 ELSE 0 END), 0) AS ED_P_COUNT,
                        COALESCE(SUM(CASE WHEN DD.ED_CD = '0403' THEN 1 ELSE 0 END), 0) AS ED_C_COUNT
                FROM    DT_DEFICIENCY_PHASE DDP
                LEFT JOIN 
                        DT_DEFICIENCY DD 
                ON      DDP.DFCCY_PHASE_NO = DD.DFCCY_PHASE_NO 
                AND     DD.CNTRCT_NO = #{cntrctNo}
                AND     DD.DLT_YN = 'N'
                LEFT JOIN 
                        DT_DEFICIENTY_SCHEDULE DDS 
                ON      DDP.DFCCY_PHASE_NO = DDS.DFCCY_PHASE_NO
                AND     DDS.DFCCY_PHASE_CD = '0101'
                AND     DDS.DLT_YN = 'N'
                LEFT JOIN 
                        DT_DEFICIENCY_REPLY DDR 
                ON      DD.DFCCY_NO = DDR.DFCCY_NO
                AND     DDR.DLT_YN = 'N' 
                WHERE   DDP.CNTRCT_NO = #{cntrctNo}
                AND     DDP.DLT_YN = 'N' 
                GROUP BY DDP.DFCCY_PHASE_NO, DDP.DFCCY_PHASE_NM, DDS.BGN_DATE, DDS.END_DATE
        )
        SELECT  COUNT(*) AS total_count 
        FROM    dfccy_list
        ]]>
    </select>   
</mapper>
    

    
