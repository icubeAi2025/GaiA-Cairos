<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.ideait.platform.gaiacairos.mybatis.mappers.safety.educationdiary">

	<!--교육일지 목록조회-->
	<select id="selectEducationDiaryList" parameterType="educationDiaryListInput" resultType="educationDiaryListOutput">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.safety.educationdiary.selectEducationDiaryList][gwlee] */ 
		SELECT 		A.EDU_ID AS EDU_ID,
					A.ATCH_FILE_NO,
					TO_CHAR(CAST(A.EDU_DT AS DATE), 'YYYY-MM-DD') AS EDU_DT,
					C.CMN_CD_NM_KRN AS EDU_NM,
					(A.EDU_SURV_M + A.EDU_SURV_F) AS EDU_SURV,
					COALESCE(B.EDU_CNT, 0) AS EDU_CNT,
					COALESCE(TO_CHAR(A.CHG_DT, 'YYYY-MM-DD HH24:MI:SS'), TO_CHAR(A.RGST_DT, 'YYYY-MM-DD HH24:MI:SS')) AS CHG_DT,
					(
						SELECT 	COUNT(*)
						FROM 	CW_EDUCATION_DIARY A,
								SM_COM_CODE B
						WHERE 	A.EDU_TYPE = B.CMN_CD	
						AND 	A.CNTRCT_NO = #{cntrctNo}
						AND 	B.CMN_GRP_CD = #{cmnGrpCd}
						AND 	A.DLT_YN = 'N'
						AND 	B.DLT_YN = 'N'
						AND 	B.USE_YN = 'Y'
						<if test="searchYear != null and searchYear != ''">
						AND 	SUBSTRING(A.EDU_DT, 1, 4) = #{searchYear}
						</if>
						
						<if test="searchMonth != null and searchMonth != ''">
						AND 	SUBSTRING(A.EDU_DT, 5, 2) = #{searchMonth}
						</if>
						<if test="searchEduType != null and searchEduType != ''">
						AND 	A.EDU_TYPE = #{searchEduType}
						</if>
					) AS CNT
		FROM 		CW_EDUCATION_DIARY A
		LEFT JOIN 	(	
						SELECT 	EDU_ID AS EDU_ID,
								COUNT(*) AS EDU_CNT
						FROM 	CW_EDUCATION_DIARY_PERSONNEL
						WHERE 	DLT_YN = 'N'
						GROUP BY EDU_ID
					) AS B 
		ON 			A.EDU_ID = B.EDU_ID,
					SM_COM_CODE C
		WHERE 		A.EDU_TYPE = C.CMN_CD	
		AND 		A.CNTRCT_NO = #{cntrctNo}
		AND 		C.CMN_GRP_CD = #{cmnGrpCd}
		AND 		A.DLT_YN = 'N'
		AND 		C.DLT_YN = 'N'
		AND 		C.USE_YN = 'Y' 
		<if test="searchYear != null and searchYear != ''">
		AND 	SUBSTRING(A.EDU_DT, 1, 4) = #{searchYear}
		</if>
		
		<if test="searchMonth != null and searchMonth != ''">
		AND 	SUBSTRING(A.EDU_DT, 5, 2) = #{searchMonth}
		</if>
		<if test="searchEduType != null and searchEduType != ''">
		AND 	A.EDU_TYPE = #{searchEduType}
		</if>
		ORDER BY EDU_DT DESC
    </select>

	<!--교육일지 상세조회-->
	<select id="selectEducationDiary" parameterType="input" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.safety.educationdiary.selectEducationDiary][gwlee] */ 
		SELECT 		A.EDU_ID AS EDU_ID,
					C.CMN_CD AS CMN_CD,
					C.CMN_CD_NM_KRN AS EDU_TYPE_NM,
					A.EDU_RANK AS EDU_RANK,
					A.EDU_NM AS EDU_NM,
					TO_CHAR(CAST(A.EDU_DT AS DATE), 'YYYY-MM-DD') AS EDU_DT,
					A.EDU_SURV_M AS EDU_SURV_M,
					A.EDU_SURV_F AS EDU_SURV_F,
					A.EDU_SURV_NOTE AS EDU_SURV_NOTE,
					A.EDU_ACTI_M AS EDU_ACTI_M,
					A.EDU_ACTI_F AS EDU_ACTI_F,
					A.EDU_ACTI_NOTE AS EDU_ACTI_NOTE,
					A.EDU_NO_ACTI_M AS EDU_NO_ACTI_M,
					A.EDU_NO_ACTI_F AS EDU_NO_ACTI_F,
					A.EDU_NO_ACTI_NOTE AS EDU_NO_ACTI_NOTE,
					A.OUTLINE AS OUTLINE,
					A.SUBJECT AS SUBJECT,
					A.METHOD AS METHOD,
					A.TIME AS TIME,
					A.TEXTBOOK AS TEXTBOOK,
					A.LOCATION AS LOCATION,
					A.NOTE AS NOTE,
					A.ATCH_FILE_NO,
					B.EDU_VIC_SEQ AS EDU_VIC_SEQ,
					B.EDU_VIC_OCCU AS EDU_VIC_OCCU,
					B.EDU_VIC_NM AS EDU_VIC_NM 
		FROM 		CW_EDUCATION_DIARY A
		LEFT JOIN 	CW_EDUCATION_DIARY_PERSONNEL B 	
		ON 			A.EDU_ID = B.EDU_ID
		AND 		B.DLT_YN = 'N',
					SM_COM_CODE C
		WHERE 		A.EDU_TYPE = C.CMN_CD
		AND 		A.EDU_ID = #{eduId}
		AND 		C.CMN_GRP_CD = #{cmnGrpCd}
		AND 		A.DLT_YN = 'N'
		AND 		C.DLT_YN = 'N'
		AND 		C.USE_YN = 'Y'
		ORDER BY 	B.EDU_VIC_SEQ
    </select>

	<!--안전일지에서 링크 팝업 조회 시 같은 날 같은 종류의 교육구분 목록 조회-->
	<select id="selectEduTypeList" parameterType="input" resultType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.safety.educationdiary.selectEduTypeList][gwlee] */ 
		SELECT 	EDU_ID AS EDU_ID, 
				COALESCE(TO_CHAR(CHG_DT, 'YYYY-MM-DD HH24:MI:SS'), TO_CHAR(RGST_DT, 'YYYY-MM-DD HH24:MI:SS')) AS EDU_DT 
		FROM 	CW_EDUCATION_DIARY 
		WHERE 	(CNTRCT_NO, EDU_DT, EDU_TYPE) IN 	(	
														SELECT 	CNTRCT_NO, 
																EDU_DT, 
																EDU_TYPE 
														FROM 	CW_EDUCATION_DIARY 
														WHERE 	EDU_ID = #{eduId}
													)
		ORDER BY COALESCE(TO_CHAR(CHG_DT, 'YYYY-MM-DD HH24:MI:SS'), TO_CHAR(RGST_DT, 'YYYY-MM-DD HH24:MI:SS')) ASC
    </select>

	<!--교육일지 등록-->
	<insert id="insertEducationDiary" parameterType="input">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.safety.educationdiary.insertEducationDiary][gwlee] */ 
		INSERT INTO CW_EDUCATION_DIARY 	(	
											EDU_ID,
											CNTRCT_NO, 
											EDU_DT, 
											EDU_TYPE, 
											EDU_RANK, 
											EDU_NM, 
											EDU_SURV_M, 
											EDU_SURV_F, 
											EDU_SURV_NOTE, 
											EDU_ACTI_M, 
											EDU_ACTI_F, 
											EDU_ACTI_NOTE, 
											EDU_NO_ACTI_M, 
											EDU_NO_ACTI_F, 
											EDU_NO_ACTI_NOTE, 
											OUTLINE, 
											SUBJECT, 
											METHOD, 
											TIME, 
											TEXTBOOK, 
											LOCATION, 
											NOTE, 
											DLT_YN, 
											RGSTR_ID, 
											RGST_DT
										)
		VALUES 	(
					#{eduId},
					#{cntrctNo}, 
					TO_CHAR(CAST(#{eduDt} AS DATE), 'YYYYMMDD'), 
					#{eduType}, 
					#{eduRank}, 
					#{eduNm},
					#{eduSurvM}, 
					#{eduSurvF},
					#{eduSurvNote},
					#{eduActiM},
					#{eduActiF},
					#{eduActiNote},
					#{eduNoActiM},
					#{eduNoActiF},
					#{eduNoActiNote},
					#{outline},
					#{subject},
					#{method},
					#{time},
					#{textbook},
					#{location},
					#{note},
					'N',
					#{usrId},
					NOW()
				)
    </insert>

	<!--교육일지 수정-->
	<update id="updateEducationDiary" parameterType="input">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.safety.educationdiary.updateEducationDiary][gwlee] */ 
		UPDATE 	CW_EDUCATION_DIARY
		SET 	EDU_TYPE = #{eduType},
				EDU_RANK = #{eduRank},
				EDU_NM = #{eduNm},
				EDU_SURV_M = #{eduSurvM},
				EDU_SURV_F = #{eduSurvF},
				EDU_SURV_NOTE = #{eduSurvNote},
				EDU_ACTI_M = #{eduActiM},
				EDU_ACTI_F = #{eduActiF},
				EDU_ACTI_NOTE = #{eduActiNote},
				EDU_NO_ACTI_M = #{eduNoActiM},
				EDU_NO_ACTI_F = #{eduNoActiF},
				EDU_NO_ACTI_NOTE = #{eduNoActiNote},
				OUTLINE = #{outline},
				SUBJECT = #{subject},
				METHOD = #{method},
				TIME = #{time},
				TEXTBOOK = #{textbook},
				LOCATION = #{location},
				NOTE = #{note},
				CHG_ID = #{usrId},
				CHG_DT = NOW()
		WHERE 	EDU_ID = #{eduId}
    </update>

	<!--교육일지 교육참석자 등록-->
	<insert id="insertEducationDiaryPersonne" parameterType="input">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.safety.educationdiary.insertEducationDiaryPersonne][gwlee] */ 
		<foreach collection="list" item="item" separator=";">
		INSERT INTO CW_EDUCATION_DIARY_PERSONNEL 	(
														EDU_ID, 
														EDU_VIC_SEQ, 
														EDU_VIC_OCCU, 
														EDU_VIC_NM, 
														DLT_YN, 
														RGSTR_ID, 
														RGST_DT 
													)
		VALUES 	(
					#{item.eduId}, 
					(
						SELECT 	CASE 	WHEN COUNT(*) <![CDATA[>]]> 0 
											THEN MAX(EDU_VIC_SEQ)+1 
										ELSE 1
								END
						FROM 	CW_EDUCATION_DIARY_PERSONNEL 
						WHERE 	EDU_ID = #{item.eduId} 
					), 
					#{item.eduVicOccu}, 
					#{item.eduVicNm},
					'N',
			 		#{item.usrId},
					NOW()
				)		
      	</foreach>
    </insert>

	<!--교육일지 교육참석자 수정-->
	<update id="updateEducationDiaryPersonne" parameterType="input">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.safety.educationdiary.updateEducationDiaryPersonne][gwlee] */ 
		<foreach collection="list" item="item" separator=";">
		UPDATE 	CW_EDUCATION_DIARY_PERSONNEL
		SET 	EDU_VIC_OCCU = #{item.eduVicOccu},
				EDU_VIC_NM = #{item.eduVicNm},
				CHG_ID = #{item.usrId},
				CHG_DT = NOW()
		WHERE 	EDU_ID = #{item.eduId}
		AND 	EDU_VIC_SEQ = CAST(#{item.eduVicSeq} AS integer)
      	</foreach>
    </update>

	<!--교육일지 교육참석자 삭제-->
	<update id="deleteEducationDiaryPersonne" parameterType="input">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.safety.educationdiary.deleteEducationDiaryPersonne][gwlee] */ 
		UPDATE 	CW_EDUCATION_DIARY_PERSONNEL
		SET 	DLT_YN = 'Y',
				DLT_ID = #{usrId},
				DLT_DT = NOW()
		WHERE 	EDU_ID = #{eduId}
		AND  	DLT_YN = 'N'
		AND 	EDU_VIC_SEQ IN
		<foreach collection="eduVicSeqList" item="item" separator="," open="(" close=")">
				 CAST(#{item.eduVicSeq} AS integer)	
      	</foreach>
    </update>

	<!--교육일지 삭제(교육 참석자 포함 삭제)-->
	<update id="deleteEducationDiary" parameterType="input">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.safety.educationdiary.deleteEducationDiary][gwlee] */ 
		<foreach collection="list" item="item" index="index" separator=";">
		WITH PARENTS AS (
							UPDATE 	CW_EDUCATION_DIARY
							SET 	DLT_YN = 'Y',
									DLT_DT = NOW(),
									DLT_ID = #{item.usrId}
							WHERE 	EDU_ID = #{item.eduId}
							RETURNING *
						)
		UPDATE 	CW_EDUCATION_DIARY_PERSONNEL B
		SET 	DLT_YN = 'Y',
				DLT_DT = NOW(),
				DLT_ID = #{item.usrId}
		FROM 	PARENTS A
		WHERE 	A.EDU_ID = B.EDU_ID
		</foreach>
    </update>

    <!-- 교육일지 첨부파일 번호로 첨부파일 연결정보 업데이트 -->
    <update id="updateEducationDiaryAttachmentFileNo" parameterType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.safety.educationdiary.updateEducationDiaryAttachmentFileNo][gwlee] */
        UPDATE 	CW_EDUCATION_DIARY
        SET 	ATCH_FILE_NO = #{atchFileNo},
        		CHG_ID = #{usrId},
        		CHG_DT = NOW()
        WHERE 	EDU_ID = #{eduId}
        AND 	CNTRCT_NO = #{cntrctNo}
    </update>

	<!-- 교육일지 첨부파일 최대 파일번호 조회 -->
    <select id="selectEducationDiaryAttachmentMaxFileNo" resultType="int">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.safety.safetydiary.selectEducationDiaryAttachmentMaxFileNo] [gwlee] */
        SELECT COALESCE(MAX(FILE_NO), 0) + 1 AS MAX_FILE_NO
        FROM CW_ATTACHMENTS
    </select>

	<!-- 교육일지 첨부파일 최대 순번 조회 -->
    <select id="selectEducationDiaryAttachmentMaxSno" parameterType="map" resultType="int">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.safety.safetydiary.selectEducationDiaryAttachmentMaxSno] [gwlee] */
        SELECT COALESCE(MAX(SNO), 0) + 1 AS MAX_SNO
        FROM CW_ATTACHMENTS
        WHERE FILE_NO = #{fileNo}
    </select>

	<!-- 교육일지 첨부파일 추가 -->
    <insert id="insertEducationDiaryAttachmentFile" parameterType="kr.co.ideait.platform.gaiacairos.core.persistence.entity.CwAttachments">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.safety.safetydiary.insertEducationDiaryAttachmentFile] [gwlee] */
        INSERT INTO CW_ATTACHMENTS 	(
										FILE_NO,
										SNO,
										FILE_NM,
										FILE_DISK_NM,
										FILE_DISK_PATH,
										FILE_SIZE,
										FILE_HIT_NUM,
										DLT_YN,
										FILE_DIV,
										RGSTR_ID,
										RGST_DT,
										CHG_ID,
										CHG_DT
        							) 
		VALUES 	(
					#{fileNo},
					#{sno},
					#{fileNm},
					#{fileDiskNm},
					#{fileDiskPath},
					#{fileSize},
					0,
					'N',
					#{fileDiv},
					#{rgstrId},
					NOW(),
					#{chgId},
					NOW()
        		)
    </insert>

	<!-- 교육일지 첨부파일 논리 삭제 -->
    <update id="deleteEducationDiaryAttachmentFile" parameterType="map">
        /* [kr.co.ideait.platform.gaiacairos.mybatis.mappers.safety.safetydiary.deleteEducationDiaryAttachmentFile] [gwlee] */
        UPDATE CW_ATTACHMENTS
        SET 	DLT_YN = 'Y',
            	DLT_ID = #{usrId},
            	DLT_DT = NOW()
        WHERE 	FILE_NO = #{fileNo}
        AND 	FILE_DISK_NM = #{fileName}
    </update>

</mapper>